(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1406045,      25517]
NotebookOptionsPosition[   1400973,      25422]
NotebookOutlinePosition[   1401484,      25441]
CellTagsIndexPosition[   1401441,      25438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "TopoTB`"}]], "Code",
 CellChangeTimes->{
  3.9153126934619865`*^9, 3.915410312669555*^9, 3.9156135980145836`*^9, {
   3.9156224193770194`*^9, 3.9156224309785795`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"120bc86f-99f2-4371-9e3c-11c122df7879"],

Cell[CellGroupData[{

Cell["Band", "Subsubsection",
 CellChangeTimes->{{3.915071206965249*^9, 
  3.91507120760465*^9}},ExpressionUUID->"fa4c04cc-e4ba-41ca-aa38-\
cd6124b341bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "VASPBand"}]], "Code",
 CellChangeTimes->{{3.91507169285299*^9, 3.9150716954811225`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"dcafb7bb-0af5-4f73-8745-48c28e439be6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VASPBand[POSCAR_,KPOINTS_,EIGENVAL_,EFermi_:0,ISPIN:\
(1|2):1,SOC:(1|2):1,ExportFileName_:\\\"BAND.dat\\\"]\\n\\nInput:\\nPOSCAR: \
Import POSCAR files.\\nKPOINTS: Import KPOINTS files.\\nEIGENVAL: Import \
EIGENVAL files.\\nEFermi: Input Fermi level. The default value is 0.\\nISPIN: \
Corresponding to spin polarization in VASP. The default value is 1.\\nSOC: \
SOC=1, not considering SOC; SOC=2, considering SOC.\\nExportFileName: Export \
file name. The default value is \
\\\"BAND.dat\\\".\\n\\nOutput\:ff1a\\nDirectLatticeVector: Lattice Vectors \
(Ang).\\nReciprocalLatticeVector: Reciprocal-Space Vectors \
(Ang^-1).\\nTheNumberOfBands: Number of bands.\\nTheNumberOfKPoints: Number \
of K-points.\\nKLabel: The position of high-symmetry points along \
high-symmetry paths.\\nBandDataToColumns: Provide data \
explanation.\\nBandData: Band data.\\nSavePath: Save Path.\\nExportData: \
Export data.\\n\\nExample:\\nSetDirectory[FileNameTake[NotebookFileName[],{1,-\
2}]];\\nposcar=Import[\\\"POSCAR\\\",\\\"Table\\\"];\\nkpoints=Import[\\\"\
KPOINTS\\\",\\\"Table\\\"]; \
\\neigenval=Import[\\\"EIGENVAL\\\",\\\"Table\\\"];\\nefermi=-1.7400;\\\
nVASPBand[poscar,kpoints,eigenval,efermi,1,\\\"Band.dat\\\"]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"VASPBand", "[", 
                    
                    RowBox[{
                    "Private`POSCAR_", ",", "Private`KPOINTS_", ",", 
                    "Private`EIGENVAL_", ",", 
                    RowBox[{"Private`EFermi_", ":", "0"}], ",", 
                    RowBox[{"Private`ISPIN", ":", 
                    RowBox[{"1", "|", "2"}], ":", "1"}], ",", 
                    RowBox[{"Private`SOC", ":", 
                    RowBox[{"1", "|", "2"}], ":", "1"}], ",", 
                    
                    RowBox[{
                    "Private`ExportFileName_", ":", "\"BAND.dat\""}]}], "]"}],
                     ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`poscar", ",", "Private`kpoints", ",", 
                    "Private`eigenval", ",", "Private`efermi", ",", 
                    "Private`ispin", ",", "Private`nkpts", ",", 
                    "Private`nbands", ",", "Private`PKPTS", ",", 
                    "Private`KPTS", ",", "Private`kpt1", ",", "Private`kpt2", 
                    ",", "Private`kpt3", ",", "Private`kpt4", ",", 
                    "Private`kpt5", ",", "Private`a", ",", "Private`b", ",", 
                    "Private`c", ",", "Private`abc", ",", 
                    "Private`\[CapitalOmega]", ",", "Private`BZa", ",", 
                    "Private`BZb", ",", "Private`BZc", ",", "Private`BZabc", 
                    ",", "Private`kpt", ",", "Private`dd", ",", 
                    "Private`kptband", ",", "Private`column", ",", 
                    "Private`band", ",", "Private`tband", ",", "Private`KPT", 
                    ",", "Private`KK", ",", "Private`data0", ",", 
                    "Private`banddata", ",", "Private`path", ",", 
                    "Private`ds"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Private`poscar", "=", "Private`POSCAR"}], ";", 
                    RowBox[{"Private`kpoints", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"Private`KPOINTS", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Characters", "[", "#1", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", "\"#\""}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"Private`eigenval", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"Private`EIGENVAL", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"Private`efermi", "=", "Private`EFermi"}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Private`SOC", ",", "1", ",", 
                    RowBox[{"Private`ispin", "=", "Private`ISPIN"}], ",", "2",
                     ",", 
                    RowBox[{"Private`ispin", "=", "1"}]}], "]"}], ";", 
                    RowBox[{"Private`nkpts", "=", 
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{"6", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`nbands", "=", 
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{"6", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`PKPTS", "=", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`KPTS", "=", 
                    FractionBox["Private`nkpts", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]]}], 
                    ";", 
                    RowBox[{"Private`kpt1", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    "]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"\"GAMMA\"", "\[Rule]", "\"\[CapitalGamma]\""}], 
                    "}"}]}]}], ";", 
                    RowBox[{"Private`kpt2", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", " ", "Private`i"}], 
                    "\[RightDoubleBracket]"}], "]"}], "<>", "\"|\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", " ", "Private`i"}], "+", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", 
                    RowBox[{"Private`KPTS", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", " ", "Private`KPTS"}], 
                    "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Private`kpt3", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"Private`kpt2", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`x", ":", 
                    RowBox[{"(", 
                    RowBox[{"LetterCharacter", ".."}], ")"}]}], "~~", "\"|\"",
                     "~~", 
                    RowBox[{"Private`x", ":", 
                    RowBox[{"(", 
                    RowBox[{"LetterCharacter", ".."}], ")"}]}]}], "\[Rule]", 
                    "Private`x"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Private`kpt4", "=", 
                    RowBox[{"StringCount", "[", 
                    RowBox[{"Private`kpt3", ",", 
                    
                    RowBox[{"RegularExpression", "[", "\"\\\\W\\\\D\"", 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"Private`kpt5", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"Private`kpt4", ",", "1"}], "]"}], ",", "1"}], 
                    "]"}]}], ";", 
                    RowBox[{"Private`a", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`b", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`c", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`abc", "=", 
                    RowBox[{"{", 
                    RowBox[{"Private`a", ",", "Private`b", ",", "Private`c"}],
                     "}"}]}], ";", 
                    RowBox[{"Private`\[CapitalOmega]", "=", 
                    RowBox[{"Private`a", ".", 
                    RowBox[{"Private`b", "\[Cross]", "Private`c"}]}]}], ";", 
                    RowBox[{"Private`BZa", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`b", "\[Cross]", "Private`c"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZb", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`c", "\[Cross]", "Private`a"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZc", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`a", "\[Cross]", "Private`b"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZabc", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"Private`BZa", ",", "Private`BZb", ",", 
                    "Private`BZc"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "Private`k_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{"7", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`nbands", "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", "Private`BZa"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{"7", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`nbands", "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", "Private`BZb"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{"7", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`nbands", "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], " ", "Private`BZc"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "0", "]"}], "=", 
                    RowBox[{"Private`kpt", "[", "1", "]"}]}], ";", 
                    RowBox[{"Private`dd", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "Private`k", "]"}], "-", 
                    RowBox[{"Private`kpt", "[", 
                    RowBox[{"Private`k", "-", "1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`k", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`dd", "\[LeftDoubleBracket]", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{"Private`kpt5", "\[LeftDoubleBracket]", 
                    "Private`i", "\[RightDoubleBracket]"}], "-", "1"}], ")"}],
                     " ", "Private`PKPTS"}]}], "\[RightDoubleBracket]"}], "=",
                     "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", 
                    RowBox[{"Length", "[", "Private`kpt5", "]"}]}], "}"}]}], 
                    "]"}], "/;", 
                    RowBox[{"Private`kpt5", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}]}], ";", 
                    RowBox[{"Private`kptband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Private`dd", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "Private`k"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`k", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`ispin", "\[Equal]", "2"}], ",", 
                    RowBox[{"Private`column", "=", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}]}], ",", 
                    RowBox[{"Private`column", "=", 
                    RowBox[{"{", "2", "}"}]}]}], "]"}], ";", 
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`band", ",", "Private`nbands"}], "]"}], 
                    ";", 
                    RowBox[{"Private`tband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`band", "[", "Private`i", "]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Private`kptband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"Private`eigenval", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"7", "+", "Private`i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`nbands", "+", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", 
                    "Private`column"}], "\[RightDoubleBracket]"}], "-", 
                    "Private`efermi"}]}], "}"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`j", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`KPT", ",", "Private`KPTS"}], "]"}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "Private`i", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`band", "[", "1", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", "Private`i"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`KPTS"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"Private`KK", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "Private`i", "]"}], ",", 
                    RowBox[{"Private`kpt3", "\[LeftDoubleBracket]", 
                    RowBox[{"Private`i", "+", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`KPTS"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`KK", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "0", "]"}], "=", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`band", "[", "1", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    
                    RowBox[{"Private`kpt3", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`ispin", "\[Equal]", "2"}], ",", 
                    RowBox[{"Private`data0", "=", 
                    RowBox[{"PositionIndex", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"K-Path(1/\[Angstrom])\"", ",", 
                    "\"Energy(spin up)(eV)\"", ",", 
                    "\"Energy(spin down)(eV)\""}], "}"}], "]"}]}], ",", 
                    RowBox[{"Private`data0", "=", 
                    RowBox[{"PositionIndex", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"K-Path(1/\[Angstrom])\"", ",", 
                    "\"Energy(eV)\""}], "}"}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"Private`path", "=", 
                    RowBox[{"SetDirectory", "[", 
                    RowBox[{"FileNameTake", "[", 
                    RowBox[{
                    RowBox[{"NotebookFileName", "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Private`banddata", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Private`band", "[", "Private`i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Private`banddata", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# Band Index   \"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`n", "+", "1"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Private`nkpts", "+", "1"}], "}"}], " ", 
                    "Private`n"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`n", ",", "1", ",", 
                    RowBox[{"Private`nbands", "-", "1"}]}], "}"}]}], "]"}], 
                    ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# Band Index   \"", "<>", 
                    RowBox[{"ToString", "[", "1", "]"}]}], "}"}]}], "]"}], 
                    ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# High Symmetry Points   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`KK", "]"}]}], "}"}]}], 
                    "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# The Number Of KPoints   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`nkpts", "]"}]}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# The Number Of Bands   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`nbands", "]"}]}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`banddata", ",", 
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"\"# \"", "<>", 
                    RowBox[{"StringDelete", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Keys", "[", "Private`data0", "]"}], "]"}], ",", 
                    RowBox[{"\",\"", "\[Rule]", "\"   \""}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"{\"", ",", "\"}\""}], "}"}]}], "]"}]}], ",", 
                    "\"   \""}], "]"}]}], "]"}], ";", 
                    RowBox[{"Private`banddata", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "14"}], "}"}], ",", 
                    RowBox[{"NumberPadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\" \"", ",", "\"0\""}], "}"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Private`banddata", ",", "14"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"DirectLatticeVector\"", "\[Rule]", 
                    "Private`abc"}], ",", 
                    
                    RowBox[{"\"ReciprocalLatticeVector\"", "\[Rule]", 
                    "Private`BZabc"}], ",", 
                    
                    RowBox[{"\"TheNumberOfBands\"", "\[Rule]", 
                    "Private`nbands"}], ",", 
                    
                    RowBox[{"\"TheNumberOfKPoints\"", "\[Rule]", 
                    "Private`nkpts"}], ",", 
                    RowBox[{"\"KLabel\"", "\[Rule]", "Private`KK"}], ",", 
                    
                    RowBox[{"\"BandDataToColumns\"", "\[Rule]", 
                    "Private`data0"}], ",", 
                    RowBox[{"\"BandData\"", "\[Rule]", "Private`tband"}], ",", 
                    RowBox[{"\"SavePath\"", "\[Rule]", "Private`path"}], ",", 
                    RowBox[{"\"ExportData\"", "\[Rule]", 
                    RowBox[{"Export", "[", 
                    
                    RowBox[{"Private`ExportFileName", ",", 
                    "Private`banddata"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"DatasetTheme", "\[Rule]", 
                    RowBox[{"{", "\"Serif\"", "}"}]}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TopoTB`VASP`VASPBand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VASPBand[POSCAR_,KPOINTS_,EIGENVAL_,EFermi_:0,ISPIN:\
(1|2):1,SOC:(1|2):1,ExportFileName_:\\\"BAND.dat\\\"]\\n\\nInput:\\nPOSCAR: \
Import POSCAR files.\\nKPOINTS: Import KPOINTS files.\\nEIGENVAL: Import \
EIGENVAL files.\\nEFermi: Input Fermi level. The default value is 0.\\nISPIN: \
Corresponding to spin polarization in VASP. The default value is 1.\\nSOC: \
SOC=1, not considering SOC; SOC=2, considering SOC.\\nExportFileName: Export \
file name. The default value is \
\\\"BAND.dat\\\".\\n\\nOutput\:ff1a\\nDirectLatticeVector: Lattice Vectors \
(Ang).\\nReciprocalLatticeVector: Reciprocal-Space Vectors \
(Ang^-1).\\nTheNumberOfBands: Number of bands.\\nTheNumberOfKPoints: Number \
of K-points.\\nKLabel: The position of high-symmetry points along \
high-symmetry paths.\\nBandDataToColumns: Provide data \
explanation.\\nBandData: Band data.\\nSavePath: Save Path.\\nExportData: \
Export data.\\n\\nExample:\\nSetDirectory[FileNameTake[NotebookFileName[],{1,-\
2}]];\\nposcar=Import[\\\"POSCAR\\\",\\\"Table\\\"];\\nkpoints=Import[\\\"\
KPOINTS\\\",\\\"Table\\\"]; \
\\neigenval=Import[\\\"EIGENVAL\\\",\\\"Table\\\"];\\nefermi=-1.7400;\\\
nVASPBand[poscar,kpoints,eigenval,efermi,1,\\\"Band.dat\\\"]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "VASPBand[POSCAR_,KPOINTS_,EIGENVAL_,EFermi_:0,ISPIN:(1|2):1,SOC:(1|2):1,\
ExportFileName_:\"BAND.dat\"]\n\nInput:\nPOSCAR: Import POSCAR files.\n\
KPOINTS: Import KPOINTS files.\nEIGENVAL: Import EIGENVAL files.\nEFermi: \
Input Fermi level. The default value is 0.\nISPIN: Corresponding to spin \
polarization in VASP. The default value is 1.\nSOC: SOC=1, not considering \
SOC; SOC=2, considering SOC.\nExportFileName: Export file name. The default \
value is \"BAND.dat\".\n\nOutput\:ff1a\nDirectLatticeVector: Lattice Vectors \
(Ang).\nReciprocalLatticeVector: Reciprocal-Space Vectors (Ang^-1).\n\
TheNumberOfBands: Number of bands.\nTheNumberOfKPoints: Number of K-points.\n\
KLabel: The position of high-symmetry points along high-symmetry paths.\n\
BandDataToColumns: Provide data explanation.\nBandData: Band data.\nSavePath: \
Save Path.\nExportData: Export data.\n\nExample:\n\
SetDirectory[FileNameTake[NotebookFileName[],{1,-2}]];\n\
poscar=Import[\"POSCAR\",\"Table\"];\nkpoints=Import[\"KPOINTS\",\"Table\"]; \
\neigenval=Import[\"EIGENVAL\",\"Table\"];\nefermi=-1.7400;\n\
VASPBand[poscar,kpoints,eigenval,efermi,1,\"Band.dat\"]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TopoTB`VASP`VASPBand, {TopoTB`VASP`VASPBand[
         Pattern[Private`POSCAR, 
          Blank[]], 
         Pattern[Private`KPOINTS, 
          Blank[]], 
         Pattern[Private`EIGENVAL, 
          Blank[]], 
         Optional[
          Pattern[Private`EFermi, 
           Blank[]], 0], 
         Optional[
          Pattern[Private`ISPIN, 
           Alternatives[1, 2]], 1], 
         Optional[
          Pattern[Private`SOC, 
           Alternatives[1, 2]], 1], 
         Optional[
          Pattern[Private`ExportFileName, 
           Blank[]], "BAND.dat"]] :> 
       Module[{Private`poscar, Private`kpoints, Private`eigenval, 
          Private`efermi, Private`ispin, Private`nkpts, Private`nbands, 
          Private`PKPTS, Private`KPTS, Private`kpt1, Private`kpt2, 
          Private`kpt3, Private`kpt4, Private`kpt5, Private`a, Private`b, 
          Private`c, Private`abc, Private`\[CapitalOmega], Private`BZa, 
          Private`BZb, Private`BZc, Private`BZabc, Private`kpt, Private`dd, 
          Private`kptband, Private`column, Private`band, Private`tband, 
          Private`KPT, Private`KK, Private`data0, Private`banddata, 
          Private`path, Private`ds}, Private`poscar = Private`POSCAR; 
         Private`kpoints = Select[Private`KPOINTS, And[# != {}, Part[
               Characters[#], 1, 1] != "#"]& ]; 
         Private`eigenval = Select[Private`EIGENVAL, # != {}& ]; 
         Private`efermi = Private`EFermi; 
         Switch[Private`SOC, 1, Private`ispin = Private`ISPIN, 2, 
           Private`ispin = 1]; Private`nkpts = Part[Private`eigenval, 6, 2]; 
         Private`nbands = Part[Private`eigenval, 6, 3]; 
         Private`PKPTS = Part[Private`kpoints, 2, 1]; 
         Private`KPTS = Private`nkpts/Part[Private`kpoints, 2, 1]; 
         Private`kpt1 = ReplaceAll[
            Part[
             Transpose[
              Part[Private`kpoints, 
               Span[5, All]]], 4], {"GAMMA" -> "\[CapitalGamma]"}]; 
         Private`kpt2 = Join[{
             Part[Private`kpt1, 1]}, 
            Table[ToString[
               Part[Private`kpt1, 2 Private`i]] <> "|" <> ToString[
               Part[Private`kpt1, 2 Private`i + 1]], {
             Private`i, 1, Private`KPTS - 1}], {
             Part[Private`kpt1, 2 Private`KPTS]}]; Private`kpt3 = Quiet[
            StringReplace[Private`kpt2, StringExpression[
               Pattern[Private`x, 
                Repeated[LetterCharacter]], "|", 
               Pattern[Private`x, 
                Repeated[LetterCharacter]]] -> Private`x]]; 
         Private`kpt4 = StringCount[Private`kpt3, 
            RegularExpression["\\W\\D"]]; Private`kpt5 = Flatten[
            Position[Private`kpt4, 1], 1]; 
         Private`a = Part[Private`poscar, 3]; 
         Private`b = Part[Private`poscar, 4]; 
         Private`c = Part[Private`poscar, 5]; 
         Private`abc = {Private`a, Private`b, Private`c}; 
         Private`\[CapitalOmega] = Dot[Private`a, 
            Cross[Private`b, Private`c]]; 
         Private`BZa = 
          2 Pi (Cross[Private`b, Private`c]/Private`\[CapitalOmega]); 
         Private`BZb = 
          2 Pi (Cross[Private`c, Private`a]/Private`\[CapitalOmega]); 
         Private`BZc = 
          2 Pi (Cross[Private`a, Private`b]/Private`\[CapitalOmega]); 
         Private`BZabc = {Private`BZa, Private`BZb, Private`BZc}; Private`kpt[
            Pattern[Private`k, 
             Blank[]]] := Part[
              Part[
              Private`eigenval, 7 + (Private`nbands + 1) (Private`k - 1)], 1] 
            Private`BZa + Part[
              Part[
              Private`eigenval, 7 + (Private`nbands + 1) (Private`k - 1)], 2] 
            Private`BZb + Part[
              Part[
              Private`eigenval, 7 + (Private`nbands + 1) (Private`k - 1)], 3] 
            Private`BZc; Private`kpt[0] = Private`kpt[1]; Private`dd = Table[
            Norm[Private`kpt[Private`k] - Private`kpt[Private`k - 1]], {
            Private`k, 1, Private`nkpts}]; Condition[
           Table[
           Part[Private`dd, 
              1 + (Part[Private`kpt5, Private`i] - 1) Private`PKPTS] = 0, {
            Private`i, 1, 
             Length[Private`kpt5]}], Private`kpt5 != {}]; 
         Private`kptband = Table[
            Total[
             Part[Private`dd, 
              Span[1, Private`k]]], {Private`k, 1, Private`nkpts}]; 
         If[Private`ispin == 2, Private`column = {2, 3}, 
           Private`column = {2}]; Array[Private`band, Private`nbands]; 
         Private`tband = Table[Private`band[Private`i] = Table[
              Flatten[{
                Part[Private`kptband, Private`j], 
                Part[Private`eigenval, 7 + 
                  Private`i + (Private`nbands + 1) (Private`j - 1), 
                  Private`column] - Private`efermi}, 1], {
              Private`j, 1, Private`nkpts}], {Private`i, 1, Private`nbands}]; 
         Array[Private`KPT, Private`KPTS]; Table[Private`KPT[Private`i] = Part[
             Part[
              Transpose[
               Private`band[1]], 1, Part[Private`kpoints, 2] Private`i], 1], {
           Private`i, 1, Private`KPTS}]; Private`KK = Table[{
             Private`KPT[Private`i], 
             Part[Private`kpt3, Private`i + 1]}, {
            Private`i, 1, Private`KPTS}]; 
         PrependTo[Private`KK, {Private`KPT[0] = Part[
              Transpose[
               Private`band[1]], 1, 1], 
            Part[Private`kpt3, 1]}]; 
         If[Private`ispin == 2, Private`data0 = 
           PositionIndex[{
             "K-Path(1/\[Angstrom])", "Energy(spin up)(eV)", 
              "Energy(spin down)(eV)"}], Private`data0 = 
           PositionIndex[{"K-Path(1/\[Angstrom])", "Energy(eV)"}]]; 
         Private`path = SetDirectory[
            FileNameTake[
             NotebookFileName[], {1, -2}]]; Private`banddata = Flatten[
            Table[
             Private`band[Private`i], {Private`i, 1, Private`nbands}], 1]; 
         Table[Private`banddata = 
           Insert[Private`banddata, {
             "# Band Index   " <> ToString[Private`n + 1]}, {
              Private`nkpts + 1} Private`n], {
           Private`n, 1, Private`nbands - 1}]; 
         PrependTo[Private`banddata, {"# Band Index   " <> ToString[1]}]; 
         PrependTo[
          Private`banddata, {
           "# High Symmetry Points   " <> ToString[Private`KK]}]; 
         PrependTo[
          Private`banddata, {
           "# The Number Of KPoints   " <> ToString[Private`nkpts]}]; 
         PrependTo[
          Private`banddata, {
           "# The Number Of Bands   " <> ToString[Private`nbands]}]; 
         PrependTo[Private`banddata, 
           StringSplit["# " <> StringDelete[
              StringReplace[
               ToString[
                Keys[Private`data0]], "," -> "   "], {"{", "}"}], "   "]]; 
         Private`banddata = 
          Map[NumberForm[#, {16, 14}, NumberPadding -> {" ", "0"}]& , 
            N[Private`banddata, 14], {-1}]; 
         Dataset[<|
           "DirectLatticeVector" -> Private`abc, "ReciprocalLatticeVector" -> 
            Private`BZabc, "TheNumberOfBands" -> Private`nbands, 
            "TheNumberOfKPoints" -> Private`nkpts, "KLabel" -> Private`KK, 
            "BandDataToColumns" -> Private`data0, "BandData" -> Private`tband,
             "SavePath" -> Private`path, "ExportData" -> 
            Export[Private`ExportFileName, Private`banddata]|>, 
           DatasetTheme -> {"Serif"}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TopoTB`VASP`VASPBand"|>, False]]], "Output",
 CellChangeTimes->{
  3.9150716962354736`*^9, 3.915071875083889*^9, 3.915071965850828*^9, 
   3.915072035050619*^9, 3.9150721361921387`*^9, 3.915072316308669*^9, 
   3.9150723533438473`*^9, 3.915072416119052*^9, 3.9150724874957895`*^9, 
   3.915072538075815*^9, 3.91507274313375*^9, 3.915072787934737*^9, 
   3.915072960523708*^9, 3.9150732988912945`*^9, 3.915073670885425*^9, 
   3.91507385926348*^9, 3.915074377229226*^9, 3.915074592487872*^9, 
   3.9150746604226527`*^9, 3.9151350590726156`*^9, 3.9151355556092453`*^9, 
   3.9151356519625835`*^9, 3.915135776283826*^9, 3.9151364883433933`*^9, 
   3.915136577022293*^9, 3.915141745806898*^9, 3.9151418966478996`*^9, 
   3.9151422558673244`*^9, 3.9151425328602805`*^9, 3.915142703833519*^9, 
   3.9151428412196655`*^9, 3.915142920853118*^9, 3.915147702414093*^9, 
   3.9151513522057366`*^9, 3.915152004294039*^9, 3.9151533366904163`*^9, 
   3.9151534975081215`*^9, 3.915153585253022*^9, 3.9151544429125195`*^9, 
   3.915162547789731*^9, 3.9151634226335945`*^9, 3.9151761541860223`*^9, 
   3.915176714801236*^9, 3.915180424222308*^9, 3.9153125825455403`*^9, 
   3.9153147762253923`*^9, 3.915316085953688*^9, 3.9153185201882143`*^9, 
   3.9153188212250557`*^9, 3.9153203115732956`*^9, 3.915320471090148*^9, 
   3.915320799171461*^9, 3.915410328164152*^9, 3.915412541495998*^9, 
   3.9154145921105394`*^9, 3.9156224434859657`*^9, {3.915622602741088*^9, 
   3.9156226086116896`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"372c6170-6622-4439-b1dd-4933f0cf8f5e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameTake", "[", 
     RowBox[{
      RowBox[{"NotebookFileName", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"poscar", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<POSCAR\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kpoints", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<KPOINTS\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eigenval", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<EIGENVAL\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"efermi", "=", 
   RowBox[{"-", "2.0707"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.915071262933255*^9, 3.915071284596309*^9}, {
   3.915071631861065*^9, 3.9150716383893485`*^9}, {3.915071681892747*^9, 
   3.9150716847416553`*^9}, {3.9150724262607946`*^9, 3.9150724285494347`*^9}, 
   3.915075845069336*^9, 3.915153590342098*^9, {3.915176724104475*^9, 
   3.9151767325293617`*^9}, {3.915312625975416*^9, 3.915312632535*^9}, 
   3.915314832622979*^9, {3.915413204614716*^9, 3.9154132188557463`*^9}, {
   3.9154146038541374`*^9, 3.915414605646345*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"88a832bf-feef-47d7-9737-a0ffe95f9284"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ISPIN", "=", "2"}], ",", 
    RowBox[{"SOC", "=", "1"}]}], "*)"}], "\n", 
  RowBox[{"ds", "=", 
   RowBox[{"VASPBand", "[", 
    RowBox[{
    "poscar", ",", "kpoints", ",", "eigenval", ",", "efermi", ",", "2", ",", 
     "1", ",", "\"\<Band.dat\>\""}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9150714047165356`*^9, 3.9150714251380606`*^9}, {
  3.915071703542716*^9, 3.9150717118530045`*^9}, {3.915072438190914*^9, 
  3.9150724454840093`*^9}, {3.9150744045011783`*^9, 3.9150744069723673`*^9}, {
  3.9150745230614696`*^9, 3.9150745233247647`*^9}, {3.915074703940449*^9, 
  3.9150747042452602`*^9}, {3.9151350792396603`*^9, 3.9151350795364876`*^9}, {
  3.9151352100738373`*^9, 3.9151352150013204`*^9}, {3.9151357904991016`*^9, 
  3.915135790640512*^9}, {3.91517616740679*^9, 3.9151762034490013`*^9}, {
  3.9151804310493565`*^9, 3.915180436679925*^9}, {3.915312634887743*^9, 
  3.9153126368305817`*^9}, {3.9153148562294874`*^9, 3.9153148672789392`*^9}, {
  3.9153208078375177`*^9, 3.9153208115807676`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"198eb38e-4025-4439-80e7-59f7ef4f7cae"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6124441350542848603705698643838481448160079741411306542080], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"BandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"BandData"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001]|>, 1], 
         "InitialType" -> 
         TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "BandDataToColumns", "BandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "Energy(spin down)(eV)", "Energy(spin up)(eV)", 
               "K-Path(1/\[Angstrom])"]], 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 3], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 
         "Meta" -> <|DatasetTheme -> {"Serif"}|>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"BandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"BandData"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001]|>, 1], 
         "Type" -> TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "BandDataToColumns", "BandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "Energy(spin down)(eV)", "Energy(spin up)(eV)", 
               "K-Path(1/\[Angstrom])"]], 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 3], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 
         20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 9, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DirectLatticeVector", 
                    Style[
                    "DirectLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["DirectLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["DirectLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["DirectLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["DirectLatticeVector"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ReciprocalLatticeVector", 
                    Style[
                    "ReciprocalLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["ReciprocalLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["ReciprocalLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["ReciprocalLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["ReciprocalLatticeVector"]}, "Item", False], "Mouse"],
                   ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfBands", 
                    Style[
                    "TheNumberOfBands", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["TheNumberOfBands"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["TheNumberOfBands"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["TheNumberOfBands"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfKPoints", 
                    Style[
                    "TheNumberOfKPoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["TheNumberOfKPoints"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["TheNumberOfKPoints"]}, "RowHeader", False], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["800"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["TheNumberOfKPoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["KLabel", 
                    Style[
                    "KLabel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["KLabel"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["KLabel"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["KLabel"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["KLabel"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["BandDataToColumns", 
                    Style[
                    "BandDataToColumns", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["BandDataToColumns"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["BandDataToColumns"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"K-Path(1/\[Angstrom])", "Energy(spin up)(eV)", 
                    "Energy(spin down)(eV)"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    Row[{"K-Path(1/\[Angstrom])", "Energy(spin up)(eV)", 
                    "Energy(spin down)(eV)"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["BandDataToColumns"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["BandDataToColumns"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["BandData", 
                    Style[
                    "BandData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["BandData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["BandData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 12], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 12], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["BandData"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["BandData"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["SavePath", 
                    Style[
                    "SavePath", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["SavePath"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["SavePath"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                  "C:\\Users\\Administrator\\OneDrive - mail.ustc.edu.cn\\\
\:684c\:9762\\TopoTB\\examples\\3-data_processing\\VASP-LaH2\\withoutSOC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["SavePath"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExportData", 
                    Style[
                    "ExportData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][{
                    Key["ExportData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["ExportData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["Band.dat", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][{
                    Key["ExportData"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0", {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  "5339dea4-4cf3-4c4f-82f5-61f1940da4b0"][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {857., {126.13403328722342`, 131.86596671277658`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {857., {126.13403328722342`, 131.86596671277658`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6124441350542848603705698643838481448160079741411306542080,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.915071428761337*^9, 3.9150714718136597`*^9, 3.915071630102282*^9, 
   3.9150717129523993`*^9, 3.9150718783575563`*^9, 3.9150723612207203`*^9, {
   3.9150724221036677`*^9, 3.9150724465672274`*^9}, 3.915072879800618*^9, 
   3.915072973094339*^9, 3.91507330429778*^9, 3.9150736749877872`*^9, 
   3.9150738625457067`*^9, 3.915074380919861*^9, 3.915074415969227*^9, 
   3.9150745249937377`*^9, {3.9150746760597563`*^9, 3.9150747060238247`*^9}, {
   3.9151350665600843`*^9, 3.9151350933870325`*^9}, 3.915135216212858*^9, 
   3.91513555960772*^9, 3.9151356557886972`*^9, {3.9151357803672028`*^9, 
   3.9151357979631004`*^9}, 3.9151364912805147`*^9, 3.915136580470688*^9, 
   3.9151417492886143`*^9, 3.91514190031441*^9, 3.9151422590876245`*^9, 
   3.9151425370370054`*^9, 3.9151427087052317`*^9, 3.915142844610162*^9, 
   3.915142923954567*^9, 3.9151436963663673`*^9, 3.9151477085301905`*^9, 
   3.9151513600248547`*^9, 3.915152010169777*^9, 3.915153594525092*^9, 
   3.915154448448393*^9, 3.915162553618664*^9, 3.9151634286434507`*^9, 
   3.91517620676742*^9, 3.915176739896968*^9, 3.9151804391675158`*^9, 
   3.9153126431537313`*^9, 3.9153148821670585`*^9, 3.915316091359337*^9, 
   3.915318524161586*^9, 3.915318826844063*^9, 3.9153203180380087`*^9, 
   3.9153204763165765`*^9, 3.915320814402301*^9, 3.9154103464123273`*^9, 
   3.9154132475286236`*^9, 3.915414611950487*^9, 3.9156224494889774`*^9, 
   3.915622618899454*^9, 3.9156226505175753`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"d31ef232-3c9e-4e1a-b0cc-eac7216656ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BandLabelsPlot"}]], "Code",
 CellChangeTimes->{{3.9151520285172033`*^9, 3.915152034354397*^9}, {
  3.915153543301588*^9, 3.9151535594414663`*^9}, {3.915153628623275*^9, 
  3.915153628804859*^9}, {3.9151544554141283`*^9, 3.9151544578845377`*^9}, {
  3.915162514797453*^9, 3.9151625182439537`*^9}, {3.9153126539268947`*^9, 
  3.9153126555346246`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"51e7a0e0-7e72-4aae-97c0-6852beb3d7a3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BandLabelsPlot[BandData_,KLabel_,color_:Blue,\
thickness_:0.003,aspectRatio_:1/GoldenRatio,yRange_:{-10,10}]\\n\\nInput:\\\
nBandData: Input BandData.\\nKLabel: Input KLabel.\\ncolor: Control the plot \
style, with default values after \\\":\\\"\\nthickness: Control the plot \
style, with default values after \\\":\\\"\\naspectRatio: Control the plot \
style, with default values after \\\":\\\"\\nyRange: Control the plot style, \
with default values after \\\":\\\"\\n\\nOutput\:ff1a\\nBandFigure: Band \
structure.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"BandLabelsPlot", "[", 
                    RowBox[{"Private`BandData_", ",", "Private`KLabel_", ",", 
                    RowBox[{"Private`color_", ":", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
                    RowBox[{"Private`thickness_", ":", "0.003`"}], ",", 
                    RowBox[{"Private`aspectRatio_", ":", 
                    FractionBox["1", "GoldenRatio"]}], ",", 
                    RowBox[{"Private`yRange_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`tband", ",", "Private`KK", ",", 
                    "Private`temp1", ",", "Private`temp2", ",", 
                    "Private`bandFig"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Private`tband", "=", "Private`BandData"}], ";", 
                    RowBox[{"Private`KK", "=", "Private`KLabel"}], ";", 
                    RowBox[{"Private`temp1", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    
                    RowBox[{"Private`tband", "\[LeftDoubleBracket]", 
                    "Private`i", "\[RightDoubleBracket]"}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", 
                    RowBox[{"Length", "[", "Private`tband", "]"}]}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"Private`temp2", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"Private`temp1", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", 
                    
                    RowBox[{"Private`yRange", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}]}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Private`bandFig", "=", 
                    RowBox[{"ListLinePlot", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    
                    RowBox[{"Private`tband", "\[LeftDoubleBracket]", 
                    "Private`i", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "Private`temp2"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Orange", ",", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "Private`aspectRatio"}],
                     ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`KK", ",", "None"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", "Purple", "]"}]}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Wave vector\"", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                    ",", "16"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Energy(eV)\"", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                    ",", "16"}], "]"}]}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Private`thickness", "]"}], ",",
                     "Private`color"}], "]"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Last", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", "Private`yRange"}], "}"}]}], ",", 
                    RowBox[{"PlotLabels", "\[Rule]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Length", "[", "Private`tband", "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
                    ";", "Private`bandFig"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TopoTB`Plots`BandLabelsPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BandLabelsPlot[BandData_,KLabel_,color_:Blue,\
thickness_:0.003,aspectRatio_:1/GoldenRatio,yRange_:{-10,10}]\\n\\nInput:\\\
nBandData: Input BandData.\\nKLabel: Input KLabel.\\ncolor: Control the plot \
style, with default values after \\\":\\\"\\nthickness: Control the plot \
style, with default values after \\\":\\\"\\naspectRatio: Control the plot \
style, with default values after \\\":\\\"\\nyRange: Control the plot style, \
with default values after \\\":\\\"\\n\\nOutput\:ff1a\\nBandFigure: Band \
structure.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "BandLabelsPlot[BandData_,KLabel_,color_:Blue,thickness_:0.003,\
aspectRatio_:1/GoldenRatio,yRange_:{-10,10}]\n\nInput:\nBandData: Input \
BandData.\nKLabel: Input KLabel.\ncolor: Control the plot style, with default \
values after \":\"\nthickness: Control the plot style, with default values \
after \":\"\naspectRatio: Control the plot style, with default values after \
\":\"\nyRange: Control the plot style, with default values after \":\"\n\n\
Output\:ff1a\nBandFigure: Band structure.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TopoTB`Plots`BandLabelsPlot, {TopoTB`Plots`BandLabelsPlot[
         Pattern[Private`BandData, 
          Blank[]], 
         Pattern[Private`KLabel, 
          Blank[]], 
         Optional[
          Pattern[Private`color, 
           Blank[]], 
          RGBColor[0, 0, 1]], 
         Optional[
          Pattern[Private`thickness, 
           Blank[]], 0.003], 
         Optional[
          Pattern[Private`aspectRatio, 
           Blank[]], GoldenRatio^(-1)], 
         Optional[
          Pattern[Private`yRange, 
           Blank[]], {-10, 10}]] :> 
       Module[{Private`tband, Private`KK, Private`temp1, Private`temp2, 
          Private`bandFig}, Private`tband = Private`BandData; 
         Private`KK = Private`KLabel; Private`temp1 = Table[
            Min[
             Part[
              Transpose[
               Part[Private`tband, Private`i]], 2]], {Private`i, 1, 
             Length[Private`tband]}]; Private`temp2 = Flatten[
            Position[Private`temp1, 
             PatternTest[
              Blank[], # < Part[Private`yRange, 2]& ]]]; 
         Private`bandFig = ListLinePlot[
            Table[
             Part[Private`tband, Private`i], {Private`i, Private`temp2}], 
            Axes -> False, GridLines -> {
              Part[
               Transpose[Private`KK], 1], {0}}, GridLinesStyle -> 
            Directive[Orange, Dashed], AspectRatio -> Private`aspectRatio, 
            Frame -> True, 
            FrameTicks -> {{Automatic, None}, {Private`KK, None}}, FrameStyle -> 
            Directive[Purple], FrameLabel -> {
              Style["Wave vector", FontFamily -> "Times New Roman", 16], 
              Style["Energy(eV)", FontFamily -> "Times New Roman", 16]}, 
            PlotStyle -> Directive[
              Thickness[Private`thickness], Private`color], PlotRange -> {{
               Part[
                First[Private`KK], 1], 
               Part[
                Last[Private`KK], 1]}, Private`yRange}, PlotLabels -> Range[1, 
              Length[Private`tband]], Background -> White]; 
         Private`bandFig]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "TopoTB`Plots`BandLabelsPlot"|>, 
   False]]], "Output",
 CellChangeTimes->{
  3.9151520349139414`*^9, 3.9151533425234804`*^9, 3.9151535012388444`*^9, {
   3.9151535449119473`*^9, 3.9151535601086817`*^9}, 3.9151536298361516`*^9, 
   3.915154084933982*^9, 3.9151541278371983`*^9, 3.9151544136249185`*^9, {
   3.915154451001676*^9, 3.9151544780038443`*^9}, 3.9151545152469563`*^9, {
   3.9151625089917545`*^9, 3.915162518957242*^9}, 3.915162556210187*^9, 
   3.915163430843815*^9, 3.9151767428385763`*^9, 3.9151804418158083`*^9, 
   3.9153126568700533`*^9, 3.915314885818804*^9, 3.915316093824148*^9, 
   3.915318527537529*^9, 3.915318829546429*^9, 3.9153203192188215`*^9, 
   3.91532047764329*^9, 3.9153208192289915`*^9, 3.915410357345093*^9, 
   3.9154132633061433`*^9, {3.9154146143790226`*^9, 3.9154146336784153`*^9}, 
   3.915622452081808*^9, 3.9156226782832265`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"921749e9-ca14-4fe7-a1a1-a60d1a08cbbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"KK", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds", "[", "5", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"KK", "=", 
  RowBox[{"KK", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KK", "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "2"}], "]"}], "]"}], "->", "\"\<-K\>\""}], 
    "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"tband", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds", "[", "7", "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.915320868988872*^9, {3.915622674291187*^9, 3.9156227318988757`*^9}, {
   3.9156227933868647`*^9, 3.9156228154435844`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"d2859d8a-214a-49bb-8ef8-ef4611e7d2e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1168980380539215`", ",", "\<\"K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6753499544294501`", ",", "\<\"M\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.233801870804979`", ",", "\<\"-K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3507058705484427`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.915622674802119*^9, 3.915622727302061*^9}, {
  3.9156227945681305`*^9, 3.915622816147301*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"15080554-5056-40f3-bb3a-6e92af4ea8cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"spin", " ", "up"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"tbandup", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tband", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tband", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"figup", "=", 
    RowBox[{"BandPlot", "[", 
     RowBox[{"tbandup", ",", "KK", ",", "Red", ",", "0.005", ",", 
      RowBox[{"3", "/", "4"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.91532086266179*^9, {3.91532089943766*^9, 3.91532090763031*^9}, {
   3.915413289902054*^9, 3.9154133123563013`*^9}, 3.915414535829732*^9, {
   3.9154146812063274`*^9, 3.9154147124359884`*^9}, 3.915622457123904*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"99578874-1c07-4af2-b643-ad476c1fd961"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, {}, {}, {}, {}, {}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
09AjkocOtoF/nLq95mMGcG58UrG90QbtWq0HYp4zoHCp5NDul23AuhjQ0fyO
AW5Lz0yzwvuCdKleIVLDANXXb7+YS7fDK8YjY1k8/r9fKXUYbW4H1+HVCyU6
GRD56tokOtUOSleXtvUNMWDbjrqyDUntMBF5KKeAywD6jvWNa6vboW7JdFcX
MQKKugNS1KfagbGgZYuYNAGnutsLVZd3gKVLrHecAgHK3WbVins6gLnkfJns
KgLIwMjohVc6YFhti2PIegKiA8efzHvWATY32bu6DQnYIavvLUl0gKmqdaWe
JfEPLzphtHP62K19BLzL7t8pAp1AZz899fUIAWeyd7gInOiEkB0y+6Z5ELAy
u9B/KrYTKr8QY1p+xD886YQKj9mmB4MJuGfidJA52gnHDcq0L+B5tml5qtyr
+AdGF8bMuBeP10mLpG6H1R9QXjHon/OIgJLfZ6xb/f+AvuGxhrI8Avy8S+Sa
Mv/AKs+ltG9viH/48wd6XiqwflcQ0DvjJLtGtAsyBBb1dX0jIHnGN4lP2l1w
zGwBOYL3m23qgoayI10wmb7/4WQ38Q+fusBL6rU1dYyADw866C9KumAgYAFX
kEbCxU3qVXkDXaArWOwjNJ0E7U1RRKZ8NySf0xMTkSH/4Vc3DHCJSyJLSHhY
p19y37cbrLwdpcVXkbD3Pzzrhr+fP209CVLHBxKj67uhzy9ddLohCZUuO/PD
6T3Qov5lkeA2Ei4LxF+4odEDtXj4pjC+/A/e9UDpbfmtI4dJGIs1OxAY2gP7
z3zkkm4kpMdmnTr3qgeY+zxz6nxJcIide9WrqwdW/V3AQeQ/POwF3WjJhQlh
JNSsfufkYtQLpSLmaafvknDto9jqI569IBdRNmWcSgL6eNLILrkXis8a3xDJ
JmHyP7zshYEE18Tilxj/7OSX7uT0grIxNdnuPQlH/sPPPrDwW3Smo4aERaxP
AqZ7+0D+iFqjRSMJ38bU5xkG94F6sa7O6TYSwm6eYejm94HWfjI+s4+Hr31w
+fHfCSNhItRg+prZ/VAQ6l5W9oWEPKXr9StRP0j8XVD5JBxTGuxe5toPkYP9
a1bF8fC3H5gxPQlpAST8fB1fIVfRD1paG6z8nEi4vbMjQprVDykLp6dVbiXh
gWpq3bQ5A1BPO2ueoknChXSb34KqA3DJ/5zIXDkSbEcnDQT0BqBYJGiaNh3P
9394PQAYPFQW9RIwt8Q6d8p1ACbuYYaqJ6BfT6hoImgAwmuPy1/BOFXxtqB8
LG4ApCxqJ1c/4eH5AOhmW0T1xxAQeGOmNrNiAGhnvMbrrxBg9zM3rr91AH4c
/ctwBOjsOZLWwxqAePHQ8N1OBMj8h/eDIE5bfkVqD+YLxddSHUqDgMnv2Rpz
Hv4PwmHZraveY/xPH5hzuXXHIITeFthUp0XA5ZPvw5pdBmHGxfHlh/H+d3h1
bKQxcBAky3tW+C7j8cMgTK7dc18e44XUq2rR+qxB8B9IMjSTJ2BY2NPt64dB
mP1q8Q1ROQKqryj51jQPQsF8Q5fN8//f2i/bWWBb1+D/rC9cd+y5X/h5BLd3
P1Ch4fuJcVLfnMqEkkczFftx/TtGqbJCnAlxTj1mWvh9Jvr2gVtkmGA3b/6L
n5i/Rlzui5UvYUJL/a+N3xYTcFCy+a2RGhPoGTtfKikSsC9voVmZDhMqowPX
VilhPNlhX2dgxASFR0HhH1UwfkzeDSnZzoS+zguFUisJcFVqnqNni+8/meuT
rU7AjyqZijfOTDisu6gmRpOAOte91rqeTCj3Vjn9UZsAXekokdcXmGAqkemv
vwnPz/P68A3XmFA1p/onTR/jW4uM3IvbTJBK7V9LNybA6qp1rXYyE4S+qp8z
xPNjoRK17/kTJiTHhme8205AwZfqWVqFTHghuTvKbzcBh9mz7uaVMmHRnmK6
qy0B9netFdfUMKH4VH9r+CG8ngxCG7IbmbAj2JjRdpSA90T1IfUO/H2nHC1P
nCRg9XVR2adMJsSfnXlHzpuA5mfm91dymMCIUqwewfhrcuDKngyRIXjYJpzJ
vERg3VHOUJ07BJrGu87Pu04Aihc9/mjREJjaY8WA8TjdaLOC8oohYGRpDtyP
JWD3ySuPU9cNQYg7R0kymYBimRL7pQZD0FX7RjEK43NRgUD3fYsh4NT5/FHK
JuCFzWZPhb1DkHPRdP+HAgIUqP6qSY5DECnbQDleTECNaknuQvchKLghNCBV
TsD6r5NH488NQbn4jvdvqgnQOqU7JBc8BOFP6VYO3wlImH/m0d0I/L4be+0n
mgmIe/lCQzZhCEI/FTwKaCfAtG3yZXQ6vn4/x2AC78+cG+s8pPOHQDVjh+X2
EQIyV55hR70dguOZsR3Bk3g/1edmS34eAkrEjtRoARLec0d0In4MQbxfm56v
KAnqD9UHZ5FDUP+IuWnJLBJWmHj4hvXj5y+5F3BLmgTlzlyBmewhMNF47F2A
dUd4WF/hDaFhqOw90BeB8R+9UDcQnz0MkffOW0qrkPDIwWU8ZMEwXN+6PAhh
PkilPQkUURmG2dvNmylrsE5J7hML1hwGiTyawa51WMeYqZQIoWFQTa3dpo31
ZIGni1mQ2TBoAac2WZcEhQWpVPruYVC/EFQZpUeC/OuOkECHYThXuC2Uhvkk
2FFBj+o6DCE5zyOHNpNwSfBwxYUzw3DyQBzrmDEJGmqp1pxLw0D7BsGHTUi4
+71FxC9sGHQitHaO4TraWyGCfXcYzrt9TZjCNXWR7RbftGEoOQTXHuA6c0tC
LStnGEojflV24uel/2nZ5100DMPvprV+MSJBMnz+7NGPw2A1XPzBDr9/lobt
Xc9vwxD+l14MSPBtuLN9qGUYapbH+6bg/ivTGxrce4bBYWzBu0NAwq0MyVsD
Y8MQSpc93rWRhFDzXbJuAiMQraaGGYSEkJ4793tnjECm3fzBw3i8hiNr9xyX
HYEVznsdHDGeJxZJEl1LR2CGUc8ctBqPp9O2mKOrRyCvwvzo1EoShIRvKXRu
HAGNrr1nE1RJEEirfXzEBLdfrzuruoyE49umO7RZj8D7Y0PcdDyfsme2dR86
OALHhZeMiizC47k4JIlxbASqPjxLcsB84f/2k6q91wgUveutycJ6oOuoUOvv
gBHYyK64OCyJ+SfC5NiBGyPgtUusZzVeTxFrQoaaokfg2LdMkaNYT0w1lj7a
lzICmscjR+6KkDB+VmhNw9MRIGfcLa8UxHyuqPfH5uUI+L8uCWRTSZCwuOjx
/f0IqNt93LmCQ4Dv6GvlXbUjwKDVKNtOEOB1m5td92sEim9ErgwfJcBDS2+D
9Z8RyBfXNvvIJKCp+ezgl+ERaDgVE0vHOvrqtCJfS8oo2Dz22mqC9dBQFku9
WmwU6hnWlOsdmN8sdV5slR6F983X1BoIAroHzhpUKozCRL7do1VYT+2KyR83
XTUKHi61J642EUB7xwr8uH4U/qP3HwQcd1mz3mTzKISsn6azF+uxo2KnS95b
jsJfeVnzhYDa3Kc+m/ePwsbV3WWWVQRUWQ9SS51GIbw7NfI71nPn/NZc0z81
CnuPvf7t/AH7gKWuem/Pj0J60vRioVLsI8qeVkDIKBy7VyD3FOOLuWuXf1HU
KMTbFo3YvyZg/M4K0U1J+P76qUOLXxAwus414mXGKATPibbozifgQMvDLToF
o6A098azN7kE7PXvqi14NwpH3sVWJGcRUKq89Oq66lHg6CkahGI+d7dymp3f
MApY7VheTiegcSKpXLN9FCqcyaGQNMwnscT23EF8vcT8FXEpmE90ljaunhqF
ZL+MlufYz+kSB29lTRuD9tu7DBhY73aLJ8uqSY5BrOc+Bek4AnY+a6p5snAM
fojG3rbBesFyp/zeFcvHIH7P7MTU25hPRg4S6Vpj0GdXqkuNJCD/XmyMiv4Y
lC7K8nC+hfnkQ5PCw61jMOPBqEJDKB5PN+mfSnvGoLnVy9kG433FzD0ODw6P
gcWnmfvbrhKgWRAho3hyDDTOCFSew3qktfVbUvLZMYj7jQVpEAG/AqSXL74y
BqGcOy5fAgkwVrVqTQgfg+HWvwaOAP2KiGPy8WPQ4rdz1Y7zGG89qhbdezQG
u2pD3JTP4fGMk0if/2wMdLtlVwr74vE0NLOLLR6DzFfkBSbmq2Ly+h+ZyjFI
Nep06jpNwKtLVR53vo+BRJRRZc8pApRWiqhIEWPQk8bNGHcn4Osus5zIvjGw
PMVUmIP5bxM3yHnOxBgoCaC561wxPyd8GLwlyIJLZh/inI4TsBZEzkrMYsEO
m0eJyccwn3QYrL4px4LbKu2LOp0JaKkRKJ+uzAKTN34LtLHeckzUP3R9Db5/
+l8DS8AftwCOKLBAFs/mOOZjVyiOuWrKAh2BJWouDng+9p9fP20XC/LSly5o
syPg9uXXdZftWZAv6pDocpCA+bsm3QRPsIBjtMGVhfk9cekGsUs+LKjaYPHl
1n7se0fOpNIusYBF+XVnDfZX4vbaRgE3WRAZ8r7hN9Z7t9S9W7mxLEj8b0Fg
fUbJP3c+lQVMWs99a6wf7lYPS09l4/Ypk1nzdhGwKGFN7tnXLKjL+j2newcB
wmJMq4lyFligOfbvrAm43qDe51OH+x+ZpJpqRYBEutvVsd8s8C94vPsW1idR
ZzIVvbpZoPBkdecl7P9kt/S+GR5lgbzHmib/bQQcOrVi3ynaOHgKZ68JssDz
H9Y1MTh9HJROpPfd2or900GV2yfnjYPcUzScgvWPmZrz6n7Fcbj0bLVXiRnm
f05q5Qn1cVCPfqPfboqfr9Lu1LNhHBR2d+2RwDVrc4qwi/E4HG8Pq9Pfgvf/
XCL5j9U4zDbKzfEzIYDatljX+cA4SHptHy7Gest0pv3P9qPjYBj6xGkarqub
EzwdT49DpVeQro0RAU/YtpKk/zjkqP30ydqM/eKnuKcO18ehtKaLFMd1QWyj
aesd3B99nzx37H8pZbLtB++PA+NmclWTAQFBkXsCmjPH4Ufh0TUWuBY9HC1n
+wL3p/gzo+yv/vPf9aqxbBzC/l6O6+OWUbv3fhmHjSduTHuvh/enbx3zR9M4
6E8rv2OJ6w2mc0J3d45DyqnzIQTW68XzrFTqh8aB/lvTzwvXCVoSH3dw8fv+
IzAClghtO/xVdAJ+/AUowM9XD+Vul5oA+fkBPra4HuBWxtYsnoDU7quZYrg+
XS2mtW3lBBxIsZQq0sV+vufjt8/aE2CzPq/cC9c/Xk5zNzecgNvpeWVrcb2k
3Vj807YJoNNPDbOwvn347HLaln0TkLe+6kQJrlcElemXH5mAdLP3q8NxnbWD
3mzkMQGVm88tO4Lr6OISvzK/CZBTHrDQxbVcGHWe4dUJyGqnvJXD9YB/bl5J
5AR43Kg+zN2I97+7o6Ve4sQ/fsfjdzGk583jCShxM7j+Hddn+p4G6z6fAO3n
ImMVuL5H+ab4umQCmttvRJTg+u3sieINVf//ul1xoe2Ln/9bi64zHNdu+9/n
xSYdjXo+8L/vK8oNXa01OQE+EhusO3EdnoI+5wmz+f09EsV0XjOHzf+e7sOr
6TnybNCQq3ZCuK6t6b+vrsrmj8fuxFXwdC2bP15NbicaVuqx+eNpBxmnM8zZ
IMvaPp2N60dHuyWW27D587FqvWrGo0Ns/nyJ7+o0U3Zj8+fz1tJlHam+bP58
S404Bi69zOavh4MLHyxIucXmrxeyjyhQuMfmr6cSsWSbpIds/nozbmwZWpjH
husXEtxbcV2ZvvBm/Bs2f73O/XZAdcEnNn89x6bcK7tbz+avd5+3+xxlGWz+
fpgKi6XE9LKh74mJuSXeLwF2P+9Kj7P5+6kiRGbdbfokeMnP5Xrj/Wa5d3et
pMQkfz/Wqdw+ETF/kr9fc4x2TJ+9bJK/n9dJRTwM05jk7/cAVGswU3cSOAEe
jUW4FpKY9fvGlkk+Xlz7vc1XfOckxFZZCBljPHGenC57zW6Sjzc5SlufiRyf
5OPRutFrlsHek3y8elVW0S10cZKPZyhK5EpQ6CQf7+RzPijRYyf5eOjcJFQS
+GCSj5c9jzfbUrMn+XjqcfYS68KrST7ejpi+i+B8mOTjsa8sTc3v6yQfrx0u
F1exmyf5eN6xk3vUt2uSj/fHl+oKjo9M8vmAOXwu0Zs6BSHk8oBIzBdepS83
jIpP8fnEVt230VNmis83DG6B19CSKT4fOVWPzfJQm+LzVU+81pMBnSk+n639
eNrEzWiKz3dz2td09m6fAssxqskJzIfRzzwuHred4vPlgqBs+W7nKT6fJu0Y
KDzqOcXnW8amLMvOC1N8PjZv7xJyujYF/sipNhXztcnlFWFtt6cgFlKfHcV8
bqjkOu9w8hSf759WPaxmPJni64H9rC4b+8IpoMU1l7GxXnifuHRmS+kUX0+U
IKfoAzVTfL3xuuXh4l+NU1Ca9S56GOuRZVeJ7/s6pvh6pS5nqX0Dc4qvZ3T3
2Unv4Uzx9Y4OOynxuwiHr4dS7jft2jWXw9dLSQbyLXWLOHw9ZXHC7qj1Cg5f
bz2fe3dh7ToOX4/lPWt6aGnAgdFvOwP2Yr0mf0D6YLUFh6/nPl3Z07l1L4ev
99aqR8ZXOnL4enB1zbdlZu4cvl5ccVI6++M5Dl9P3paxcjIJ5vD1poF+5MD7
CA5fjz7pqkrdnMDh69VHIRLqpekcvp59oGpVqJ/P4etdia/X3d6+5fD18OvJ
KhZ85vD1svIDkadFPzh8Pa242Ux7E8nh6+0bvUF9L/s5fD1+9cYHbx02h6/X
tZ6LUAuFuHw9n3jQ8Pm62Vy+3o/jBqH8BVy+HxB6WDyqqcLl+4W8LzT/XE0u
309kuRuKaCAuKG36ewJCwDzZC2+yzLggebBXuQr7EakXxSZqu7l8v+LvwOY8
ceDy/czK65uCV7hyIfhg9uVr2O/c0fTRfXyGy/dDEXWFH1SCuHy/FOrJtnwY
xuX7KZaclvCyOC7fbz0w8gl7kMbl+7EZ/TlGirlcvl8TuzlcnVzE5fs5YTWt
PYsruHy/5/795MzEb1y+H5Sn5kbLt3LhdnbS3SnsF4Mf9Vrc6+Hy/eSlLWo/
5rO4IOfzrCkG+80xlqbxZyoF8fzoSPm3a9eFKYjnVyt/edWYTacgnp+lakQu
F5tDQTy/y6WuPVkhQ0E8P6y5y+rTVXkK4vllUZehmVsUcR3rHZeM/TS8kXCZ
pkpBlf65kSuw3950M/vpBzUK4vnxjQethi+vpSCeXz+Z67bNaAMF8fy8UblE
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
paF2Pd8QOQUCRKx/06rEaYjzdbqkzzICXpy9l2wuQ0OsUNk5Dqvw+lzwe/mn
JTRkl7lZrEYLX29079MWNRqyUHKdW/r3vP/wPpdyHRpSND17UQ3Pj/DFeWLG
RjSUs/rpkhlY7xU+/p5etp2GTirW2FljvaVdEWVqaEtD6QHtp/q8CNgX8f1r
iTMNFcX9zKzBeqQhO+qUnicNSXwMO9Qd8zcvsJ5TfIGGOh0lP63EfC42PitX
9xoNmY9Wf/V/i+dPusbq9W0ayn97tfN7Pfa3KJS5IZmGJhz6y6Tx/vzRWn32
xRMaCl/8oX4NnYQQ0dD56wtpaFd00XcJzBciKuYvn5fidqVmajzG82Bj0X1a
NTR0wODk/vdbSdA5WT6R10hDzD3xwt5OJBSGXo5d00FDpdmrXO8HkNC0u3xJ
DpOGLOda/1kWR8J+r8vv1Dk0VNmvGTOYT4J4guGhpyICKCQ1N+LtFxKuv6YJ
rJorgGzebe7704Xbm4qTMxYJIN555Gv6Bf3lKwQQ7Yf/NPc2EvamFn96tE4A
TfOwLDFvxNdXn3dRNhBAi6IcjIkaEq71bhRLsxBAE/91GPOdODt96V4BlPHu
y84XL0l4qVlomuIogMIjru4TzMZ4bO3dpeAugH7kK+fqpZJgK1d4KumcALq9
OPS0+138PTrecxYF4+e99K6LDiMh9NDa3PgIASTjW9pZGETCjMAhqwUJAijz
wnenKl8SbiRmM++mCyDDoK52hhsJuh/dwmXzBZD/iwBa/2ESijpWasS8FUAp
7PWC43tIaMlyeyn9WQDF7dCs51iQYFe9ct/tHwKId34gweqekCQFkJHq9ZX0
9SSESaXHRvQLIKWbaW3CmA8k1jrrzGYLoBJpJWtBjP9vbZUawoTo6EBiSjEN
64EDXKdDM2fTkcQCmjEN64mZykoCoQvoKOOBfx4X65FQIzJZXIWONHQWibCx
npnhmKx/TZOOCqre2I5iPVR8w44hguho46GDOYNYT2GCCQw2oyPnZRfvk1iP
OZy2ExPeTUfFXw+/b8R6riVC/nGQAx113Ql+XvUG48GrJlO6Kx1J7s94+DaP
gNmNsV2BZ+howmDNtkyMz+HjNiHUIDrKMZh8dxvrXX0FaVX/MDpSdlLu88F4
3PLOJpdzl47i/v6gIZiAsB4pa780OgoeMXqijvFXQuwbk51DR0Y+ZyVoHrhd
JSLctwj3R36Oyucj2B9abdcY/4ifL+6ecQ37q+KTM2u9v9GRkEV+wAbs/xjr
t+8bbcH9yz0g3ob9r4PNTLZnDx1lWWfIXlqP/VTA59ihMTrKNG71lcT7PyLh
mo6HgCAajZWXjMR4MbtoS8PADEH099dEdGkCStuFfd1kBVGY8ckljmIE2Adv
EehbKojyC9475XAZMDtb+P7x1YKIkREc2znEgPDqMv3ujYJIVSaqTqSTARJ9
FxlHTfD9E91zpZoYUCKlH9hpje+/OItNr2GA/lqKgtNBQZSXRsb9eMeAwxy9
x23HBFHyXkPJiOcMIOUoZoe9BNHG4gipVY8ZELW5qIsRIIgyisO+PYlngOTh
cyH2N/D7Phx2595iQGSgjmpLtCBy/s8wM8DwMevjgRRBpNjTuMXQhwGlH/OP
/noqiGStNg+qujCgPZzF3PdSEB2IVSj+Y8uAI9n54Q3vBdH7pmeXzlkyQKbB
U2NPrSDi/R7oDkuj9vsvQRRy7b7HnLUMkJIedN/1RxDVCiy8OHcZA8rh6axv
w4Ko+UHdUkKGAY6tA7HWFKF/egRfL/pUp1ZMCJVn5l2vY7fCbeUTDZbSQmha
pUHquWm43Xi5b7WCEJI6knTv6woGvHf7M89ilRDKsz5V+Bb3xyg0rbByvRCq
SGxoMfRkgPPuP/pmm4XQ5bVRm+3vMKDzdBrjo6UQ4ggGUua9YEBMvGOgyX4h
9ENvaeYhPP4yr5cofHASQq6FE9lbOAyIbmx9u/mUEEr3WTJUjvlrCz3RvvS8
EOLlh+0PWrv0Q4SQTbqYT4w99t9VCSFvo4RQi0R6XU8A5u9eW1WUJIQUc32v
NGI/d0dMrqIoQwgp3fILc8T4baLZcHRTgRCSiDi5+Cbebx+sokVevRNCVaWe
i3dxCeia3xCuUy2EDiiFhL3A+u6oTrRGYYMQkg9eUVuK9aTsoV2169qF0PFN
BtpHML7EBkh65A8KoVqOMLY4uD2xdtbaKSGk/eOuTHgECRXlYdm504RR8LeF
9jJZJDgfq9XRkBRGA83bD+lXkjAvIqwha6Ew0hf37BXrJCE628JXbbkwkhNN
eHJRoA1kasRlM7WEkavTwTNh8m3wkVVRuEJfGP2o+cxB69vARPrqnsdbhZGh
ldjSCOs2mADjcZU9wuj971H61RNtcKc1OPDhYWF03d6iRukKvl7UWGHZSWGk
POe5qENiG5QrC5Y8OCuMSpr62nQL28DY+J294hVhdOCv/fzSBiy3AOr9cHx9
4tWs1j9t4BMKSYvjhf+Hj6jtELs7QDXxkTCS5/6d4HaQ9YIK+WfCKNTm2jaq
ejtUxk8dvVcsjGpbF19PMGoH09cvReQqhRHl5l9F2w5p2d8PLPwijHi/1/w/
XDbDiA==
          "]]},
        Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
          "]]},
        Annotation[#, "Charting`Private`Tag#9"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction[
       "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
          Annotation[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
             "]]}, "Charting`Private`Tag#6"], 
          Annotation[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#7"], 
          Annotation[{
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
             "]]}, "Charting`Private`Tag#8"], 
          Annotation[{
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
             "]]}, "Charting`Private`Tag#9"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
       Annotation[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
          "]]}, "Charting`Private`Tag#6"], 
       Annotation[{
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#7"], 
       Annotation[{
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
          "]]}, "Charting`Private`Tag#8"], 
       Annotation[{
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
          "]], 
         Line[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
          "]]}, "Charting`Private`Tag#9"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168980380539215`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753499544294501`, 
       FormBox["\"M\"", TraditionalForm]}, {2.233801870804979, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507058705484427`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168980380539215`, 1.6753499544294501`, 
    2.233801870804979, 3.3507058705484427`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507058705484427`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9153208769346914`*^9, 3.9153209129544907`*^9, 3.9154103629700527`*^9, 
   3.9154132690597568`*^9, {3.915413301948101*^9, 3.91541331286092*^9}, 
   3.9154146393751826`*^9, {3.9154146820051904`*^9, 3.9154147130922337`*^9}, 
   3.9156224587428465`*^9, 3.915622819094344*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"c8dd9b2a-c872-4a6d-8397-c9fd5f6a2946"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"spin", " ", "down"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"tbanddown", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tband", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "tband", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"figdown", "=", 
    RowBox[{"BandPlot", "[", 
     RowBox[{"tbanddown", ",", "KK", ",", "Blue", ",", "0.005", ",", 
      RowBox[{"3", "/", "4"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.915320894813547*^9, 3.9153209198296795`*^9}, {
  3.9154146622380486`*^9, 3.915414675356968*^9}, {3.9154147159665475`*^9, 
  3.9154147161580353`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b330f49b-ecc3-442c-9867-2a498e0ccb49"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, {}, {}, {}, {}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[0.005], 
         LineBox[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
          "]], LineBox[CompressedData["
1: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
tGRGcA==
          "]], LineBox[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
          "]], LineBox[CompressedData["
1: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

          "]], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#6"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction[
       "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
          Annotation[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 180]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
             "]], 
            Line[CompressedData["
1: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
tGRGcA==
             "]], 
            Line[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
             "]], 
            Line[CompressedData["
1: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

             "]], 
            Line[CompressedData["
1:eJwtlAtYTVkbx5tx9tlnn6gUOSWkC8ktyVCD95Xo5taNIppScXIpTUjSV2lC
Kr4unE5JPhJTJJeoSKl00U2j6HQue3dTSRSSGsw2z7efZz37+T3vu/7r/1/P
Wmuml7+jz89KSkqn2fHj79+z6ojyZQ76/vt1w9l+TadjWRwMidHR27+hG9SU
m4fGbnMwzPzO9kuqbH1OYkJIMQd1LJPFKxq7AB0dTL9Uc7CkK8/X+2wXlASo
Nh1u/n99Uxe0mztsG6Y5KBYtKO9T7QIvV9WxoH4Oxv8S73q6oRM0IurEHz5z
8P1kWcj6M52QePG0ReA4AtWj5mZs2tgJ6sW2kvcqBHo92b05X7UTyrvJEH9t
Am1+NDR2gOdJ23EDhgTm/G0q0E/oAPU88vLeRQSq3F9d5uXcAQkNFZZvlhPo
XLPHMGhKB6gNHG8X2hAYkzVdGNDWDk80LSN7nAhcSZ7T985oB8slSnq7PAjU
IXfMP+zbDt7fVmV3+RF40+PW1Pz57dCpo2TvfYhAi7dzzGcPM5C8privPYLA
/Hke55nHDEzyDo3xjCNw6PYszZEYBpIiLYxpEYH/0w0OPbqFAavskeodVwik
haYd+wwZKK/OF8pyCTQu1x8c+khDd8LI0LYiAq1atO3eVtDgm5efIHlKoCvh
tyhYRINAEmTq1kRg0+S9+ul7aTg/Ytr0UkZg5zu5w05LGjSnDB7Y3Eug5rq/
HV5o0VAFuRObPxIYFDW+s7VLAT7Me7GTEhfD5+e6+6cqQJOfa9GkzEXnRHqC
0FkB54z2STZN4aJNtM62BjW2bj03pEGPiw9b5Fl/NsrhqX+v1oYFXAxNEz4Z
TpTD2visglpzLj54HCK9v1UOu7f0WtqvYee7Opf3Gsih52BWe/UmLvLeZQde
GpJBSrpPpI07F80CNYfvlslA8Ehfr3IXFzeJ6zpMRDIQtTGla37norvn6I7V
ATKw5WR4lodxMcfUaet/7GXQncn0WcZwUfQq1H2qMdtffzGmNJmLSexp5I9n
9d5uN8ZLXCx5p3i4bFAK55V1aopzuCh4tVMvs1UKNmYS4YoHrN8aDd6vFVKo
dBRRD8u4GKRYtHz4jhT6pkoSLBq4mHbw6eeKTCkILUSmBRIuGsQ9t/hTLAXt
nZublnazPM+4PShBCuKISYH5g1wMbvuj2yKOrWc0TVzylYtXeiLOlMZIoabq
bN4dHokcAzFOPC2F3X5NFqaTSKT7W0y14qWglXhWcmsGictXL/NtTZSCKG9D
yMK5JBrMT76vnyYFQeN47Zu/kGhF22SUXpVC9UhNwTxLEsO7eFpVrF+bKafc
steTmNFxuUKrTAqjYP1ljhuJPeZ6iswXbH7mZOQ1bxIbF9o1evSw/XxrvdkB
JJ69cytr2jcpVBkRTzKPkmhS4eKjmCwDa+syT4MTJBrdbtnkt1AGI/4RP11O
YNcLWexXbCeD4Hi4NDOdRDRYHX9jlwzEWyKMM66z+Vpvh26PloH2IaiZfo9E
9/5hN5+rMqhN/yq8UEJiraZt0fNKGdg9KqJ0atk8r5ccOtUng5q2I9fFL0mc
Z6b2zFdFDiGcZbZaHWyeIL1S58VyEFw90nR+gETBe9OytW5yqK5fGqg5SqLz
erWDM8LlYPv208RkgofS1i3Tr2TJoUr5bp7GRB6G3rCPa2xg9cwCHRJ0eJgk
2mV4Y0QO9EaTQTUjHo5/nLq/daYCLEcPhJxZzMNO3Z7dLvYKeDbZRFsFeKhb
vG7SzIMKcFk0UBBrx0Na443zl3QFpKzPcVPezMNaB+vK5ioF6Av9vpzy5GHO
dBPVlCEF5EQZpfD28VClOcl7mgoNKgv99E4E89DKp0xco0eDyM7oCRHFw2+W
ZwQrltIg9e32jDrD9kdb5ATY0+ATeeWncak8fBhXF+/sQcPABa9LEVdZv1tt
SnoCaQgu0F2ldJuHAq9P1oJoGtp2etWEPeKhPPOFYQf7PkwP1/X7WsXqvWru
nJNNw7VUORX6gtXrf3lh4CENi+6nXR9V8DBWw+OtUT0NhU1bbY+8YfNddDSs
kdNgNSDo/TzMw6B7k8eeDbDzRVsDD/1MISdY2cDoGw19dwXqnyZQqKPfqv9i
PANBjS15v2tRGCJhcqu1Gfj2JslhyIBC3XTDKp4RAydJp8EAEwpF123fR5sx
oKY/8b/vfqVwZV316XXIgDM0mOy3pnBtUEPhWnsG8nvVCvsdKaSjBblHXBhA
osFtzw4Kp385HvF6BwPVunFfeoUUaj9+b5ewiwGn5fYpuw9SKLg35hLuz8AC
oZ3p63AKm76RrtmHGHhgfqrOJ5bCh78F1E07xsDNXHJP53kK++o1GlojGVga
vpa78zKFD7T2l7w+wcC84fLLzE0KN89Z8Zd9LAP3no6D3wopDE4Prtc8y8AZ
kaVEXsHmP6J72yaRgWiV0sPbn1NYf2C/xkAyAyqK7+pSKYXdrnIXVRED53JX
3tzaQyG37eTsohQGYg0f2bd+oNCVnlv4ScyAz+ex7i3fKQybTBfVpTLgvi8k
qoXPR8HsYolDGgOdKwpmuGjy0XfQy/Mky/tURgr/mslH+bI5tUdZ9o465Oo4
n4+SutgwM5aXb773oXEZH4fdr84qZfXKZ32M32jFx+L0XLcFLBemBc6r38hH
mxMnTMLY9a325VWu28bHH7frMevPomOhzzNfVk9PuHSU9V92Z7+SXSAfHf99
nxlI/eNGatUxPs5qv/HB/zwDCWNzza1P8TGyvVJUdI6BJbV+LyqS+Jh0vJUj
YLk17bq/VQYfHyTvSI1j9+ezutGEsmw+9gu2uOuwXMmRXFt1n49BvR4JNUkM
XJvy3arkCR+Xa4gNzrEcY2zArKznY0BYmdVxlv8BHEUDVQ==
             "]]}, "Charting`Private`Tag#6"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 180]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
       Annotation[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
          "]], 
         Line[CompressedData["
1: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
tGRGcA==
          "]], 
         Line[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
          "]], 
         Line[CompressedData["
1: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

          "]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#6"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 180]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[0, 0, 1]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168980380539215`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753499544294501`, 
       FormBox["\"M\"", TraditionalForm]}, {2.233801870804979, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507058705484427`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168980380539215`, 1.6753499544294501`, 
    2.233801870804979, 3.3507058705484427`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507058705484427`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.915320896673545*^9, 3.915320920784127*^9}, 
   3.9154103643882594`*^9, {3.9154146645369005`*^9, 3.9154147167065687`*^9}, 
   3.9156224613381*^9, 3.9156228369952965`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"1e2bdd56-6d39-45c5-8ec7-ea09187f33ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"figup", ",", "figdown"}], "]"}]], "Code",
 CellChangeTimes->{{3.9153209239098206`*^9, 3.9153209547959948`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"4067600c-18f1-4f30-8d36-3de24ad8bfc4"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{}, {}, {}, {}, {}, {}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
           "]]},
         Annotation[#, "Charting`Private`Tag#6"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag#7"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
           "]]},
         Annotation[#, "Charting`Private`Tag#8"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
           "]], LineBox[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
           "]]},
         Annotation[#, "Charting`Private`Tag#9"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
           Annotation[{
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
              "]]}, "Charting`Private`Tag#6"], 
           Annotation[{
             Hue[0.08640786499873876, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#7"], 
           Annotation[{
             Hue[0.3224758424985268, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
              "]]}, "Charting`Private`Tag#8"], 
           Annotation[{
             Hue[0.5585438199983166, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
              "]], 
             Line[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
              "]]}, "Charting`Private`Tag#9"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
        Annotation[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJxtu3k81c8XP37ta4UUCUmSpJIUaZlXkoRKSCJlz5IsaSGVpJKQEgkVSqEF
2UXHvse171z7drl21/599f5d9/N4/L7f+899zGPOOXNm5jXPOec5M1tN7bUt
GAkEghgTgfDvn/5r2a/BWFsK1c8vuMgu3Ub+3oXNHU2r5aco/Nn64LPDpXBl
B8Gw5+grpBU0IJPIXkarD0LxJ6tvTO0rg2RroStumWGIyDdxvNKyDMo/22/t
ORqBZD8vfm7+Wga3ajhmn4t8Rv4CXCd6pspg2u82WXbpCzL+yR275mw5hGXx
5Na3xiDj4Ce3zyaWgyo59q1b5ndEjBrnipP4C2NCJ+3Ew+KQ/6W9T50i/9Ls
J6CxxxlqETIVIJZ5hDv1xy8kFsT6QDevAkibJp96iyQhLcrmq/csK0F+X7aj
kW8y8r+K8lm5iOCl5ntZdikFEWzrfnJYE6H9qsEpJrs01BjJYmX4lwhyd3bI
1bemI56w/ZFJClUwUdv2PUbzN0orqn62J7qK5l8mCi5PyPwmWg0hTHc9zsn8
QWITQd+2hFbT/AWUtrbujblIDYhv4vg+/yQbSZUoCRtF1QCjmrl1z9EcdHfH
R9EWuVr4XlPa/nc6B2WHa34qKagFvav7dFN/5CJ/D9L4iFEdMAy/LQm3yEM8
vymCogt1EHt7+Zi3SD4isb/wVnxfDxcYLZJu1uWj6IOOTnCigdbfAiTY++5t
3mgDdGRK9queLETF11xEW9830vpfiKLPhLVStJpgf+1k1abkIhS/y9Izla2Z
Nh7FiPCQOkfJaYY/fsnMIxIlSI37sM/phy1gJSTsWt9agsSYfjX8Rq3A+8WD
Am9KEbV26Ns3xjbI3DdoHqNZhsaoe3mYi9vAIutc82vmchS+31rn1st22viV
o7HIOLG/+h0wdod3jaXzX1TrorvYwUuijWcFij7k8orjLglOvmyfVeypQJ6V
9Tk57STa+FaiWt7sv10nO+FMzYVxFmkiKra9UnfpRydk2TAR558Qkeb1Yz/X
bOiC1/Ep3pROIgpnmLasdeuCazPWJ3uOVqH8nyMjQT1dcOSICKHpXRVyF5rt
U9DsBj4PYsbf6Sqktu7Et4DEbni06cG73PPVyIuU5hMq1EObn2pEld+xV+5R
D8hE9az9zlGDyKMMGXv7e4Dw33zVoO9DvXdCNHuhVlbDMzCnBpGM9nQdTugF
1WKqqbdILRLzdHfj2NAHQmu/izx0qUW6ZCvhoTt9MKZztfFmXS1qHaxYX9nU
B/nv+AKs9tUhKR2WT6+V+mHZt2ynkW8dIl70t5QJ6YdbWZcztQfrUI9ri+YT
aj9tvuuRhFny3MMLA6CWOcZ7OKIeMev3NKxLGIA/w48+yy7VI/7ANbbSXIMg
NaxRKXGpAQ00Ht/+02wQwoXaTISSG1DPbSt9n4xBYBf66rOWtxFpVjw/mrRu
CJw2OaYy2jWi/4bXbAgG1BjVqcWNiDxzyeJL0hCcVyt3Jks0IaIrVe488zCU
3jFi63JvQuTOMhVe7WHa+mpCzkLWMZnvhyH6S1p+mWIzorZyzFztHwa+/76n
ZmSepkTo2kMGtyhNoaSxZhSWJhyHOZNh8r/12IJ0/T/6Xk4lg2Ht14b30S1I
/yKLzT4qGaqZDtkEMLcibpMDQfEHR+AIE1PgM+NWtDhQG1jpNAIJcm923M9s
RWnSz8mPv4+AsNwVbUfBNpRkJ8iS0z0Cnvuk7ls4tyGJEIz3heAoLBinrzMk
tiGxHZqCf9VHwcL4sdI5mXbkHjdQb+s6Cq0v+f+qeLWjzFmHEsevo7TvtR3J
6JQfJ1aNQrxftPhurAMRYtMcX8yNguSfQ8niYR1oMZJ56YkoBV5mMZE2UjvQ
G0Yu41KMAh631Q+xSpNQsYbC8+PGFFC4HXeWoI+XLU/FUtwoMLGGKrDwhITE
XpJUS4MoEL3GaPd0Igm9GbDgL/tBgctrcpUpnSQkey1l11QOBQSiOLmH1nUi
B+3gWcUaCg0/OxGWInP1bScFvI6kDbXbdqLLKfUCHCMU2nroRD791xkipikw
fthjQ01RJxo7EcW7f4FCw6tO9PnIpFPjEgVMa/ZOFW3rQuFVettf4WVh27tZ
uee7EP+NOTX1eQoQbdqqMx92IfMuvePcUxTwYZQMS/3RhT6Ln93RNEQBjPFF
QkILrq+6teR7OwWmGcYKv3F0o8/Sdo6+lRRIeKfo/0WhG7n33Ry9nUUBi3fv
o8ItupG56aSjXTQFtu7ruxEa0I2MX5fy3/Sn0NZbN/K3aaQ8v0UBb9n4dy8p
3UixKP1M2kUKbf31oOthZ04RFCgwX2R011OjB12uPr/Wcj0FUq5+Of7QpQep
nTQboZBHweYq10WXrz2oMSLk9fc8fP5mdcSc63qQJq794u0otMykHbjB1Iui
f0mRI61GwW9GRMNqXy8qp8i/Gz84Cup+lvxmV3uRbN7DjEeMo7T124scmrYu
m5SNQPp2/smLv3vR4swtUtirEbDf7sKuPdiLxtYZuspfGAHprJwqTYE+dJf7
5ZLMxhHa+u5DaefNf0TUkuFN5otF7GYfKq9Jj3zjT4ZzurUFhyP6kBaKfsGv
TgZm3UMtByr7kIPbyLvtDGTa+u9D2OLiLCl5GG4O96VL7+pHgi+1Oc5ZDdPw
oB95juwwcxMchh6PN8FbnvUjxTTncpfCIQj2mPuxKbkfkV/Kcus7DYGukPId
/u5+pLVBZ3CH8BANLwaQ2GCN9HzeIOQlUC5woAFUXrnmTJP1ILgk6Noy2Q0g
Re0UteY1g7A7Id19KWQAfda0sWKKH6DhyQA6IuFGsdcagPdq165OzAygHpOI
enlKP+iT4qRGJAbRG48be619+oGbxH+sX3sQ1R4TeblJqh9yO1x0Ot0Hkc8W
s1GD3D64fydXuPXnIMoPTLyjathHw59BpKjMOkGe6IWRtQ4LRM4hhDnZVts9
74XItXU8ZYpDSHbmiluVaC8YfRFpLrAcQsabx80VEnto+DSEerQDU9JUe6Ao
qp85I3cIhW1nsLFp6obHR2UrksaGUDBzdIyFbTcoHg3s/ik6jAgXWtMKFrto
+DWMBp7x5n7y7YLoWuXcT67DSFZyKYtftAsM/sOzYaTm6Kek9LMTNl4fCw+u
H0Y8E66yO491QrnthZTXzGTUOl3Nz1BBgqdMHx76ypERua7oRIcRiYZ3ZCQL
NeaFLR0wG6JxxcOPjLTObXmEFtshNiT+plsmGRU/VIP7Iu1gGrLh+e0hMrIy
zeD5htpoeDiC9NUrp/jMWoG4L++areoIwqq/Xph61gIvSrj2WTqPILGp63r3
fzYDVuKgahw5grSGD0Yv1TfB4n94OYIIOJxlMzRBvLHo9gvLI6jRLdCNvKcR
LP/Dz1EUL7+Tpe1KA4hRy5jUDUaRMb5d1b2qh7pZ2U0qXqOIYPNJSaS4Dvxf
unQdSxlFUiOqWyYZ6mj4Oorcm5gFg1AtzPudWLOfj4K0PBQ+n39UA0mSPvW7
MQri4Ur+4lJUDTaS48M7blCQmiSpQY2vmoa/FOQ+6ye03rQKmrI+lAqXUpBg
RtMWqVQiBF3oDxCgUhDp4a6mBF4iREl/qWVfP4aIp6Xub+2pgIex+h0s0mMo
/pmVM1vCXzCaWTzBdHwMGb/U2v/ZuxwU/8PrMUQojMIRrAw25OokLt0YQw44
mo5ZlALlOOuf+SdjSOzOY6sfViVQmpNWPBs2hsJ/B/mvcy2m4fkYwpiFlQND
isDDd53iROkY0vpst/i8tBCMmxLDKJ24POG8rBlnIShdsvxKpo4h9+tiRtcN
CkDwP7wfR0SbjA8DGfkwIZG1sV9yHGEPlng2y+TT8H8c8QgatQv/zIPYsfVP
O3XHkaxQtqHY8Tx46lDo326L63tKPt/emwummTbTLR7jyJ36bPfRkFza/jCO
xvZPZ5w0zoWNmZWc9fHjKNty4u9BhVyYYnO2rynC68N2iyWJ5kLlM0lXYjtu
PzB1W9jG/7t8P8GK6dzQOCIpKTaGCuZC/6VP6X+n8fYMj71+jet3z/UoazJM
INnZkvPuUrnQ8U6yvJR7AmWHXSNrHMwFNWUTj9OCEwhr+aTQeioXpm0/cRVv
m0BjHvNBh4xy4Sp/e47qXlxenNqhfjsXDJO2aBQoTSCCUJTGyutc0Nc1qT2h
ipeLOdarJuZC7mKod+75CRT/+xcXa0Mu3JBsX3/cCK+f/ngALedCY4VgKVjh
9hmvWDZK5UHtDQOdY84TyNjZ5WaaXh4cEwjkyHqI60fPB1Y8ywOl1PrXh19M
IJ6VQVbOzDwYIAkKZwTh/li01mKTeaD9XKdaMXIC+d8vKXy8Ox/O7gw0TP2B
98e89Fm4TT6kVVXyHkyfQGIu/VpPY/PBfIE3NCl/ApGGP/+RGckHk1Adif1E
vL3Ytx3WcgVQesKvOaEF9+/JYQFV1wIo7K40k+2fQA6hMTwv8wtgnw+nUNwE
ri9kaXWEtxDakzU/7V7G2wtYmpQ3LgS1K88ufeeYRMYBi15XEwpBZbm4S3rD
JCJo9OclMhcB9oHzeozYJMKitRPZDIogVvWkuJTMJHLnPOWvnlAEFx2effui
gOtHqM3e5CyGbMFck+0nJhGP4b8IsRj+pDENfzo7SYtPiiFD/6SzuMEkytbd
b7tTrATEGdylIyxwfZ3+8+MPS4AonZu4xXESjbkPe2/qLIFDNYvWH9xw+R+/
XWJPlMLBm8cmhb0mEdGqZ9L7ayl83OwSExowicIdbtu+4y6DsN8ZckIfcX8L
HEl1TmWg3rv4Ozh2EpF0bU02NpfBL18FJ4EU3J9z/d7ayuXwc7fLQmAO7u8J
JznHb+UgWJ+YwP93Evn/2+42/IXClWmlgEbcXn2Bnbz7X5CNlh3n7cHl5T/e
TB3+CzJqTq7+FNzfawn8JRcrQGogkWndAq7PNyXgml8Br/1H031Zp5CY+OKL
8H2VgGXInuDmm0LGhWfWyH+shBhT2zlvkSmExd0desVKhC+MPzw4duLlWzfH
U48SITJylMtLfgrFuxk9XXEmAqfGzlxWbAqxr1laf/k7EdKcbTWeaODyktoh
f7uJIC7yhYH54hQiUEnJGpurQDSr39vDdApll9hXlWhXgZeF+HGGG1Mo+nGm
qKZ3FXiymJc+dJlCina+7IU5VSC394vOsucUEkyx3LV3rgpCG0gc9/2nEMm3
fNtD2WoIviMesBA6hcKn/ownX6sGBjGj065fcXlGd7PKD9Xw8/THauqvKUTt
DdiQV1cNsYMkwzt/8Pq0I/U+3DXA/3oz30wJ7q9/5k2pEzXAK2cU6lyH1394
6+3rUgOuzW/PT5KmkBqvdmpiXA1IMTc3O5Lx8cu4ZvSptwZefed/NTY7haRI
H/rPba4FP009IXumaSQbekgiWasWvMlvP42snUZSwwrra57UwtSb6kvXhaZR
8YrI+YiMWgj/w989tH0aRbM7uApQaoHz2rl31vtw+fqYiaPb6oCV7ZX4wJFp
NPb2nB73xTpg+lr9zVIN17f4dPOBdx1cP7fGtFdnGvlf7Bf0z6oDIZdzw2ZX
p5Ga3WbV42N14LnVO6LLZhrF/3lU4iteD+45ZdImt6dRo4bQp1u69TBkzdrZ
8WgaWalY2489qYegADWbK77TyN1fxpgxtR4C9ntPtgbj9r7+dAvqr4ellvwY
w894+3OmlAKBBpi7x7q/OQ6Xr1y3zfNUA5hKHB/U/43bk0oWqLrdADxnHzs1
FE4jguYmxfCoBnCdyZLSq55G4Zxp/XM1DXA7aCWhtm0a8bjVTDUxNILTweOH
dQanETuRsqCwtxFa2++NV03h4/mVOV/iciM8Z//jqkWYQYTTjakBXo0wGU+V
reSaQe7JNg2eSY1A0VLKOCMwg6LJv3HEbYThsXsnysVnkJSo1sFezibQe5cy
p75nBmn96/6BJmDMo3qUHJpBY9SZn8evNsF12/2H1E7OoGCnJ3fSvZrAmutW
bqHWDFLc2PI5MqEJqhPj7p68PINkk26GsDQ3QYXOOEP+tRlULFz2e4ihGdzu
73+hfHMGpT20iDq9sxn6tt84nvNgBs8vlS+KazVDV0FcKfKeQfHCW5lcbjeD
5o0h9z+BMyhbT/nO6bBmmHsrw3k0YgYJvviSGJDTDDMKNwJ+f8f1I7iGDPua
4Qop+rRSGu5/qKNQJGcLGLgPVaflzaDwPx/iLu1pgXyp7c8VKnH/v3s7BJxv
AUfta3wpzTOI5/6dXRrOLdAyH1Es3zeD2GUtSO5BLdAY0n0+cRy31xZoJJvW
ArVK21v2LeH+h2k4XmhqgWPdV1/Fs88i6toHXYT5FhjmjhTayz+L0swSzkgL
tcKF5Fbijy14fUjvr6pDraB1QdRAZhdenyTEN6vfCmenr3bHHpxFYu/Wvv9w
pxVS3oe826k8ixTVcnSKA1vBvKhVPPrMLCpucmZ2SGyFCnuBJslLsyjawvb+
K2IrlK67ZBplPov8fcKeHB1pBfm0AEEJh1mkb6k+bM/RBp2ddRGR92ZRsPic
utj2Nmh7JLBr67NZRHLpOmSItcEpae3Oj69nETHUW1fQsA2USwNsRD/g7enb
LV+91QY/nSrE3sfg+sXlLHtetoFBGE/s5uRZpDYcbeMR3Qb5KhrGIdl4/6Lh
iklOG2T3+AwKls8i90068YVNbZDpWeH0tmEW8Wzf+iplvA0kd3Ps3Ng9i9jD
oswPcbRDjZ7GrzejePsFXwKVxdrh6MoTq/Xzs4hgeCW9/WA7KH0sGn/FQkWy
L7Sus5xphwOI4x4PLxU54NFtimk7fOw/se+lMBXFZ/Y8nLjTDiQiU/EaKSpy
v519q8CnHSzClc189uPlxDcyOyLaYdD+0TInoiIelTY2seR2uIGy3z1XpyJ2
rLXuW3E7nL384BC7HhUZf30VVNrSDkFPs2qfmlBRsdA0j+9oO2zWW7RnscP1
j9cN1BE6IHz7YS7Pu3j5U//GDL4OkJh2+cLoSUVETAZHuA7gNlFUffSSirJN
rEmnDnTAK9k7nSshVES9zce7fLIDNhJS3B58oSKrdUmMJ/Q6ILRySmApAe/f
9aMnFC07QOzj/sR7WVSk73aiM/FWB7BxTWjPF1OR1j+6wLMDfJplR+/W4v6P
tfX5BnQAT6z989kOKlKUGE2YiuiAQJefEreH8fbzkuxH4zpA6PQITM3g9c9s
k59ldYDZTRnDm4xzqFiPmJRf2gHK/kPz42vmkJVct11UQwcUXd0Z5LBpDlH3
9f3c3tMBGnut9lEk5lD40bcxp8c6gLj8pdxOdg4ZX5gx4l3E7e/su0Y+PIfi
40kPsplIQD35mc321By6a0zoPMFBArcN3ZGD2nPIfyLA5uNaEjD0bj1mdWUO
lT9oG6xYTwL1dSZNfdZziB8fHaIgCSrbPzpb3JpDbu9r30aJkODHghF/j/sc
EhPEqFriJJArC4sz9ZlDXpm9Q0WSJEgLaVHvfDuHPLeEnRPZRQJCgVDf1U9z
KNqNPVZ1LwmevLn0qP3nHBLMHNiltp8EnObBwkYZeP30g08iCiQYcNfLbCmY
Q84isTtLlEhwXSvwokEVXr9ZauzsMRKkuNZONLbOIeKuD66fj5PgsPp6v4sD
uDyr6pV6FRJkb9LeWT85h478F++S4ONBnhLdlTkUNn7fMUadBNtYz5nXcM6j
saAed6MzuH1Zv5XzG+eRvyikDp4jwdhKeQhx6zxy91qz8aw2CW5Vch08t3se
RZPGPLx0SaBLLqn7qziPxDarCYTqkaDxN7ujpso8Iv/bPvVx+32nuMvOzaM3
TrOHjhmQIDr56dfThvNoUSdWpcmQBDJPCpSLLedROVf8y7N4Phqvy9yu6jSP
ahPUB99dIUFwdu79gvvzKPPW8sivqyQQ9mfYpPJ8HilSc81jjXH/3BOTct/M
I+Pddyw9TEiQ72ihdTwc11f5+FLOFB+/x95k+DaPwo4dJmXgZZfROK9jqfOo
eK20o4gZCd4T6iSycueRSo7PTn28nMM3n324Yh7x6Jlx2P4/yn0SW4wymv4n
z6mgMqfY+z97IRHWgalj/2vvT6LfvoOL//Pn9WfsbxLbAt1fy8AJq/3rF+j9
GTbfx/xLdIHe32oi5ZOs9AIiR+1kDMPH42L4HhR3YIE+Xq32ds27jy/Qx9MY
fb/1XXOBPt4x1sM8u/QX6POx55D09xizBfp8cesNaEjZL9Dn89X2Hf1fXBfo
871x2sJj+9MF+vdwdUuUyOdXC/TvpWe0O038/QL9e8rlitSPiF6gf2+nWkiT
W5IW6N9jeeyWlx9ggf69bqi7Ii1StkD/nkM+vy8IrV+gf+93cwwthLoW6Oth
yT+E8G5kgb5eHhk3hQrMLdDXU6m3oEIQ8yJy2JV1cDO+3rQMLlbz8yzS12Pt
ziC7gM2L9PX6S1V3Dd+ORfp6VtgYEO0vt0hf74+w6hPrji3S8YCVh7fD9/Qi
HS9edJxz5b6wSMcTq8U1Qi+MF+l480vyTDLH9UU6HinMvNDyurNIx6vMgtJh
1seLdDzDAjmePfFbpOOd6K8iSeaQRToeWrWy5npELdLxkvztpBFDwiIdT53u
eVIfZi7S8XZaPS9guWiRjseuQox779cs0vHa9Gl2xUL7Ih3P+y+sWLsOLdLx
/vr2Yyxz04v0/WBiyi38DsMSfb+4nf/78Az3En0/MZJ1bXEWXKLvN10rabcn
ty3R96NrlbO8TnuX6PsV+cPBH2NKS/T97EDJLTV71SX6fre+b//AyPkl+n4Y
nOz0+LrREn2/FHmSIDpstYTiQ7Wv7ML30wjdsXRr5yX6ftt1NF5r4OESfT/W
7BtivfZiib5fqz2V8e8NWqLv5yqSNzaZRy7R9/u4iujKrh9L9HjgMnVI3yR9
iR4vFIZvX0fKX6LHE7nYteArxCV6vJFFit7a1rJEj0d2PO9uMOxfoscrtb+2
mzRPLNHjmWOGxgKXlpfo8Y7SQkR4A8cyPR76/KlVT2/DMj1eijghSqoVW6bH
U2ftjK11ZJbp8VbqhtAt1QrL9HgsKbk1WuvEMj1eE70icLXy7DI9nit7dmng
jMEyPd47IPvmQ7nFMj0e3Ees26HhuEyPF2UcBBJK3Jbp8WSQoPY1Na9lerx5
QvnNWGHAMj0e/TFU8eXkx2V6vBrjzSObH7tMj2ejpLXTlVOW6fEuT42PfU7O
Mj0ezlqsoKK/y/R4WSqKI+5P4zI9npY4qaF4tGeZHm/7jjwZ/U1Zpsfjz32L
7igtLNPj9YOpHAzprCv0eD78qkqqAt8KPd4PW3mCpYis0PMB1ujsGfmdK/R8
IamK0T1RfoWeT8Q7qnDIYSv0fGOT0EOI11ih5yMbM7LV9l5coecr7qYLyz9M
V+j5zG6fo14yN1bo+c5b+bvHvrms0POhgNr0op1PVuj5kp/zgla0/wo9n6IK
H2TbEbZCz7eiVO/6R31doedjaym/VCUSV+j5GtfLqcrIPysIM38l2Y7nc2x7
D17aWrpCz/ccGxzWhdet0PNBUYbEYNFOXB6b7S3H80WvmJGz78kr9HzS8/Te
xs3UFXq+OUuVP/WXgYCt5qPTxXUvfNgI2Gq+Wt52m6ixhoCt5rMMcm92ca0n
YKv57grDAYdSQQK2mg/L62mXPRfF7dHyZU7byXWnJQhYNopSf4Pn0wh4bNml
Cdhqvn30ZUJc0V4CtpqPH7mqPfX0AAFbzdcdEu3PqR4mYKv5vGoxzxuW47g+
Ld93E95DyVfF5Wl8gCu5Yr+nJgFb5QvuZtrfPaGN19P4hB88vjWM+gRslW/w
3L5HMNcI95fGR6S5aNx8ZEbAVvmKlNPkVMyagK3yGeT3HOsJ9ng9je8Ysou9
CM4EbJUPyfbQCHvgitfT+JLpeqvZo+4EbJVPmfzCcWTpCQFb5VukFiTfZr7A
5Wl8zPK64pZ7rwjYKl+z1GEldvgt3n8anyMn//TefBg+njS+R5Z5R3Z6JAFb
5YMs9FU2u0Tj/tL4osN2vVcVfxKwVT7JIYfx92wiPl80vunGq08rKem4PI2P
um6ionIb8DKNr4pINvl4oICArfJZd0oZe6ZK8fGj8V3fRcVQEpGArfJh30az
H9+sx+eTxpdF/zEplmslYKt8Wjvfw20Tnbh9Gt+WtEPMKqEf16fxcYP3juY5
jODyNL5uQKOdTXYSn08anyccvmBKoeLjR+P7JpPCvv5cxu3R+MBxz6NkO2YG
bJUvlGwyOLWbkwFb5RMlYhZekNcxYKt8o/6SYP+3DQzYKh+5ly9jl+1mBmyV
rzS3bHgqvRWXp/GZpgfvlg1KMmCrfKcx6yaeGBkGbJUPDTQ4aGslh+vT+NLr
9g1xOxQZsFU+NSJvirP/KAO2yrd+DAg89+UEA7bKx743O/jG4jSuT+Nrq1N1
KBLncHkanxtTPrW/R5cBo/O9YnwvPxng/bPd7vw2vwBax37VmBrj/aHxxTwn
iXvELRmwVT557QbHm522uD6Nb+7dyZcW7siArfLRQg/2rje+g7dH46sFzxIv
brnPgK3y2WciR361e+DjQeO7JVL9Zt974f2n8eHiz/YeMfLD26Px5Xotmm+F
3+D9ofHpF76NtLS8w/2j8e3eK5wKoR/x/tP4eGP+7/cMonB9Gl8faFVSv+kb
Xk/j8wMUbTY3xeNlGt//mp3LODgF94d2HlB4Wer3xUzcPu284L1jycrGXLw/
tPOE6oI+g/oiXJ523kAMfPYx8C8+n7TziAoLqR7dGny+aOcVTBknEX8TPl60
84zmir7HNe24PO284/9fvjTyeZv2EN4+7byEc6NZHnEab492nvJcfqvZOQZG
bPW8hUOng7GCmxEjFTO9OhmSCxn33kdqCjJishciybt7c0FfpGNX2Ta8TDvP
4VB9X3Z6LyNm/N8FjzzwMje0LVZixMLPujhvk8kHtsebuE6pMmLuXL8s5jLy
If1bQ2zBedz+kbBsZ4MCUCwNVFcxYsQIVeUBtpyFYBjQUJNrhZdPWuSFlBZC
c0LgzePOeDlqPceXkCLwadZZn/2QEdO67HdRzLUYuOZ4E4+9wP0ZmHldaFUC
3gJE7awgvD0nfjFOy1I4jPlNHI5kxHgUNl146lgGjZ2V9zJ+MGIOhHyjLO9y
8Ob023wonRHLprZ8EEv4Cxw7NX+n5uP+ZYR+VeqpAK9TnIYHiYxYsNi28Fxe
Iig5FM8ntTBiRIOqPsVUIqT7PQ3Z34/3311lvZRpFbReLN72a4IRk4oLJBrx
VcPl20/zZJfx8cXDf7+iauD+qGIWx8GEyXKNhFk+qgGfLEamPRuYsP/vfLQW
uFuzI7+LMWGKVzJOczPWQRbzQ+VdMkwYT8tGi4PFdWDwJbssRoEJC1+7q3Xi
VT1wVz6wlTrBhA34GpjMX2mAFyNHuL6exeXrCxs58P2ak3shdrsBE+ageU6/
i6EJfsunq3+2YML8VayYNzc0wWGdO0PijkyY14HLPR9+NoORcPrNCDcmrHFB
d4OQVwu0Kt1ZL+bFhI3ddEtSNGsFP7MDiR8CmDCCzzUiEbXBWo9JbZGPuP8x
/xKudvANT5gIjWXCBE28nawX2+FYif1roRQmjEo8pjfW0gF/+nfLvcthwohX
7h+ZwvNRUrz9b4G/eHtO1yQFK/B8tHK3YVAjE8Zuv04ZO9YJPNThef4eJgwb
Fdc8/7MT/DfGhgRQmDCZT68qd4l2Ac8BKyW+Bdw+1ZOc6dsFOUaSzf6szBhP
4bnu9sUuuLJyzWwdHzOWbT1PdrfthnVSkkx+InjZW+fHk6Zu8FPtieTeyYxx
/wtfVHtgrUWk8gt5ZizcWTxHN7EHsn2NuzgwZkzfMAHIor2Avot6eGkwY25l
YXtePO8F01vGXGwXmTH/lxuvcU/2AilA9NsTU2aMmdJTY2bYB68zW9WZbzBj
pOs3zVxz+4CvJWTIw4UZk/HZzXxIqh9ez+l7MzxhxgYqH3z28ukHZXEBaXd/
ZuxIXIKGLqUfSHn6icuhzNh/8bfWAPiTN+rc/4r3z+/SjET8APBw1U0s/GLG
PgdE1S+sGQT/nQGvXf8wY1osrZOL1oOAaZ+XmyvB60Ujq0TyByHbYV31nTpm
rFZ9q7+G8BB0HTpvOENixq4XLP+65zQEpvrrFpzJeH3nVp+PhUOw/tHfkMlZ
ZkxMoE48UnAYAj6+UHJiYsGS0laKna2Gge/P6eaxtSxY4/bYVNaUYcjvY3O1
F2LB2L+EXNJgIIOJ12mm0e0s2IDVBQ0ldTLwJbB9ur6PBTNfsjTN8CfD68oC
5eEjLJjuPV67oloy8Iw+7rJWY8GkpDfX624cgdyNyh4DOiyYzyF2JYMLI6B8
gCB+7SoL9p2fMT3/1QiYLx//1mvDgonN/qh/XjYCPcIEDfPbLBiJxBUQwzgK
gSf/DHU9YsHc1uQ4blIYBX5zN28TXxZM/196bDUKbzyUpEnBLNiiuc+6xLej
oPKNWnLlMwvmBZK2tXmjkF+SYt0Wx4JR/4WnI6PQ95o6YfibBeP+lx+vp4Bl
Qsrr5kIWTPjf+b4CBQSbneUuVeP97TkpSbpIgbdUueqGNhYM8zIvTrhFgY0C
4456gywYT7zeSIg/BYpRHG/dFAvG7/5QPTCaAhadYyE6BFZMlplQ9CELl+eM
U6rmYsUwXaF9iZUUCJKya9YSYMW0/l3PacfrT+1yrRRnxY5oLvQtD1Gg0H5w
09k9rBg/oXuT/BQFVP2+ppcfYsXyXzzZ6jRPAauLg8oaJ1kxxQWm3pQlCgzc
+tpVooXrW4bLLePldx8sPNQus2I+dtpV+gt4f7K2iRddY8W4RQ5H509TILil
M+fkTVZsquNxw54RCpxmDjfJf4DbH55n+d1Jgb6oziFlb7z+meWHyzW4fMVH
75xAViwpzLNaIBe3N2IkjUXg/onK/x79gY8Pl3Dpn+94e8TK2uEgCqjJN1sf
TWPF5KMPKvLep0CRdjBHZh5e9pUUMDOmwNDm5tdKlawYQWV+ZBijgLVSsFx6
Myv2XzglSgEhM71qhT5WTHe2uC92bhRCHvE7pYyzYu7hrSmUqlEQCq/mPbDE
ivGcfHTs1ddRKC32T0hkZ8MaF6kaL1xHwcqmWkmOnw3H8/vOQ+qjsCnAvzl+
CxumufJa94vgKAQnnHXdu4sNa622UWvtHgFBIrfQz4Ns2NS/+8LfR6CEWpou
o8yGSfy7fuY0AmoCzy99O8OGyRc+ayo7OALz6NTczktsmHvmxR+aVDK87fTy
iDZnw8wZ1qfdSiWDGucp8R0ObFj8Tv+mS85kKJZiyY26x4Y57/wpvbCHDKdO
5ZlIPMPbu/SB7U7/MFDtHzF8es2GObxdyqh5Pwx3/VDE1g9sGNHm0VFJ7WEI
ufhIOjyGDUti+rnLknkYhG6jUtFkvP7huiu/k4ag/MOS9ftsNkyx5t+NrCFQ
z/rNIVzOhgmaGYsUrRuC0haXmJAGNixYwHjL+4xBcGVWPL2pmw0LdzlE/mM2
CIJfXKrfjuL2j0tuOsQ1CCUVCk4b59mwz/+uHyYMwOmRad5AFnYsf13FV78L
A1DMlZSwnpcd89wxNR9A7QdXeafzr4XZscs8pQuKITjenZMd55Fix+K5kOJH
JRwP5x1dX+5nx6wi2WNamvqgbIOs0FqE24vPC5660wcX9o2m+6izY/5qLdT1
G/rg3Znvl7j02DFd8edXVBN6YZu1zdxzE3aM/bdJS6RmL3z3lHrHbseO/bud
pNiP4/1eG/Fnd9mxI7z5LoqPeiBYXSqXxZMdK8+80BAh1AOtln0mni/ZMZ/h
jul3id1g4fGZgSkUb38mYN8xzW4YfW8a8egLbv/fdemeLribLnac8AvXH/wV
3OjWBS1mpqUPstixu/+uH2/oAlF3MZulYnZsSkeY7cqPTogObedwq2XHCPP3
V/pOdsK+1LCY+Q52LCwvuTmvnQQZ1QanXYbZsezd+rFcd0mgMio4ODvDjpHt
9m/o4iVBdLCB021GDkzsxb8F2wFDSYJ802s4MOLmHU9cXraDM7E+4eYmDmz1
vvTy8JvzExIc2Op9ai82nXEHWQ5MbdieIxu1As823leUw3iZdh9bF1XK3jjF
ga3e104Z5Mkga3Ngq/e5MZbKS7ZXOLC7Fu2xw1pNUCLmOzdozYGFP/xNbnjf
CDpHNN5Z3eLABhZbLGC0AfZYq8v1u3Ngq/fJ0w49/2vhg9sT+6sv/74efsax
2fa85cBI1fv6Ny3UgYK7KqvZJw5s9b66zEz+p86fHFhwmp9jQUEtJBcyIeMM
3F/USa6Xq4WXwcrN7QW4v51uQ/pRNfB0bc4doypc/x98iNTA2o4VvtZWfLxo
9+mD4o79NBjA7dHu2/tsz9JomuTAvDr49aSj8fx1dqHv4goHtnpf/7Kdq2c9
JycWnXHq4MW/ROg5mr7lwkZObPW+v91aakbNVk5s9T2Auedtfe3dnNjqe4Ej
esmTREVObPU9Qb7klN85FU5s9b1BRpiTTMU5XJ/2HkHFLqFI05ATW32voNS9
16LMkpOWf5RDXuINgroTJ7b63iH0yY/Q4vu4Pu09xOuFXYdOPefEVt9LHCi3
qS14g9ujvadoCouxVwnnxFbfW8zySa3J+4b7S3uPUcTcHH08lRNbfa8RLbCi
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
           "]]}, "Charting`Private`Tag#6"], 
        Annotation[{
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag#7"], 
        Annotation[{
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
           "]]}, "Charting`Private`Tag#8"], 
        Annotation[{
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
           "]], 
          Line[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
           "]]}, "Charting`Private`Tag#9"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
         "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{}, 
    InterpretationBox[{
      TagBox[{{}, {}, {}, {}, {}, {}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], Thickness[0.005], 
          LineBox[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
           "]], LineBox[CompressedData["
1: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
tGRGcA==
           "]], LineBox[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
           "]], LineBox[CompressedData["
1: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

           "]], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag#6"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
           Annotation[{
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
              "]], 
             Line[CompressedData["
1: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
tGRGcA==
              "]], 
             Line[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
              "]], 
             Line[CompressedData["
1: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

              "]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#6"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 180]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[0, 0, 1]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
        Annotation[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 180]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[0, 0, 1]], 
          Line[CompressedData["
1:eJw9lQs0VPsex2W6oVv0xizuwVFKqSEVNXzVLccZIhonlZCih955dnpIokMe
FxWSU3d5FrfkXeMtlGcMRXtm9jYPz1OTkKM4d+qO+19rr70+a6/1X9//9/f/
freu52knL0UFBYVI2fPtPbPOXK7Zfi2BQvtvzkGMKX8wFyfr3/4/h+Emz/JR
k4zdDBT2iyz+hWGNPa5at2a+30bJLbe7UTIuPEZ3u8hJQcK17tkatyk0pZ3W
FVk8wIn3/VdKZezXofL5N+00rOjN/XT6DoWxaP9hxlQGnJKbhYxECillC6q7
iGxIl9ns+ipj6+GHdy5ycmBSY723IomClL7jpF7KY9iEhzMuJ8/sn4fy1Md7
196loMNhzivOfQpVx+uokTGp+SksQrsA0iqfOxtTKJgaV549EFWIhu2s/CAZ
37CJcmVMFcH7o+fBGzLmu+/7iXayBBoG5T2OMjYJMDDpIkpxeSn5vFm23wiX
l5Nt9xwu5OpnY8kz+jjQaj1iVSbTl0wLDHFYU462w38x5yfO6K1Ay9lTi9/L
/NHTVMmZvF4JrSCdpzbxFBRtDh8TWVQhMDWwZVkshZyOV/zmsSr8ssqiw/Ym
hV/cjdnFudUo0TxV2RdOYdbQnZf3vWow2LK4tTuEwkP/acsI7VpwPM40a1+i
4KzoVXC+sxbt00ouj/xnzvsCGoVfnINPUxBwVvRZ76gDvULKijsyc/46mP7h
mTzgRmE999NrzcJ6kGEaj4OcZ/xogLVv6zNrWwrl0YWz/9B/CXZVVpq9FYWj
dK0LXcRLJGb/LA0zpbAwI+RDRcIr6KQub1BeSYFjPHA4264RF3qoxy/pFLzK
HHriZjfBVL2E2TVvxr8m0E8MMg2nSUgDFs739m1GRPbo4pb3pNzPFozHG1s2
8UnsiOF/NhO14N9KlnNWt5Byf1vRThYVSTkkdnY4f/ybYRv0mwqmVj8iUXac
1jZ5vQ3jSfmW4kQScU+KIj5Qbfg2fq0wEkfGj+0QWbyGnr1B9+A5EkymtkJ3
0msM+kVWuriTWBTS9qx57DWYpyZ4vrYkrmpeTqp2bMea1TtZWzeR8vm049zO
q00teiTWpItUc1Q6wCxzuq2rSkLh+7w6YPrmWFr6iABchm3oraoOrNSrMeQ3
CGDdMOEZoc0FU+RdMut3AeiqOdpXgrjI8g/LNvITQLrb/e35Ti7OdOtOH7QV
oDZpUfxR404kBHTSJLoCTEc1rjoQ1Qk7c/fhsgk+/MpcOU4DnTC1/yebauXL
592F2AsO4oJMPmw40oVbHnRh3nslJiOYj/Khq2mMqS58Dex/vn8vHyuHbFv1
974Beyn9htd6Pu7TeQfphW9AcpXiAlT5UKZn3lRd+BYT4UYWyYM8nNM8W6x4
8i1yfp/Ol9Tz0G+jyJpoeAsrvxynCxk8ONo0+Q7rd6P/4FG/c2E8vAo4oNQb
3A393Imw6iM8eb66cZg24NnB4iEro6S20awHZj+yfr22jodF3+9TD6w2voyZ
WMrDxXQ7eoG0B2n6+u0bpwl8+p7HdyDvl00G9hPYz818cy/rHSYe3lKp4BJo
p5kfj59N4AlbXWpSQ4BJo90K9yBQabnZT5xPIM8kweASh0Cw+YWv/AwCWiZu
Tmc1ePAIq1u8NYVAqPHKS16+Ml2hBqOT8QS+eJSq7W/jQcdaOWZjNAEvj2ub
HdbwYXWpMWVtJAEiZknz9ht8LDA8qy2MIOT3lY8C0+JtLlEyHdFZekZWAnCc
3zxIjiOwoty8UC9FgNiWyobGZAIxZTRy2YQAysWF1/vSCYT4s8znGJIgdXRf
qRcQ2OT/2F7BhcSu0cp6jxcERuZPqH+5TiJUc/eTum4CWfMPGI3lk3DRjLro
9pGA6/zqbR8oEozawRjGPB7U0+fOG1SjwFA01NpqyJP3JwUbVwV6ui0PN5gl
g3wfCqMRmf84doYnzwMFjRyzzn2JPHzcErK0o17Wu3drCntqePK+krGC+uHG
ER48O9aN1v/YC/LqrFC15Xxo+QSWVTv2gj1gkMLbx0fbcV4750ovtv+Hm6+T
wMdNxRUpxbm9CO7/OYnbJvNRMTIv710vFiSG2/25QICxWdK6RypCaKTb/hXH
FiAvySw2Y5MQNqDbJ90VwCvpXvp9LyHMbn8LhAC6xpJTd+OFmOTmsQY0SXne
hGgITGAFbiMRwXiSFPNBiKJUXa38E6Q8fyJsjv7BMErWD5P1BwJDbUVY5PNx
lUIdiSL3jK1XgkRQ3dk9oDRG4rj73/cEZYqQM61cE7ycworPu3V8O0X4ltbY
PRTejZdsOEUTo/ynqbG5kRSix7VtjxqLEVK1IWC0ggIr2nvJIXcx5oQoaG4e
p+T5FePiaNiXBqNelC5f8mnPczHaM51Hw717cXp5kLLTgBhzU07QAu73wrCs
6rWdugQuzDGbazKf/pdvCeb6HBoOVRcigRP51eq8BLV7tkScZwvhwOa+2PJA
As97hoL1cULMZpu/29AqwfTTX0eetAnl+ZdA45CHdr2aCOeHJKWGq/vwlLHd
3t1BJO+DPsRWj610jRFBFJKQ+EN4H9YKM+Ykt4qQGPJnrmZhH/Qcj+79rCYG
m74tYImwD2mTLetYu8TyvugHK3Xoy5lYMWryPjiroB/Rc2R/+DYxgvLYPrST
/ZgzMjySqyaBUV5p8FRyP4btA1ID7SWoGMqzKMvph/f3JcF/AXYPcUE=
           "]], 
          Line[CompressedData["
1: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
tGRGcA==
           "]], 
          Line[CompressedData["
1:eJxtlHswlXkYx49yKZfpbBdFYlmdXEpHG6cdOx5JGrSx5izKJSvsEVaxdqU1
W0lJckmkU64JyWb3OC7jepyyFJUV1m0o/N6US8rGeS+bfXdn9tc/+868884z
85vnfX7f5/v9GAZEuAct43A4fuz7z3ekLXVbfrsCgv99CFDTeOtOsfWryuV3
zdk6eZA/G9OjgIUMS9tOPwK4ZREXFkcV4NUSsSfZk4DME3eNv59SAPfzpsZQ
NwJ0nWaa/1xQQExPNjfKiYAjUVu9o5aRsLMuvv+aPQH2aa+oN1ok+Dz3tRiz
IaDtsGnWMR0SVtiqmh+wIsBlu8jytTEJ+sM5VUMWBHS9L+4M55NAXG3ZkG7C
9jclvpm2IcHiQqXRUSMCFHuL1EL3kWCSbakSqkfAj+vGC1+6k9DQ5VOSrk2A
EjK0FfmRMLnDauUIlwDnVV8PECEkDBbH+Ag1CHgykvddUDQJIoeQiDkVAn6m
fddOnCKhbv5+VDWHgB0dNyoCkkmYLj16ppRGUCsecn5+lYTq841usgUEnFZd
4vBNEvhnbywuvUGQcOXg6ZG7JBy7TKSGzCBQD8zW860joVh80EXpJYLJUx4N
Q60kFEoFCvkEgjC3TM9Dv5NwYLogrvwZgurYnrf9wyT0m3poyYcR2DivSfGc
JMEuXFiyfACBTMfdtG+eBEnuobjoXgR51twHwiVWz2Jey8ZuBJ+ougY+Vacg
aVx2Bz1m+/NTlr7UpiCLdyt/qAPB3FKnuMuQgitHJLVL7Qiin2hYu26jID+l
TVP4GwLh9IPeR7soSGzmhfbcQ9Bfv+L4fgcKYkcuqSS0sP2JfZodrhQ0tF3j
hTUjKK06V+LkTUH2oLvaiUYEWxNa7duDKZjL+zZfVo/gF6HyiGMkBQ5j+i4G
dQiyZfK41jgKzl5PNrtXi0AvTUnH4QIFycFBdFoNO9+pSqn8CgWRgsS+pGoE
948Hue3OpyBgQTIjrWL1i0+abr5DgWOFqokWW5+YrUi0raHA2iMgN1OKIIfT
a9wop0B3kRDsZ+uW1ZTM5jEFH8e686z+pyaMDXzrBj6cVxc4kLvQh37igpDM
mjkK+PVbVmmw/2uqTLG0Zj7Mc7nI7pFUjcbzBme+FX26hsb3mQq0VJbo0/i+
3V2vb/LNaKyHZ74FVFjRIHqxU0PK6jUcET64bTeN9fSH8ujy/TTW+3bIFNfc
i8b7sPjMrPz2ERrvS9Nj0sUkgsb7TN+85UVxLI33rf0u6MzmczT2w2GDW5uK
0mnsl4nZ8VqjHBr7Sa5R6FVQSsONspOBUazf9g09mzeQ0tiPnWUGqbnNNPbr
ul4/s00dNPazuCin9Xofq4fMa1TG+j2mxTtId4zGefgrTcy5NkPjvJz2H7i+
nqRxnh4mbRBkKTM4b26HPLvXchmcxx7TrPCMjQzOq8RRqLV6C4PzLNDOKE3b
weC8n7br3rPKlsE8UOV+NHrJicG8uDjqGqv5FYN5ImK0dC/6M5g3Et4XVSvD
GMwjwcJFt8QfGMyrhtaHU6rxDOaZXebK8wkpDOadvqSNpyxmMA9Fw6ryM7cY
zMvpO3t9lX5lgMfP6QtneRp58qzipwYG7B+lmSWxvH3nfC/jfRuDeRyru2x7
3FMG83p9k7nNH2z9H8//BqSyHLk=
           "]], 
          Line[CompressedData["
1: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

           "]], 
          Line[CompressedData["
1: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
           "]]}, "Charting`Private`Tag#6"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0., 3.3507058705484427`}, {-1.2, 0.7}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
         "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[1, 180]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168980380539215`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753499544294501`, 
       FormBox["\"M\"", TraditionalForm]}, {2.233801870804979, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507058705484427`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168980380539215`, 1.6753499544294501`, 
    2.233801870804979, 3.3507058705484427`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507058705484427`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9153209372003484`*^9, 3.915320955332591*^9}, 
   3.915410366136585*^9, {3.9154146871125345`*^9, 3.9154147257025137`*^9}, 
   3.915622463931538*^9, 3.9156228392799697`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"d110bb04-310f-45be-87d3-3eddde348396"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tbandup", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tband", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "tband", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"BandLabelsPlot", "[", 
  RowBox[{"tbandup", ",", "KK", ",", "Red", ",", "0.005", ",", 
   RowBox[{"3", "/", "4"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9151544282390947`*^9, 3.915154429116826*^9}, {
  3.915154524103927*^9, 3.9151545584588795`*^9}, {3.9151625636040363`*^9, 
  3.9151625669323163`*^9}, {3.9153149098470306`*^9, 3.915314913902046*^9}, {
  3.9153149670519724`*^9, 3.915314969734309*^9}, {3.91531854477415*^9, 
  3.9153185470420876`*^9}, {3.91532097427151*^9, 3.915321024373476*^9}, {
  3.915414744805479*^9, 3.9154147787417574`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"71a4509f-26b4-4933-9a99-075a3c035929"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, {}, {}, {}, {}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
      LineBox[CompressedData["
1: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
kp2L26e95/CWlug8VoH7Q3vv8X8AakFLRQ==
       "]]},
     Annotation[#, "Charting`Private`Tag#6"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag#7"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
      LineBox[CompressedData["
1:eJx1enk0lF/8/8wYZKlUQpJKElpIklTe1xJCEi1aFEqUIhJSCqWkkiyFZEuU
JFuiRRIlCUkqJOZ5LNmNbRhmfrfPt5nvOb/f+fWHzvvcZ7nPXV7bncUOblaO
NAqFEof//P3/xeOQO887v8OR//61wzTZtOszZv0An3rXlzX728Fjnvtz2okf
YKrSORpu1A6dJjRTVvkP6HvskcRUa4ftJpWePYo/IdKosmdIph0qvG2FGf4/
YcasdWnh1HbQ8F6mUd/0Ezy4t/7U/GmDh6kFpZ+0G6Bo1q/czC9tMDs1sP9N
ZAOcp1jd1S5sg3MPzGXzBhog+Ej8fuvENhiq+5XxyLwR+vLWKshcaYN9dWnf
7z1sBKU1zbt8T7RBrcD6YxH0Jkh5wPS6ZN0GGwUEoq7YNYGO4jNLjfVtkK0R
uczvVRPUvDD6FCDfBnIaB6zcZX7BkaNp7R4CbXBptbKfo+cv8PS+N328gwS2
XeHMfTW/QEd3b9zqShIc7S7qbFvRDLWayrHCWSQ03ZT8bBjcDIHrUrYHRJCw
+WbzmDbZDHIHJG7FepGQFfpQYSX6DflxZu4795CgVLT+mULcb7Aa2snM3kDC
zdcCLVKs31B8xp3xeAEJgV6m64VUW4CmHq9nwCVgnddTC4pNCxhyYvTOtRDA
nM6SZge1gM1kapbVWwIeTrddOZKLa/mUtPIkAvZPL9Hvb20ByXNfh38GECD9
QFS8a2YrFEwxP4bYE1CZ4raY3NQK9c1p6TWIgOCNBV3NLq3QTJjPyV9IwMaN
Cyg/Y1ohWVGxVovDgMENgXO/fmgF8ScWVZZNDMj4WtH8eaQV5PwqhekvGODw
VW34wxIGpGT8Nje/wwA5F5/XJdsZ0Cm9tFPNkwE1x37VvrrAgNqK18UZlgy4
TlOKe/6EAZq/ulOKVjAA0a5lZzcyYMa2p5GO0xgwQh14/1iEAPFr2783sFsh
O0Y7LHUdAYw9gdf9RRngGHPvQaIjAYqB7if/yDBg8ep217sRBEi1vPw8fxkD
6tTNLkXhcWnft7B+/loGhKhnxdzsJ+DI9ObdbfoMMCpnOYTgcRYttKoOxP2Z
+GDrc8mMhGSvN6IDtgzIP5iqd+EMCZ4Kb3escWHAsYNiu8+kkeBc7hNp6sMA
pTHrRZ7fSMiwTGGvD2JA42jBWle8blzvU18JhjMgdHSBmfPqNijNc+t7Gs8A
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
pKAeBfH8/jm5Vf2lRhTEywN8e6rWXDKnIF5e4PPKzcfAioJ4ecITiRtfaTYU
xMsbLi1dJVNiS0HtC/0iUvVIKDhjdirgEAWd+yKvlmJAQv6WnufoKAXx8oye
eyJzKG4U1FytUl5thP3+ifTdbzwpiJeHFAeaxZ33pSBeXjJS7zy2yZ+CnM8O
X2bjeihVZONUEAXlNEy+6cK1MlvpzqtrFMTLYzgzyxvP3qKg/9Yvft7Ub+dF
G+5QEN7MT0bw+zU0L5+diKOgw2UnT1MMSVCnLysuTMb33/kQewv339HGcP6Z
h/j7lr2ip+mSsOFE20HtTAri5Ukn39JejuVSEC9vcr11n5tfSEG8POq4vaGh
1xsK4uVVSc/sE9aWUVDGLduj81RI8K6gkcMVeP7+5V0Z8osgr4aCeHnY477i
i6fqKYiXlz0ssi/XaKIgXp7WPPvCEmYrBfHytrxli5yzOyiIl8f9Obvp3cle
vF7+5XWdZs3C6kO4///yPLlEtkM/i4IeWv7aP9lLwFBeXFomB8/vvzxw8NKm
nhN0KuLlhUo/9xqvFKUiXp6o+Ih9rWcmFeGP/f22mgCbKZmOx3OpiJdHqs1+
sdxlPhXx8srDR75fVl1MRbw800HL59MfJSqS/LibppKN9ZzQPIlHK/D7/uWh
UXu1XJw1qMjTb+GM2cmYn92+P12mTUW8PDXp3bBoxyYq4uWtCRFR21INqOhv
ujMT4/29Q1qRjluoiJfX1j637lfcRkUVSZvzh/wwHlcOryF3UBE/7100++b9
vVQkeuHyOhfMf00DOV8d7KiIlxdLbK5ZpXCEinh58oy57qdaXaiIlze3qcwu
SHSnIl4eLXtebY6dNxXx8moZi5rdC/2oiJdnb03uzWkOpCJe3q34PHTsXjAe
v4UDxRSs/xSuqG20DaUiO/qNGEOsb3c1mt+Ri6SiFpdpoZ+0Cdj5uLexMYaK
LEz1nt/RJCCEK7rubgIV8fJ4O8mMs3sfUBEvr49y/lg/7zEV8fL8CO1j839m
UREv7w+fJmYXnY/v/3ce8H6/8svdr/B4MThLvi7G4+n+kStVgvvz7zyhtqx9
b/0HKuKdN9REXUmI+ozH/995RJWjMrnjK/6ef+cVAi82g+RPKsqYeyL01HwC
GqraL35txu3/zjv+73pPb8oSqy4qqvp9SZ+O7xeVOvSuZoSKeOcpVzUXH9pG
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
XDbDiA==
       "]]},
     Annotation[#, "Charting`Private`Tag#8"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
      LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
PpJVwkMf16W/rdsiAqm4eR5fKnj43/vMX8PXE+s=
       "]]},
     Annotation[#, "Charting`Private`Tag#9"]& ]}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {3.3507058705484427`, -0.2095950000000002}], 
            Offset[{2.9999998892129565`, -0.0008153050036837212}, {
             3.486101740419584, -0.2095950000000002}], 
            Offset[{0, 0}, {3.553125681985847, -0.2096117122055297}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{10., 2.220446049250313*^-15}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{10., 2.220446049250313*^-15}, {
             3.553125681985847, -0.2096117122055297}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {3.3507058705484427`, -0.2095950000000002}], 
            Offset[{2.9999998892129565`, -0.0008153050036837212}, {
             3.486101740419584, -0.2095950000000002}], 
            Offset[{0, 0}, {3.553125681985847, -0.2096117122055297}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{10., 2.220446049250313*^-15}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{10., 2.220446049250313*^-15}, {
             3.553125681985847, -0.2096117122055297}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{21., 6.000000000000004}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{21., -5.999999999999996}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{10.000000000000002`, -5.999999999999997}, {
             3.553125681985847, -0.2096117122055297}], 
            Offset[{9.999999999999998, 6.000000000000003}, {
             3.553125681985847, -0.2096117122055297}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["6",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{15.5, 3.4416913763379853*^-15}, \
{3.553125681985847, -0.2096117122055297}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {3.3507058705484427`, 0.3325}], 
            Offset[{2.9999999475198793`, 0.0005611423377661515}, {
             3.486101740419584, 0.3325}], 
            Offset[{0, 0}, {3.553125681985847, 0.3325115023529297}], 
            Offset[{5., 1.1102230246251565`*^-15}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{10., 2.220446049250313*^-15}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{10., 2.220446049250313*^-15}, {3.553125681985847, 
             0.3325115023529297}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {3.3507058705484427`, 0.3325}], 
            Offset[{2.9999999475198793`, 0.0005611423377661515}, {
             3.486101740419584, 0.3325}], 
            Offset[{0, 0}, {3.553125681985847, 0.3325115023529297}], 
            Offset[{5., 1.1102230246251565`*^-15}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{10., 2.220446049250313*^-15}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{10., 2.220446049250313*^-15}, {3.553125681985847, 
             0.3325115023529297}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{21., 6.000000000000004}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{21., -5.999999999999996}, {3.553125681985847, 
             0.3325115023529297}], 
            Offset[{10.000000000000002`, -5.999999999999997}, {
             3.553125681985847, 0.3325115023529297}], 
            Offset[{9.999999999999998, 6.000000000000003}, {3.553125681985847,
              0.3325115023529297}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["7",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{15.5, 3.4416913763379853*^-15}, \
{3.553125681985847, 0.3325115023529297}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168980380539215`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753499544294501`, 
       FormBox["\"M\"", TraditionalForm]}, {2.233801870804979, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507058705484427`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168980380539215`, 1.6753499544294501`, 
    2.233801870804979, 3.3507058705484427`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  ImagePadding->{{All, 39.40105550771766}, {All, All}},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507058705484427`}, {-1.2, 0.7}},
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 
     Scaled[0.06666666666666667]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9151545281850457`*^9, 3.91515455952577*^9}, 
   3.915162568368117*^9, 3.915163436144524*^9, 3.915176748761982*^9, 
   3.915180448193994*^9, 3.915312665516518*^9, 3.915314916443268*^9, 
   3.91531497148363*^9, 3.9153157463292446`*^9, 3.9153160654295373`*^9, 
   3.915316103959424*^9, {3.9153185402322226`*^9, 3.9153185491065674`*^9}, 
   3.915318840408374*^9, 3.91532033340891*^9, 3.9153204819914784`*^9, {
   3.9153210173103285`*^9, 3.9153210253390107`*^9}, 3.9154103703961945`*^9, {
   3.9154147417715917`*^9, 3.915414779627389*^9}, 3.915622468566473*^9, 
   3.9156228418003826`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"097f2ca8-f768-4e28-ba6b-1b046fd401bd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PBand", "Subsubsection",
 CellChangeTimes->{{3.915162833603483*^9, 
  3.915162835011586*^9}},ExpressionUUID->"561ed0b8-4df2-4664-8a46-\
96ceee9d52e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "VASPPBand"}]], "Code",
 CellChangeTimes->{
  3.915135336797985*^9, {3.915143754597861*^9, 3.915143758415347*^9}, 
   3.9151450558317204`*^9, {3.9151459475278387`*^9, 3.9151459658159113`*^9}, {
   3.915146014360777*^9, 3.9151460615118837`*^9}, 3.9151462317519507`*^9, {
   3.915146267064391*^9, 3.9151463550001874`*^9}, 3.915154565277377*^9, {
   3.9151619933155284`*^9, 3.9151620576368437`*^9}, 3.9151627124925976`*^9, {
   3.9151655807274227`*^9, 3.9151655844080844`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"abeb0eaf-9f3a-468d-9ec9-6584974abf62"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VASPPBand[POSCAR_,KPOINTS_,PROCAR_,EFermi_:0,ISPIN:(\
1|2):1,UpOrDown:(1|2):1,SOC:(1|{2,0}|{2,1}|{2,2}|{2,3}):1,selectAtom_:{0},\
ExportFileName_:\\\"PBAND.dat\\\"]\\n\\nInput:\\nPOSCAR: Import POSCAR files.\
\\nKPOINTS: Import KPOINTS files.\\nPROCAR: Import PROCAR files.\\nEFermi: \
Input Fermi level. The default value is 0.\\nISPIN: Corresponding to spin \
polarization in VASP. The default value is 1.\\nUpOrDown: UpOrDown=1, \
calculate spin up; UpOrDown=2, calculate spin down.\\nSOC: SOC=1, not \
considering SOC; SOC={2,0}, considering the total SOC; SOC={2,1}, considering \
the spin polarization Sx of SOC; SOC={2,2}, considering the spin polarization \
Sy of SOC; SOC={2,3}, considering the spin polarization Sz of SOC. The \
default value is 1.\\nselectAtom: Choose which atom's orbital projection to \
calculate. The default value is selectAtom={0}, calculate total atom's \
orbital projection.\\nExportFileName: Export file name. The default value is \
\\\"PBAND.dat\\\".\\n\\nOutput\:ff1a\\nDirectLatticeVector: Lattice Vectors \
(Ang).\\nReciprocalLatticeVector: Reciprocal-Space Vectors \
(Ang^-1).\\nTheNumberOfBands: Number of bands.\\nTheNumberOfKPoints: Number \
of K-points.\\nKLabel: The position of high-symmetry points along \
high-symmetry paths.\\nPBandDataToColumns: Provide data \
explanation.\\nPBandData: PBand data.\\nSavePath: Save Path.\\nExportData: \
Export data.\\n\\nExample:\\nSetDirectory[FileNameTake[NotebookFileName[],{1,-\
2}]];\\nposcar=Import[\\\"POSCAR\\\",\\\"Table\\\"];\\nkpoints=Import[\\\"\
KPOINTS\\\",\\\"Table\\\"]; \
\\nprocar=Import[\\\"PROCAR\\\",\\\"Table\\\"];\\nefermi=-1.7400;\\nVASPPBand[\
poscar,kpoints,procar,efermi,1,{3},\\\"PBand.dat\\\"]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"VASPPBand", "[", 
                    
                    RowBox[{
                    "Private`POSCAR_", ",", "Private`KPOINTS_", ",", 
                    "Private`PROCAR_", ",", 
                    RowBox[{"Private`EFermi_", ":", "0"}], ",", 
                    RowBox[{"Private`ISPIN", ":", 
                    RowBox[{"1", "|", "2"}], ":", "1"}], ",", 
                    RowBox[{"Private`UpOrDown", ":", 
                    RowBox[{"1", "|", "2"}], ":", "1"}], ",", 
                    RowBox[{"Private`SOC", ":", 
                    RowBox[{"1", "|", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}]}], ":", "1"}], ",", 
                    RowBox[{"Private`selectAtom_", ":", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    
                    RowBox[{
                    "Private`ExportFileName_", ":", "\"PBAND.dat\""}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`poscar", ",", "Private`kpoints", ",", 
                    "Private`procar", ",", "Private`efermi", ",", 
                    "Private`pRowNum", ",", "Private`ispin", ",", 
                    "Private`nkpts", ",", "Private`nbands", ",", 
                    "Private`atoms", ",", "Private`PKPTS", ",", 
                    "Private`KPTS", ",", "Private`kpt1", ",", "Private`kpt2", 
                    ",", "Private`kpt3", ",", "Private`kpt4", ",", 
                    "Private`kpt5", ",", "Private`a", ",", "Private`b", ",", 
                    "Private`c", ",", "Private`abc", ",", 
                    "Private`\[CapitalOmega]", ",", "Private`BZa", ",", 
                    "Private`BZb", ",", "Private`BZc", ",", "Private`BZabc", 
                    ",", "Private`selectAtom0", ",", "Private`kpt", ",", 
                    "Private`dd", ",", "Private`kptband", ",", 
                    "Private`energy", ",", "Private`energyup", ",", 
                    "Private`energydown", ",", "Private`projected", ",", 
                    "Private`projectedup", ",", "Private`projecteddown", ",", 
                    "Private`row", ",", "Private`pband", ",", 
                    "Private`tpband", ",", "Private`KPT", ",", "Private`KK", 
                    ",", "Private`data0", ",", "Private`pbanddata", ",", 
                    "Private`path"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Private`poscar", "=", "Private`POSCAR"}], ";", 
                    RowBox[{"Private`kpoints", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"Private`KPOINTS", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Characters", "[", "#1", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", "\"#\""}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"Private`procar", "=", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"Private`PROCAR", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&"}]}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"Private`s_String", "\[RuleDelayed]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"\"{\"", "<>", "Private`s", "<>", "\"}\""}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`x", ":", "DigitCharacter"}], "~~", 
                    "\"-\"", "~~", 
                    RowBox[{"Private`y", ":", "DigitCharacter"}]}], 
                    "\[RuleDelayed]", 
                    
                    RowBox[{"Private`x", "~~", "\",-\"", "~~", 
                    "Private`y"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\":\"", ",", "\"=\"", ",", "\"#\"", ",", 
                    "\"occ.\""}], "}"}], "\[RuleDelayed]", "\"999\""}]}], 
                    "}"}]}], "]"}], "]"}]}]}]}]}], ";", 
                    RowBox[{"Private`efermi", "=", "Private`EFermi"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Private`SOC", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "Private`ISPIN"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", "Private`selectAtom"}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], " ", "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", "0"}]}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], " ", "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", "1"}]}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], " ", "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", "2"}]}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], " ", "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", "3"}]}], "]"}]}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Private`SOC", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "Private`ISPIN"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", "Private`pRowNum", "}"}], ",", 
                    "Private`selectAtom"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "1"}], "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "0"}]}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "2"}], "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "1"}]}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "3"}], "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "2"}]}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`pRowNum", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "4"}]}], ",", 
                    RowBox[{"Private`ispin", "=", "1"}], ",", 
                    RowBox[{"Private`selectAtom0", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`selectAtom", "\[LeftDoubleBracket]", "1",
                     "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "4"}], "}"}], ",", 
                    RowBox[{"Private`selectAtom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}], "]"}], "+", "1"}], ")"}], " ", 
                    "3"}]}]}], "]"}]}]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Private`nkpts", "=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`nbands", "=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`atoms", "=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "12"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"Private`PKPTS", "=", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`KPTS", "=", 
                    FractionBox["Private`nkpts", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]]}], 
                    ";", 
                    RowBox[{"Private`kpt1", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    "]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"\"GAMMA\"", "\[Rule]", "\"\[CapitalGamma]\""}], 
                    "}"}]}]}], ";", 
                    RowBox[{"Private`kpt2", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", " ", "Private`i"}], 
                    "\[RightDoubleBracket]"}], "]"}], "<>", "\"|\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", " ", "Private`i"}], "+", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", 
                    RowBox[{"Private`KPTS", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`kpt1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", " ", "Private`KPTS"}], 
                    "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Private`kpt3", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"Private`kpt2", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`x", ":", 
                    RowBox[{"(", 
                    RowBox[{"LetterCharacter", ".."}], ")"}]}], "~~", "\"|\"",
                     "~~", 
                    RowBox[{"Private`x", ":", 
                    RowBox[{"(", 
                    RowBox[{"LetterCharacter", ".."}], ")"}]}]}], "\[Rule]", 
                    "Private`x"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Private`kpt4", "=", 
                    RowBox[{"StringCount", "[", 
                    RowBox[{"Private`kpt3", ",", 
                    
                    RowBox[{"RegularExpression", "[", "\"\\\\W\\\\D\"", 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"Private`kpt5", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"Private`kpt4", ",", "1"}], "]"}], ",", "1"}], 
                    "]"}]}], ";", 
                    RowBox[{"Private`a", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`b", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`c", "=", 
                    
                    RowBox[{"Private`poscar", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Private`abc", "=", 
                    RowBox[{"{", 
                    RowBox[{"Private`a", ",", "Private`b", ",", "Private`c"}],
                     "}"}]}], ";", 
                    RowBox[{"Private`\[CapitalOmega]", "=", 
                    RowBox[{"Private`a", ".", 
                    RowBox[{"Private`b", "\[Cross]", "Private`c"}]}]}], ";", 
                    RowBox[{"Private`BZa", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`b", "\[Cross]", "Private`c"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZb", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`c", "\[Cross]", "Private`a"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZc", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"Private`a", "\[Cross]", "Private`b"}]}], 
                    "Private`\[CapitalOmega]"]}], ";", 
                    RowBox[{"Private`BZabc", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"Private`BZa", ",", "Private`BZb", ",", 
                    "Private`BZc"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "Private`k_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"3", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"4", ";;", "6"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    " ", "Private`BZa"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"3", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"4", ";;", "6"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    " ", "Private`BZb"}], "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"3", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`k", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"4", ";;", "6"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    " ", "Private`BZc"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "0", "]"}], "=", 
                    RowBox[{"Private`kpt", "[", "1", "]"}]}], ";", 
                    RowBox[{"Private`dd", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{"Private`kpt", "[", "Private`k", "]"}], "-", 
                    RowBox[{"Private`kpt", "[", 
                    RowBox[{"Private`k", "-", "1"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`k", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`dd", "\[LeftDoubleBracket]", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{"Private`kpt5", "\[LeftDoubleBracket]", 
                    "Private`i", "\[RightDoubleBracket]"}], "-", "1"}], ")"}],
                     " ", "Private`PKPTS"}]}], "\[RightDoubleBracket]"}], "=",
                     "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", 
                    RowBox[{"Length", "[", "Private`kpt5", "]"}]}], "}"}]}], 
                    "]"}], "/;", 
                    RowBox[{"Private`kpt5", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}]}], ";", 
                    RowBox[{"Private`kptband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Private`dd", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "Private`k"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`k", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`ispin", "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`energyup", "[", 
                    RowBox[{"Private`i_", ",", "Private`j_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"4", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", "5"}], 
                    "\[RightDoubleBracket]"}], "-", "Private`efermi"}]}], ",", 
                    RowBox[{
                    RowBox[{"Private`projectedup", "[", 
                    
                    RowBox[{"Private`i_", ",", "Private`j_", ",", 
                    "Private`atom_"}], "]"}], ":=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"5", "+", "Private`atom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"2", ";;", "All"}]}], "\[RightDoubleBracket]"}]}],
                     ",", 
                    RowBox[{"Private`row", "=", 
                    RowBox[{"5", "+", "Private`pRowNum", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`nbands", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`nkpts", "-", "1"}], ")"}]}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Private`energydown", "[", 
                    RowBox[{"Private`i_", ",", "Private`j_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Private`row", "+", "3", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", "5"}], 
                    "\[RightDoubleBracket]"}], "-", "Private`efermi"}]}], ",", 
                    RowBox[{
                    RowBox[{"Private`projecteddown", "[", 
                    
                    RowBox[{"Private`i_", ",", "Private`j_", ",", 
                    "Private`atom_"}], "]"}], ":=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"Private`row", "+", "4", "+", "Private`atom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"2", ";;", "All"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`energy", "[", 
                    RowBox[{"Private`i_", ",", "Private`j_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"4", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", "5"}], 
                    "\[RightDoubleBracket]"}], "-", "Private`efermi"}]}], ",", 
                    RowBox[{
                    RowBox[{"Private`projected", "[", 
                    
                    RowBox[{"Private`i_", ",", "Private`j_", ",", 
                    "Private`atom_"}], "]"}], ":=", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"5", "+", "Private`atom", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Private`i", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Private`nbands", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "Private`pRowNum"}], ")"}]}], "+", 
                    "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"Private`j", "-", "1"}], ")"}]}]}], ",", 
                    RowBox[{"2", ";;", "All"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Private`ispin", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`pband", ",", "Private`nbands"}], "]"}], 
                    ";", 
                    RowBox[{"Private`tpband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`pband", "[", "Private`i", "]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Private`kptband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Private`energy", "[", 
                    RowBox[{"Private`i", ",", "Private`j"}], "]"}], ",", 
                    RowBox[{
                    UnderoverscriptBox[
                    "\[Sum]", "Private`s", "Private`selectAtom0"], 
                    RowBox[{"Private`projected", "[", 
                    RowBox[{"Private`i", ",", "Private`j", ",", "Private`s"}],
                     "]"}]}]}], "}"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`j", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}]}]}], "}"}], ",", "2", ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"Private`UpOrDown", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`pband", ",", "Private`nbands"}], "]"}], 
                    ",", 
                    RowBox[{"Private`tpband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`pband", "[", "Private`i", "]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Private`kptband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Private`energyup", "[", 
                    RowBox[{"Private`i", ",", "Private`j"}], "]"}], ",", 
                    RowBox[{
                    UnderoverscriptBox[
                    "\[Sum]", "Private`s", "Private`selectAtom0"], 
                    RowBox[{"Private`projectedup", "[", 
                    RowBox[{"Private`i", ",", "Private`j", ",", "Private`s"}],
                     "]"}]}]}], "}"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`j", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}]}]}], "}"}], ",", "2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`pband", ",", "Private`nbands"}], "]"}], 
                    ",", 
                    RowBox[{"Private`tpband", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`pband", "[", "Private`i", "]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Private`kptband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Private`energydown", "[", 
                    RowBox[{"Private`i", ",", "Private`j"}], "]"}], ",", 
                    RowBox[{
                    UnderoverscriptBox[
                    "\[Sum]", "Private`s", "Private`selectAtom0"], 
                    RowBox[{"Private`projecteddown", "[", 
                    RowBox[{"Private`i", ",", "Private`j", ",", "Private`s"}],
                     "]"}]}]}], "}"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`j", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}]}]}], "}"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Array", "[", 
                    RowBox[{"Private`KPT", ",", "Private`KPTS"}], "]"}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "Private`i", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`pband", "[", "1", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    
                    RowBox[{"Private`kpoints", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", "Private`i"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`KPTS"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"Private`KK", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "Private`i", "]"}], ",", 
                    RowBox[{"Private`kpt3", "\[LeftDoubleBracket]", 
                    RowBox[{"Private`i", "+", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`KPTS"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`KK", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Private`KPT", "[", "0", "]"}], "=", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Private`pband", "[", "1", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    
                    RowBox[{"Private`kpt3", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"Private`data0", "=", 
                    RowBox[{"PositionIndex", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\"K-Path(1/\[Angstrom])\"", ",", 
                    "\"Energy(eV)\""}], "}"}], ",", 
                    RowBox[{"Private`procar", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ",", 
                    RowBox[{"2", ";;", "All"}]}], "\[RightDoubleBracket]"}]}],
                     "]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Private`path", "=", 
                    RowBox[{"SetDirectory", "[", 
                    RowBox[{"FileNameTake", "[", 
                    RowBox[{
                    RowBox[{"NotebookFileName", "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Private`pbanddata", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Private`pband", "[", "Private`i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nbands"}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Private`pbanddata", "=", 
                    RowBox[{"Insert", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# Band Index   \"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`n", "+", "1"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Private`nkpts", "+", "1"}], "}"}], " ", 
                    "Private`n"}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`n", ",", "1", ",", 
                    RowBox[{"Private`nbands", "-", "1"}]}], "}"}]}], "]"}], 
                    ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# Band Index   \"", "<>", 
                    RowBox[{"ToString", "[", "1", "]"}]}], "}"}]}], "]"}], 
                    ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# High Symmetry Points   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`KK", "]"}]}], "}"}]}], 
                    "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# The Number Of KPoints   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`nkpts", "]"}]}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"# The Number Of Bands   \"", "<>", 
                    RowBox[{"ToString", "[", "Private`nbands", "]"}]}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"Private`pbanddata", ",", 
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"\"# \"", "<>", 
                    RowBox[{"StringDelete", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Keys", "[", "Private`data0", "]"}], "]"}], ",", 
                    RowBox[{"\",\"", "\[Rule]", "\"   \""}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"{\"", ",", "\"}\""}], "}"}]}], "]"}]}], ",", 
                    "\"   \""}], "]"}]}], "]"}], ";", 
                    RowBox[{"Private`pbanddata", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "14"}], "}"}], ",", 
                    RowBox[{"NumberPadding", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\" \"", ",", "\"0\""}], "}"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Private`pbanddata", ",", "14"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\"DirectLatticeVector\"", "\[Rule]", 
                    "Private`abc"}], ",", 
                    
                    RowBox[{"\"ReciprocalLatticeVector\"", "\[Rule]", 
                    "Private`BZabc"}], ",", 
                    
                    RowBox[{"\"TheNumberOfBands\"", "\[Rule]", 
                    "Private`nbands"}], ",", 
                    
                    RowBox[{"\"TheNumberOfKPoints\"", "\[Rule]", 
                    "Private`nkpts"}], ",", 
                    RowBox[{"\"KLabel\"", "\[Rule]", "Private`KK"}], ",", 
                    
                    RowBox[{"\"PBandDataToColumns\"", "\[Rule]", 
                    "Private`data0"}], ",", 
                    RowBox[{"\"PBandData\"", "\[Rule]", "Private`tpband"}], 
                    ",", 
                    RowBox[{"\"SavePath\"", "\[Rule]", "Private`path"}], ",", 
                    RowBox[{"\"ExportData\"", "\[Rule]", 
                    RowBox[{"Export", "[", 
                    
                    RowBox[{"Private`ExportFileName", ",", 
                    "Private`pbanddata"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"DatasetTheme", "\[Rule]", 
                    RowBox[{"{", "\"Serif\"", "}"}]}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TopoTB`VASP`VASPPBand\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"VASPPBand[POSCAR_,KPOINTS_,PROCAR_,EFermi_:0,ISPIN:(\
1|2):1,UpOrDown:(1|2):1,SOC:(1|{2,0}|{2,1}|{2,2}|{2,3}):1,selectAtom_:{0},\
ExportFileName_:\\\"PBAND.dat\\\"]\\n\\nInput:\\nPOSCAR: Import POSCAR files.\
\\nKPOINTS: Import KPOINTS files.\\nPROCAR: Import PROCAR files.\\nEFermi: \
Input Fermi level. The default value is 0.\\nISPIN: Corresponding to spin \
polarization in VASP. The default value is 1.\\nUpOrDown: UpOrDown=1, \
calculate spin up; UpOrDown=2, calculate spin down.\\nSOC: SOC=1, not \
considering SOC; SOC={2,0}, considering the total SOC; SOC={2,1}, considering \
the spin polarization Sx of SOC; SOC={2,2}, considering the spin polarization \
Sy of SOC; SOC={2,3}, considering the spin polarization Sz of SOC. The \
default value is 1.\\nselectAtom: Choose which atom's orbital projection to \
calculate. The default value is selectAtom={0}, calculate total atom's \
orbital projection.\\nExportFileName: Export file name. The default value is \
\\\"PBAND.dat\\\".\\n\\nOutput\:ff1a\\nDirectLatticeVector: Lattice Vectors \
(Ang).\\nReciprocalLatticeVector: Reciprocal-Space Vectors \
(Ang^-1).\\nTheNumberOfBands: Number of bands.\\nTheNumberOfKPoints: Number \
of K-points.\\nKLabel: The position of high-symmetry points along \
high-symmetry paths.\\nPBandDataToColumns: Provide data \
explanation.\\nPBandData: PBand data.\\nSavePath: Save Path.\\nExportData: \
Export data.\\n\\nExample:\\nSetDirectory[FileNameTake[NotebookFileName[],{1,-\
2}]];\\nposcar=Import[\\\"POSCAR\\\",\\\"Table\\\"];\\nkpoints=Import[\\\"\
KPOINTS\\\",\\\"Table\\\"]; \
\\nprocar=Import[\\\"PROCAR\\\",\\\"Table\\\"];\\nefermi=-1.7400;\\nVASPPBand[\
poscar,kpoints,procar,efermi,1,{3},\\\"PBand.dat\\\"]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "VASPPBand[POSCAR_,KPOINTS_,PROCAR_,EFermi_:0,ISPIN:(1|2):1,UpOrDown:(1|2)\
:1,SOC:(1|{2,0}|{2,1}|{2,2}|{2,3}):1,selectAtom_:{0},ExportFileName_:\"PBAND.\
dat\"]\n\nInput:\nPOSCAR: Import POSCAR files.\nKPOINTS: Import KPOINTS \
files.\nPROCAR: Import PROCAR files.\nEFermi: Input Fermi level. The default \
value is 0.\nISPIN: Corresponding to spin polarization in VASP. The default \
value is 1.\nUpOrDown: UpOrDown=1, calculate spin up; UpOrDown=2, calculate \
spin down.\nSOC: SOC=1, not considering SOC; SOC={2,0}, considering the total \
SOC; SOC={2,1}, considering the spin polarization Sx of SOC; SOC={2,2}, \
considering the spin polarization Sy of SOC; SOC={2,3}, considering the spin \
polarization Sz of SOC. The default value is 1.\nselectAtom: Choose which \
atom's orbital projection to calculate. The default value is selectAtom={0}, \
calculate total atom's orbital projection.\nExportFileName: Export file name. \
The default value is \"PBAND.dat\".\n\nOutput\:ff1a\nDirectLatticeVector: \
Lattice Vectors (Ang).\nReciprocalLatticeVector: Reciprocal-Space Vectors \
(Ang^-1).\nTheNumberOfBands: Number of bands.\nTheNumberOfKPoints: Number of \
K-points.\nKLabel: The position of high-symmetry points along high-symmetry \
paths.\nPBandDataToColumns: Provide data explanation.\nPBandData: PBand data.\
\nSavePath: Save Path.\nExportData: Export data.\n\nExample:\n\
SetDirectory[FileNameTake[NotebookFileName[],{1,-2}]];\n\
poscar=Import[\"POSCAR\",\"Table\"];\nkpoints=Import[\"KPOINTS\",\"Table\"]; \
\nprocar=Import[\"PROCAR\",\"Table\"];\nefermi=-1.7400;\n\
VASPPBand[poscar,kpoints,procar,efermi,1,{3},\"PBand.dat\"]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TopoTB`VASP`VASPPBand, {TopoTB`VASP`VASPPBand[
         Pattern[Private`POSCAR, 
          Blank[]], 
         Pattern[Private`KPOINTS, 
          Blank[]], 
         Pattern[Private`PROCAR, 
          Blank[]], 
         Optional[
          Pattern[Private`EFermi, 
           Blank[]], 0], 
         Optional[
          Pattern[Private`ISPIN, 
           Alternatives[1, 2]], 1], 
         Optional[
          Pattern[Private`UpOrDown, 
           Alternatives[1, 2]], 1], 
         Optional[
          Pattern[Private`SOC, 
           Alternatives[1, {2, 0}, {2, 1}, {2, 2}, {2, 3}]], 1], 
         Optional[
          Pattern[Private`selectAtom, 
           Blank[]], {0}], 
         Optional[
          Pattern[Private`ExportFileName, 
           Blank[]], "PBAND.dat"]] :> 
       Module[{Private`poscar, Private`kpoints, Private`procar, 
          Private`efermi, Private`pRowNum, Private`ispin, Private`nkpts, 
          Private`nbands, Private`atoms, Private`PKPTS, Private`KPTS, 
          Private`kpt1, Private`kpt2, Private`kpt3, Private`kpt4, 
          Private`kpt5, Private`a, Private`b, Private`c, Private`abc, 
          Private`\[CapitalOmega], Private`BZa, Private`BZb, Private`BZc, 
          Private`BZabc, Private`selectAtom0, Private`kpt, Private`dd, 
          Private`kptband, Private`energy, Private`energyup, 
          Private`energydown, Private`projected, Private`projectedup, 
          Private`projecteddown, Private`row, Private`pband, Private`tpband, 
          Private`KPT, Private`KK, Private`data0, Private`pbanddata, 
          Private`path}, Private`poscar = Private`POSCAR; 
         Private`kpoints = Select[Private`KPOINTS, And[# != {}, Part[
               Characters[#], 1, 1] != "#"]& ]; Private`procar = ReplaceAll[
            Select[Private`PROCAR, # != {}& ], Pattern[Private`s, 
              Blank[String]] :> Apply[Sequence, 
              ToExpression[
               StringReplace["{" <> Private`s <> "}", {StringExpression[
                   Pattern[Private`x, DigitCharacter], "-", 
                   Pattern[Private`y, DigitCharacter]] :> 
                 StringExpression[Private`x, ",-", Private`y], {
                  ":", "=", "#", "occ."} :> "999"}]]]]; 
         Private`efermi = Private`EFermi; If[Total[
             Part[Private`poscar, 7]] == 1, 
           Switch[Private`SOC, 1, {Private`pRowNum = Total[
               Part[Private`poscar, 7]], Private`ispin = Private`ISPIN, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {1}, Private`selectAtom]}, {
            2, 0}, {Private`pRowNum = Total[
                Part[Private`poscar, 7]] 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {1}, Private`selectAtom + 
               0]}, {2, 1}, {Private`pRowNum = Total[
                Part[Private`poscar, 7]] 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {2}, Private`selectAtom + 
               1]}, {2, 2}, {Private`pRowNum = Total[
                Part[Private`poscar, 7]] 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {3}, Private`selectAtom + 
               2]}, {2, 3}, {Private`pRowNum = Total[
                Part[Private`poscar, 7]] 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {4}, Private`selectAtom + 
               3]}], 
           Switch[Private`SOC, 1, {Private`pRowNum = Total[
                Part[Private`poscar, 7]] + 1, Private`ispin = Private`ISPIN, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {Private`pRowNum}, 
               Private`selectAtom]}, {2, 0}, {Private`pRowNum = (Total[
                 Part[Private`poscar, 7]] + 1) 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {(Total[
                   Part[Private`poscar, 7]] + 1) 1}, 
               Private`selectAtom + (Total[
                   Part[Private`poscar, 7]] + 1) 0]}, {2, 1}, {
            Private`pRowNum = (Total[
                 Part[Private`poscar, 7]] + 1) 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {(Total[
                   Part[Private`poscar, 7]] + 1) 2}, 
               Private`selectAtom + (Total[
                   Part[Private`poscar, 7]] + 1) 1]}, {2, 2}, {
            Private`pRowNum = (Total[
                 Part[Private`poscar, 7]] + 1) 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {(Total[
                   Part[Private`poscar, 7]] + 1) 3}, 
               Private`selectAtom + (Total[
                   Part[Private`poscar, 7]] + 1) 2]}, {2, 3}, {
            Private`pRowNum = (Total[
                 Part[Private`poscar, 7]] + 1) 4, Private`ispin = 1, 
             Private`selectAtom0 = 
             If[Part[Private`selectAtom, 1] == 0, {(Total[
                   Part[Private`poscar, 7]] + 1) 4}, 
               Private`selectAtom + (Total[
                   Part[Private`poscar, 7]] + 1) 3]}]]; 
         Private`nkpts = Part[Private`procar, 2, 4]; 
         Private`nbands = Part[Private`procar, 2, 8]; 
         Private`atoms = Part[Private`procar, 2, 12]; 
         Private`PKPTS = Part[Private`kpoints, 2, 1]; 
         Private`KPTS = Private`nkpts/Part[Private`kpoints, 2, 1]; 
         Private`kpt1 = ReplaceAll[
            Part[
             Transpose[
              Part[Private`kpoints, 
               Span[5, All]]], 4], {"GAMMA" -> "\[CapitalGamma]"}]; 
         Private`kpt2 = Join[{
             Part[Private`kpt1, 1]}, 
            Table[ToString[
               Part[Private`kpt1, 2 Private`i]] <> "|" <> ToString[
               Part[Private`kpt1, 2 Private`i + 1]], {
             Private`i, 1, Private`KPTS - 1}], {
             Part[Private`kpt1, 2 Private`KPTS]}]; Private`kpt3 = Quiet[
            StringReplace[Private`kpt2, StringExpression[
               Pattern[Private`x, 
                Repeated[LetterCharacter]], "|", 
               Pattern[Private`x, 
                Repeated[LetterCharacter]]] -> Private`x]]; 
         Private`kpt4 = StringCount[Private`kpt3, 
            RegularExpression["\\W\\D"]]; Private`kpt5 = Flatten[
            Position[Private`kpt4, 1], 1]; 
         Private`a = Part[Private`poscar, 3]; 
         Private`b = Part[Private`poscar, 4]; 
         Private`c = Part[Private`poscar, 5]; 
         Private`abc = {Private`a, Private`b, Private`c}; 
         Private`\[CapitalOmega] = Dot[Private`a, 
            Cross[Private`b, Private`c]]; 
         Private`BZa = 
          2 Pi (Cross[Private`b, Private`c]/Private`\[CapitalOmega]); 
         Private`BZb = 
          2 Pi (Cross[Private`c, Private`a]/Private`\[CapitalOmega]); 
         Private`BZc = 
          2 Pi (Cross[Private`a, Private`b]/Private`\[CapitalOmega]); 
         Private`BZabc = {Private`BZa, Private`BZb, Private`BZc}; Private`kpt[
            Pattern[Private`k, 
             Blank[]]] := Part[
              Part[
              Private`procar, 
               3 + (Private`nbands (2 + Private`pRowNum) + 1) (Private`k - 1), 
               Span[4, 6]], 1] Private`BZa + Part[
              Part[
              Private`procar, 
               3 + (Private`nbands (2 + Private`pRowNum) + 1) (Private`k - 1), 
               Span[4, 6]], 2] Private`BZb + Part[
              Part[
              Private`procar, 
               3 + (Private`nbands (2 + Private`pRowNum) + 1) (Private`k - 1), 
               Span[4, 6]], 3] Private`BZc; Private`kpt[0] = Private`kpt[1]; 
         Private`dd = Table[
            Norm[Private`kpt[Private`k] - Private`kpt[Private`k - 1]], {
            Private`k, 1, Private`nkpts}]; Condition[
           Table[
           Part[Private`dd, 
              1 + (Part[Private`kpt5, Private`i] - 1) Private`PKPTS] = 0, {
            Private`i, 1, 
             Length[Private`kpt5]}], Private`kpt5 != {}]; 
         Private`kptband = Table[
            Total[
             Part[Private`dd, 
              Span[1, Private`k]]], {Private`k, 1, Private`nkpts}]; 
         If[Private`ispin == 2, {Private`energyup[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]]] := 
            Part[Private`procar, 
               4 + (Private`i - 1) (2 + Private`pRowNum) + (
                 Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
               5] - Private`efermi, Private`projectedup[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]], 
              Pattern[Private`atom, 
               Blank[]]] := 
            Part[Private`procar, 5 + 
              Private`atom + (Private`i - 1) (2 + Private`pRowNum) + (
                Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
              Span[2, All]], Private`row = 
            5 + Private`pRowNum + (Private`nbands - 1) (2 + 
               Private`pRowNum) + (Private`nbands (2 + Private`pRowNum) + 1) (
               Private`nkpts - 1), Private`energydown[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]]] := 
            Part[Private`procar, Private`row + 
               3 + (Private`i - 1) (2 + Private`pRowNum) + (
                 Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
               5] - Private`efermi, Private`projecteddown[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]], 
              Pattern[Private`atom, 
               Blank[]]] := 
            Part[Private`procar, Private`row + 4 + 
              Private`atom + (Private`i - 1) (2 + Private`pRowNum) + (
                Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
              Span[2, All]]}, {Private`energy[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]]] := 
            Part[Private`procar, 
               4 + (Private`i - 1) (2 + Private`pRowNum) + (
                 Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
               5] - Private`efermi, Private`projected[
              Pattern[Private`i, 
               Blank[]], 
              Pattern[Private`j, 
               Blank[]], 
              Pattern[Private`atom, 
               Blank[]]] := 
            Part[Private`procar, 5 + 
              Private`atom + (Private`i - 1) (2 + Private`pRowNum) + (
                Private`nbands (2 + Private`pRowNum) + 1) (Private`j - 1), 
              Span[2, All]]}]; 
         Switch[Private`ispin, 1, {
           Array[Private`pband, Private`nbands]; 
            Private`tpband = Table[Private`pband[Private`i] = Table[
                 Flatten[{
                   Part[Private`kptband, Private`j], 
                   Private`energy[Private`i, Private`j], 
                   Sum[
                    Private`projected[Private`i, Private`j, Private`s], {
                    Private`s, Private`selectAtom0}]}, 1], {
                 Private`j, 1, Private`nkpts}], {
               Private`i, 1, Private`nbands}]}, 2, 
           Switch[Private`UpOrDown, 1, {
             Array[Private`pband, Private`nbands], Private`tpband = 
             Table[Private`pband[Private`i] = Table[
                 Flatten[{
                   Part[Private`kptband, Private`j], 
                   Private`energyup[Private`i, Private`j], 
                   Sum[
                    Private`projectedup[Private`i, Private`j, Private`s], {
                    Private`s, Private`selectAtom0}]}, 1], {
                 Private`j, 1, Private`nkpts}], {
               Private`i, 1, Private`nbands}]}, 2, {
             Array[Private`pband, Private`nbands], Private`tpband = 
             Table[Private`pband[Private`i] = Table[
                 Flatten[{
                   Part[Private`kptband, Private`j], 
                   Private`energydown[Private`i, Private`j], 
                   Sum[
                    Private`projecteddown[Private`i, Private`j, Private`s], {
                    Private`s, Private`selectAtom0}]}, 1], {
                 Private`j, 1, Private`nkpts}], {
               Private`i, 1, Private`nbands}]}]]; 
         Array[Private`KPT, Private`KPTS]; Table[Private`KPT[Private`i] = Part[
             Part[
              Transpose[
               Private`pband[1]], 1, Part[Private`kpoints, 2] Private`i], 
             1], {Private`i, 1, Private`KPTS}]; Private`KK = Table[{
             Private`KPT[Private`i], 
             Part[Private`kpt3, Private`i + 1]}, {
            Private`i, 1, Private`KPTS}]; 
         PrependTo[Private`KK, {Private`KPT[0] = Part[
              Transpose[
               Private`pband[1]], 1, 1], 
            Part[Private`kpt3, 1]}]; Private`data0 = PositionIndex[
            Flatten[
             Append[{"K-Path(1/\[Angstrom])", "Energy(eV)"}, 
              Part[Private`procar, 5, 
               Span[2, All]]]]]; Private`path = SetDirectory[
            FileNameTake[
             NotebookFileName[], {1, -2}]]; Private`pbanddata = Flatten[
            Table[
             Private`pband[Private`i], {Private`i, 1, Private`nbands}], 1]; 
         Table[Private`pbanddata = 
           Insert[Private`pbanddata, {
             "# Band Index   " <> ToString[Private`n + 1]}, {
              Private`nkpts + 1} Private`n], {
           Private`n, 1, Private`nbands - 1}]; 
         PrependTo[Private`pbanddata, {"# Band Index   " <> ToString[1]}]; 
         PrependTo[
          Private`pbanddata, {
           "# High Symmetry Points   " <> ToString[Private`KK]}]; 
         PrependTo[
          Private`pbanddata, {
           "# The Number Of KPoints   " <> ToString[Private`nkpts]}]; 
         PrependTo[
          Private`pbanddata, {
           "# The Number Of Bands   " <> ToString[Private`nbands]}]; 
         PrependTo[Private`pbanddata, 
           StringSplit["# " <> StringDelete[
              StringReplace[
               ToString[
                Keys[Private`data0]], "," -> "   "], {"{", "}"}], "   "]]; 
         Private`pbanddata = 
          Map[NumberForm[#, {16, 14}, NumberPadding -> {" ", "0"}]& , 
            N[Private`pbanddata, 14], {-1}]; 
         Dataset[<|
           "DirectLatticeVector" -> Private`abc, "ReciprocalLatticeVector" -> 
            Private`BZabc, "TheNumberOfBands" -> Private`nbands, 
            "TheNumberOfKPoints" -> Private`nkpts, "KLabel" -> Private`KK, 
            "PBandDataToColumns" -> Private`data0, "PBandData" -> 
            Private`tpband, "SavePath" -> Private`path, "ExportData" -> 
            Export[Private`ExportFileName, Private`pbanddata]|>, 
           DatasetTheme -> {"Serif"}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TopoTB`VASP`VASPPBand"|>, False]]], "Output",
 CellChangeTimes->{3.9151655850983768`*^9, 3.9151658434498367`*^9, 
  3.9151662190339565`*^9, 3.915167105517248*^9, 3.9151674864167604`*^9, 
  3.915169893111989*^9, 3.915170175311704*^9, 3.915170267236788*^9, 
  3.9151706901086555`*^9, 3.915173187116788*^9, 3.9151743731537223`*^9, 
  3.9151763473322883`*^9, 3.91517653832051*^9, 3.915176771384632*^9, 
  3.915181510259373*^9, 3.915313361858961*^9, 3.9153138230120735`*^9, 
  3.915314401110382*^9, 3.9153145245392866`*^9, 3.915320494987769*^9, 
  3.9153210788390617`*^9, 3.9154103841631927`*^9, 3.9154147956405697`*^9, 
  3.9156224822427645`*^9, 3.9156228498649893`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"7a8b0c24-92bc-46c7-a963-57fd0a430fbd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameTake", "[", 
     RowBox[{
      RowBox[{"NotebookFileName", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"poscar", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<POSCAR\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kpoints", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<KPOINTS\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"procar", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<PROCAR\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"efermi", "=", 
   RowBox[{"-", "2.0707"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.915146392079488*^9, 3.915146469078024*^9}, 
   3.9151545697691884`*^9, {3.9151621279011993`*^9, 3.9151621293050556`*^9}, {
   3.915162170516765*^9, 3.915162171952075*^9}, 3.915162714291885*^9, 
   3.9151655973001404`*^9, {3.915165631811449*^9, 3.915165640203719*^9}, {
   3.9151656753712425`*^9, 3.9151656806290307`*^9}, {3.915176774929077*^9, 
   3.9151767788649335`*^9}, {3.91531337244833*^9, 3.915313377070969*^9}, 
   3.9153205291652136`*^9, {3.9154148035404463`*^9, 3.915414818588208*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f8467d5b-a775-47d9-8a7b-6dea6609707c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ISPIN", "=", "2"}], ",", 
    RowBox[{"UpOrDown", "=", 
     RowBox[{"1", 
      RowBox[{"(", 
       RowBox[{"spin", " ", "up"}], ")"}]}]}], ",", 
    RowBox[{"SOC", "=", "1"}]}], "*)"}], "\n", 
  RowBox[{"ds1", "=", 
   RowBox[{"VASPPBand", "[", 
    RowBox[{
    "poscar", ",", "kpoints", ",", "procar", ",", "efermi", ",", "2", ",", 
     "1", ",", "1", ",", 
     RowBox[{"{", "0", "}"}], ",", "\"\<PBand-up.dat\>\""}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9151656208277855`*^9, 3.915165624970476*^9}, {
  3.915165657164137*^9, 3.9151656641791706`*^9}, {3.915166773629758*^9, 
  3.9151667750836287`*^9}, {3.915167111307811*^9, 3.9151671375242815`*^9}, {
  3.9151674919884586`*^9, 3.91516749852221*^9}, {3.915176421866726*^9, 
  3.915176440160558*^9}, {3.915181517271216*^9, 3.915181517889526*^9}, {
  3.9153138364619837`*^9, 3.915313934693835*^9}, {3.9153141622305*^9, 
  3.915314162687309*^9}, {3.915314195160528*^9, 3.9153142004234557`*^9}, {
  3.9153144218584414`*^9, 3.915314441525961*^9}, {3.9153144760475216`*^9, 
  3.9153144763986115`*^9}, {3.9153145787659826`*^9, 3.9153145848547344`*^9}, {
  3.9153211178066587`*^9, 3.915321178061946*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"f554bc4a-2bd8-4b69-9acb-86d958df6f1f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6124441350542848603705698643838481448178526485486480422688], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandData"} -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`ElidedShape[1]], 2, 
                DirectedInfinity[1], {
                 TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"], 
                 All, All}]], 6, 
              DirectedInfinity[1], {
               TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"]}], {
             "SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[134.4]|>, 1], "InitialType" -> 
         TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "PBandDataToColumns", "PBandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 19], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 19], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 
         "Meta" -> <|DatasetTheme -> {"Serif"}|>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandData"} -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`ElidedShape[1]], 2, 
                DirectedInfinity[1], {
                 TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"], 
                 All, All}]], 6, 
              DirectedInfinity[1], {
               TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"]}], {
             "SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[134.4]|>, 1], "Type" -> 
         TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "PBandDataToColumns", "PBandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 19], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 19], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 
         20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 9, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DirectLatticeVector", 
                    Style[
                    "DirectLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["DirectLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["DirectLatticeVector"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ReciprocalLatticeVector", 
                    Style[
                    "ReciprocalLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ReciprocalLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ReciprocalLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ReciprocalLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ReciprocalLatticeVector"]}, "Item", False], "Mouse"],
                   ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfBands", 
                    Style[
                    "TheNumberOfBands", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TheNumberOfBands"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfBands"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfBands"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfKPoints", 
                    Style[
                    "TheNumberOfKPoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TheNumberOfKPoints"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfKPoints"]}, "RowHeader", False], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["800"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfKPoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["KLabel", 
                    Style[
                    "KLabel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["KLabel"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["KLabel"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["KLabel"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["KLabel"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PBandDataToColumns", 
                    Style[
                    "PBandDataToColumns", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandDataToColumns"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandDataToColumns"]}, "RowHeader", False], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 19], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 19], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandDataToColumns"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandDataToColumns"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PBandData", 
                    Style[
                    "PBandData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Center}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["12 total \:203a ", ""], 
                    Style[
                    Superscript["12 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["SavePath", 
                    Style[
                    "SavePath", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SavePath"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["SavePath"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                  "C:\\Users\\Administrator\\OneDrive - mail.ustc.edu.cn\\\
\:684c\:9762\\TopoTB\\examples\\3-data_processing\\VASP-LaH2\\withoutSOC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["SavePath"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExportData", 
                    Style[
                    "ExportData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ExportData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ExportData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["PBand-up.dat", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ExportData"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{134.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {857., {342.6340332872234, 348.3659667127766}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {857., {342.6340332872234, 348.3659667127766}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6124441350542848603705698643838481448178526485486480422688,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9151656906435766`*^9, 3.9151658488173943`*^9, 3.9151662305593*^9, 
   3.9151667803187327`*^9, {3.9151671302297935`*^9, 3.91516714077448*^9}, {
   3.9151674949878616`*^9, 3.9151675010025153`*^9}, 3.9151698981105723`*^9, 
   3.915170186089594*^9, 3.9151702748093967`*^9, 3.915170700999584*^9, 
   3.9151732253042707`*^9, 3.9151743819711647`*^9, 3.9151765486959057`*^9, 
   3.9151767874942284`*^9, 3.915181523592202*^9, 3.9153140529986043`*^9, 
   3.9153142066906953`*^9, {3.9153143919267035`*^9, 3.915314446153618*^9}, 
   3.915314481725213*^9, {3.9153145190887833`*^9, 3.9153145334870462`*^9}, 
   3.91532056079368*^9, 3.915321149925991*^9, 3.9153211848477707`*^9, 
   3.9154103981956396`*^9, 3.915414835172861*^9, 3.915622501190342*^9, 
   3.915622863068797*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"fd0762f5-900f-461c-8cd3-57cf6833a7e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ISPIN", "=", "2"}], ",", 
    RowBox[{"UpOrDown", "=", 
     RowBox[{"1", 
      RowBox[{"(", 
       RowBox[{"spin", " ", "down"}], ")"}]}]}], ",", 
    RowBox[{"SOC", "=", "1"}]}], "*)"}], "\n", 
  RowBox[{"ds2", "=", 
   RowBox[{"VASPPBand", "[", 
    RowBox[{
    "poscar", ",", "kpoints", ",", "procar", ",", "efermi", ",", "2", ",", 
     "2", ",", "1", ",", 
     RowBox[{"{", "0", "}"}], ",", "\"\<PBand-down.dat\>\""}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9153211590856514`*^9, 3.9153212163334723`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0b28abf9-c86a-479a-af7c-c3393ba6713a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6124441350542848603705698643838481448196973229558726955520], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandData"} -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`ElidedShape[1]], 2, 
                DirectedInfinity[1], {
                 TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"], 
                 All, All}]], 6, 
              DirectedInfinity[1], {
               TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"]}], {
             "SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[156.8]|>, 1], "InitialType" -> 
         TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "PBandDataToColumns", "PBandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 19], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 19], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 
         "Meta" -> <|DatasetTheme -> {"Serif"}|>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"DirectLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {
             "ReciprocalLatticeVector"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"TheNumberOfBands"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"TheNumberOfKPoints"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"KLabel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandDataToColumns"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"PBandData"} -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`ElidedShape[1]], 2, 
                DirectedInfinity[1], {
                 TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"], 
                 All, All}]], 6, 
              DirectedInfinity[1], {
               TypeSystem`NestedGrid`PackagePrivate`$docPath["PBandData"]}], {
             "SavePath"} -> 
            TypeSystem`PackageScope`AtomShape[560.], {"ExportData"} -> 
            TypeSystem`PackageScope`AtomShape[156.8]|>, 1], "Type" -> 
         TypeSystem`Struct[{
           "DirectLatticeVector", "ReciprocalLatticeVector", 
            "TheNumberOfBands", "TheNumberOfKPoints", "KLabel", 
            "PBandDataToColumns", "PBandData", "SavePath", "ExportData"}, {
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 3], 3], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[String]}], 5], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 19], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 19], 800], 12], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 
         20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 9, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["DirectLatticeVector", 
                    Style[
                    "DirectLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["DirectLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["DirectLatticeVector"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ReciprocalLatticeVector", 
                    Style[
                    "ReciprocalLatticeVector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ReciprocalLatticeVector"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ReciprocalLatticeVector"]}, "RowHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ReciprocalLatticeVector"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ReciprocalLatticeVector"]}, "Item", False], "Mouse"],
                   ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfBands", 
                    Style[
                    "TheNumberOfBands", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TheNumberOfBands"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfBands"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfBands"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["TheNumberOfKPoints", 
                    Style[
                    "TheNumberOfKPoints", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TheNumberOfKPoints"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfKPoints"]}, "RowHeader", False], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["800"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["TheNumberOfKPoints"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["KLabel", 
                    Style[
                    "KLabel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["KLabel"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["KLabel"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["KLabel"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["KLabel"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PBandDataToColumns", 
                    Style[
                    "PBandDataToColumns", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandDataToColumns"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandDataToColumns"]}, "RowHeader", False], "Mouse"],
                   ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 19], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 19], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandDataToColumns"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandDataToColumns"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PBandData", 
                    Style[
                    "PBandData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Center}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 1}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 2}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 3}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 3}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 4}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 4}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 5}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 5}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6, 1}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6, 1}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 19], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6, 2}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6, 2}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], BaseStyle -> {
                   GrayLevel[0.5]}]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["800 total \:203a ", ""], 
                    Style[
                    Superscript["800 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"], 6}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"], 6}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"], All, All}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["12 total \:203a ", ""], 
                    Style[
                    Superscript["12 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PBandData"]}, 2]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["PBandData"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, 
                   Directive[
                   FontFamily -> "Times", FontSize -> 9.333333333333332], 
                   ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {
                    TypeSystem`NestedGrid`PackagePrivate`$docPath[
                    "PBandData"]}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["SavePath", 
                    Style[
                    "SavePath", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SavePath"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["SavePath"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                  "C:\\Users\\Administrator\\OneDrive - mail.ustc.edu.cn\\\
\:684c\:9762\\TopoTB\\examples\\3-data_processing\\VASP-LaH2\\withoutSOC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["SavePath"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["ExportData", 
                    Style[
                    "ExportData", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ExportData"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ExportData"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["PBand-down.dat", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["ExportData"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{156.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                 Directive[FontSize -> 14, FontFamily -> "Times"], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {857., {342.6340332872234, 348.3659667127766}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {857., {342.6340332872234, 348.3659667127766}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6124441350542848603705698643838481448196973229558726955520,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9153212226617427`*^9, 3.915410405554991*^9, 
  3.91541485660954*^9, 3.9156225116284113`*^9, 3.915622872238761*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"ceaf5e67-54e5-4a0e-a07c-1b955e13602a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PBandPlot"}]], "Code",
 CellChangeTimes->{{3.9151732787831354`*^9, 3.9151732854311314`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4ce2c13a-df23-4387-880d-7b6d911f3f4d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PBandPlot[PBandData_,KLabel_,orbitals_,pcolor_:Red,\
legend_:\\\"orbitals\\\",scaling_:10,aspectRatio_:1/GoldenRatio,yRange_:{-10,\
10}]\\n\\nInput:\\nPBandData: Input PBandData.\\nKLabel: Input \
KLabel.\\norbitals: Input projected orbitals.\\npcolor: Control the plot \
style, with default values after \\\":\\\"\\nlegend: Control the plot style, \
with default values after \\\":\\\"\\nscaling: Control the plot style, with \
default values after \\\":\\\"\\naspectRatio: Control the plot style, with \
default values after \\\":\\\"\\nyRange: Control the plot style, with default \
values after \\\":\\\"\\n\\nOutput\:ff1a\\nPBandFigure: PBand structure.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"PBandPlot", "[", 
                    
                    RowBox[{
                    "Private`PBandData_", ",", "Private`KLabel_", ",", 
                    "Private`orbitals_", ",", 
                    RowBox[{"Private`pcolor_", ":", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
                    RowBox[{"Private`legend_", ":", "\"orbitals\""}], ",", 
                    RowBox[{"Private`scaling_", ":", "10"}], ",", 
                    RowBox[{"Private`aspectRatio_", ":", 
                    FractionBox["1", "GoldenRatio"]}], ",", 
                    RowBox[{"Private`yRange_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Private`tpband", ",", "Private`KK", ",", 
                    "Private`nbands", ",", "Private`nkpts", ",", 
                    "Private`pbandFig"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Private`tpband", "=", "Private`PBandData"}], ";", 
                    RowBox[{"Private`KK", "=", "Private`KLabel"}], ";", 
                    RowBox[{"Private`nbands", "=", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "Private`tpband", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"Private`nkpts", "=", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "Private`tpband", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"Private`pbandFig", "=", 
                    RowBox[{"Legended", "[", 
                    RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "Private`k", 
                    RowBox[{"Length", "[", "Private`orbitals", "]"}]], 
                    RowBox[{
                    
                    RowBox[{"Private`tpband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Private`i", ",", 
                    
                    RowBox[{"Private`orbitals", "\[LeftDoubleBracket]", 
                    "Private`k", "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}], "Private`scaling"], "]"}], 
                    ",", "Private`pcolor", ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Private`tpband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    
                    RowBox[{"Private`tpband", "\[LeftDoubleBracket]", 
                    "Private`j", "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Private`i", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`j", ",", "1", ",", "Private`nbands"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`i", ",", "1", ",", "Private`nkpts"}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Orange", ",", "Dashed"}], "]"}]}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameTicks", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Private`KK", ",", "None"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", "Purple", "]"}]}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Wave vector\"", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                    ",", "16"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Energy(eV)\"", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                    ",", "16"}], "]"}]}], "}"}]}], ",", 
                    RowBox[{"AspectRatio", "\[Rule]", "Private`aspectRatio"}],
                     ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Last", "[", "Private`KK", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}], ",", "Private`yRange"}], "}"}]}], ",", 
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}],
                     ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{
                    RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", "Private`pcolor", "}"}], ",", 
                    RowBox[{"{", "Private`legend", "}"}]}], "]"}], ",", 
                    "Top"}], "]"}]}], "]"}]}], ";", "Private`pbandFig"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TopoTB`Plots`PBandPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"PBandPlot[PBandData_,KLabel_,orbitals_,pcolor_:Red,\
legend_:\\\"orbitals\\\",scaling_:10,aspectRatio_:1/GoldenRatio,yRange_:{-10,\
10}]\\n\\nInput:\\nPBandData: Input PBandData.\\nKLabel: Input \
KLabel.\\norbitals: Input projected orbitals.\\npcolor: Control the plot \
style, with default values after \\\":\\\"\\nlegend: Control the plot style, \
with default values after \\\":\\\"\\nscaling: Control the plot style, with \
default values after \\\":\\\"\\naspectRatio: Control the plot style, with \
default values after \\\":\\\"\\nyRange: Control the plot style, with default \
values after \\\":\\\"\\n\\nOutput\:ff1a\\nPBandFigure: PBand structure.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "PBandPlot[PBandData_,KLabel_,orbitals_,pcolor_:Red,legend_:\"orbitals\",\
scaling_:10,aspectRatio_:1/GoldenRatio,yRange_:{-10,10}]\n\nInput:\n\
PBandData: Input PBandData.\nKLabel: Input KLabel.\norbitals: Input projected \
orbitals.\npcolor: Control the plot style, with default values after \":\"\n\
legend: Control the plot style, with default values after \":\"\nscaling: \
Control the plot style, with default values after \":\"\naspectRatio: Control \
the plot style, with default values after \":\"\nyRange: Control the plot \
style, with default values after \":\"\n\nOutput\:ff1a\nPBandFigure: PBand \
structure.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TopoTB`Plots`PBandPlot, {TopoTB`Plots`PBandPlot[
         Pattern[Private`PBandData, 
          Blank[]], 
         Pattern[Private`KLabel, 
          Blank[]], 
         Pattern[Private`orbitals, 
          Blank[]], 
         Optional[
          Pattern[Private`pcolor, 
           Blank[]], 
          RGBColor[1, 0, 0]], 
         Optional[
          Pattern[Private`legend, 
           Blank[]], "orbitals"], 
         Optional[
          Pattern[Private`scaling, 
           Blank[]], 10], 
         Optional[
          Pattern[Private`aspectRatio, 
           Blank[]], GoldenRatio^(-1)], 
         Optional[
          Pattern[Private`yRange, 
           Blank[]], {-10, 10}]] :> 
       Module[{Private`tpband, Private`KK, Private`nbands, Private`nkpts, 
          Private`pbandFig}, Private`tpband = Private`PBandData; 
         Private`KK = Private`KLabel; Private`nbands = Part[
            Dimensions[Private`tpband], 1]; Private`nkpts = Part[
            Dimensions[Private`tpband], 2]; Private`pbandFig = Legended[
            Graphics[
             Table[{
               PointSize[Sum[
                  Part[
                   Part[Private`tpband, Private`j], Private`i, 
                   Part[Private`orbitals, Private`k]], {Private`k, 
                   Length[Private`orbitals]}]/Private`scaling], 
               Private`pcolor, 
               Point[{
                 Part[
                  Part[Private`tpband, Private`j], Private`i, 1], 
                 Part[
                  Part[Private`tpband, Private`j], Private`i, 2]}]}, {
              Private`j, 1, Private`nbands}, {Private`i, 1, Private`nkpts}], 
             Axes -> False, GridLines -> {
               Part[
                Transpose[Private`KK], 1], {0}}, GridLinesStyle -> 
             Directive[Orange, Dashed], Frame -> True, 
             FrameTicks -> {{Automatic, None}, {Private`KK, None}}, 
             FrameStyle -> Directive[Purple], FrameLabel -> {
               Style["Wave vector", FontFamily -> "Times New Roman", 16], 
               Style["Energy(eV)", FontFamily -> "Times New Roman", 16]}, 
             AspectRatio -> Private`aspectRatio, PlotRange -> {{
                Part[
                 First[Private`KK], 1], 
                Part[
                 Last[Private`KK], 1]}, Private`yRange}, PlotRangeClipping -> 
             True], 
            Placed[
             PointLegend[{Private`pcolor}, {Private`legend}], Top]]; 
         Private`pbandFig]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "TopoTB`Plots`PBandPlot"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9151732859309783`*^9, 3.915174383784487*^9, 
  3.9151767934588437`*^9, 3.9151815261563053`*^9, 3.9153140697772775`*^9, 
  3.915314210026774*^9, 3.915314538106735*^9, 3.915320568993834*^9, 
  3.9153212292212567`*^9, 3.915410407724191*^9, 3.9154148970424223`*^9, 
  3.915622516025494*^9, 3.9156228737708826`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"e0480335-d1cb-450c-9493-b43ed7180af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"spin", " ", "up"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"KK1", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"ds1", "[", "5", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"KK1", "=", 
    RowBox[{"KK1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KK1", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2"}], "]"}], "]"}], "->", "\"\<-K\>\""}], 
      "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"tpband1", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"ds1", "[", "7", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds1", "[", "6", "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9151732617289457`*^9, 3.915173264488576*^9}, {
   3.915173327448307*^9, 3.915173343035331*^9}, 3.915173565427349*^9, 
   3.9151768034491076`*^9, 3.915321244181305*^9, {3.915321306685595*^9, 
   3.9153213127733173`*^9}, {3.915622877761999*^9, 3.9156228840991526`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"76552027-ba2f-4fef-80b1-3be08a940203"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1168981385747547`", ",", "\<\"K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6753501048542039`", ",", "\<\"M\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2338020711336526`", ",", "\<\"-K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3507060204809065`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.915173343989388*^9, 3.9151734619785175`*^9, 3.915173566467217*^9, 
   3.915174386220976*^9, {3.9151767958257494`*^9, 3.91517680407053*^9}, 
   3.9153140762767057`*^9, 3.9153142125440435`*^9, 3.915314540865193*^9, 
   3.9153205722710686`*^9, 3.9153212469229436`*^9, 3.9153213161165953`*^9, 
   3.915410409509387*^9, 3.915414901790726*^9, 3.9156225187912188`*^9, 
   3.915622889142335*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"2e5ee25f-0fb3-4b3d-9c99-e2cbb1550a0f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"K-Path(1/\[Angstrom])\"\>", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{"\<\"Energy(eV)\"\>", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{"s", "\[Rule]", 
    RowBox[{"{", "3", "}"}]}], ",", 
   RowBox[{"py", "\[Rule]", 
    RowBox[{"{", "4", "}"}]}], ",", 
   RowBox[{"pz", "\[Rule]", 
    RowBox[{"{", "5", "}"}]}], ",", 
   RowBox[{"px", "\[Rule]", 
    RowBox[{"{", "6", "}"}]}], ",", 
   RowBox[{"dxy", "\[Rule]", 
    RowBox[{"{", "7", "}"}]}], ",", 
   RowBox[{"dyz", "\[Rule]", 
    RowBox[{"{", "8", "}"}]}], ",", 
   RowBox[{"dz2", "\[Rule]", 
    RowBox[{"{", "9", "}"}]}], ",", 
   RowBox[{"dxz", "\[Rule]", 
    RowBox[{"{", "10", "}"}]}], ",", 
   RowBox[{
    RowBox[{"x2", "-", "y2"}], "\[Rule]", 
    RowBox[{"{", "11", "}"}]}], ",", 
   RowBox[{"fy3x2", "\[Rule]", 
    RowBox[{"{", "12", "}"}]}], ",", 
   RowBox[{"fxyz", "\[Rule]", 
    RowBox[{"{", "13", "}"}]}], ",", 
   RowBox[{"fyz2", "\[Rule]", 
    RowBox[{"{", "14", "}"}]}], ",", 
   RowBox[{"fz3", "\[Rule]", 
    RowBox[{"{", "15", "}"}]}], ",", 
   RowBox[{"fxz2", "\[Rule]", 
    RowBox[{"{", "16", "}"}]}], ",", 
   RowBox[{"fzx2", "\[Rule]", 
    RowBox[{"{", "17", "}"}]}], ",", 
   RowBox[{"fx3", "\[Rule]", 
    RowBox[{"{", "18", "}"}]}], ",", 
   RowBox[{"tot", "\[Rule]", 
    RowBox[{"{", "19", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.915173343989388*^9, 3.9151734619785175`*^9, 3.915173566467217*^9, 
   3.915174386220976*^9, {3.9151767958257494`*^9, 3.91517680407053*^9}, 
   3.9153140762767057`*^9, 3.9153142125440435`*^9, 3.915314540865193*^9, 
   3.9153205722710686`*^9, 3.9153212469229436`*^9, 3.9153213161165953`*^9, 
   3.915410409509387*^9, 3.915414901790726*^9, 3.9156225187912188`*^9, 
   3.915622889149316*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"ab4e4a8a-4514-4115-88e8-7d228b7f2173"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tpbandup", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tpband1", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "tpband1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"figup", "=", 
  RowBox[{"BandPlot", "[", 
   RowBox[{"tpbandup", ",", "KK1", ",", "Red", ",", "0.005", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.9153212634413652`*^9, 3.915321269943307*^9}, {
  3.9154149079163465`*^9, 3.9154149160057163`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"68939c8a-587c-4056-8937-a9bbbdd57832"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, {}, {}, {}, {}, {}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
Pl3JjlmIjvYy1pXC/wdcElTm
          "]]},
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
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
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
          "]]},
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
LK/jR//+f83/A4T6v08=
          "]]},
        Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
nzU=
          "]], LineBox[CompressedData["
1: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
KcD//c/8Ayu6GxY=
          "]]},
        Annotation[#, "Charting`Private`Tag#9"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction[
       "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
          Annotation[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
Pl3JjlmIjvYy1pXC/wdcElTm
             "]]}, "Charting`Private`Tag#6"], 
          Annotation[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
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
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
             "]]}, "Charting`Private`Tag#7"], 
          Annotation[{
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
LK/jR//+f83/A4T6v08=
             "]]}, "Charting`Private`Tag#8"], 
          Annotation[{
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1: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
nzU=
             "]], 
            Line[CompressedData["
1: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
KcD//c/8Ayu6GxY=
             "]]}, "Charting`Private`Tag#9"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[1, 0, 0]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
       Annotation[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJxdu3c81e8bP37skSQpEiWpJJWUkdT9kp0dMkqkSKVSRjQRkmSlsrIiioyI
krqsIvPYm2Pvc469+b3O5+ft+318+6fH9bjv+1r3fa3ny9lteeecFT2BQBBi
IBBo///3T0ilcxNTXSmoOFYnH152QtR2k7DO5v9oL0Q1Cx7WHCmFuKNnFPpO
BSKStpNBOmsZzPg5jUosv0W6c9vrx4+Wgcro53ePciNQXkzDRI11GZTH3dnd
eyoGEWvPOzcnlIFjLdvsC8E4FBAsmNY39d/5jyiNpV+MU7scIn9xFTS0fUIS
h1rSNTLK1/glowCVU1bpIhVA4Ve+JRyRioQ4up/bx1as8U9H1Gc5ajHilSCU
K8+R/eUrwuhUE/QLK4G0fdLLRzATCbEcv/rEugqOH827a/bqG/K28vRk2UCE
F2qvLkosZyGLn382sl0nQoe5qSrDre/oe/q/VJMKIhy7v1+yoe0H8ibR82fJ
VMNkXXvyJ82fiBAXGn4osXpNv1w0F5rpnbyzBsIYnN11xH8jjHSEYXd4zZq+
gL5z1gdfFayF3dvZkhc88xBX08qVC/G1QK929XrvqXxk99k3vVmyDpJrSzsq
pvMRgSHuc/GfOjhvftQg+0sBmtPEzMhm9UA38u5ftFUhiqb6fxFcrIfPTiun
fQSLEIlp8IDs+wYwpLfKtK8vQokZzzrzFBvX7P2DvI8oSRWQG6Ezd9+AivJf
ZBcsEdjyvmnN/r/I+H4aeUy3GY7XTVZv/1aMLGp8GbJZWtb8UYICZMZzx/Nb
4LffN8YxkX/IYtlJSeNpK9jwCzxoaPuH8o7U9f1CbcD90Z0CwaWIZJFvkUTf
DrlHh65+0ixDFpiMFn1JO1j/0mkJYixHfM6yZU7+HWv+K0dCL+mzK4w7gXp/
80ZrhwrEEXVAo3Mzac2flciV85IbmzMJlP07ZmV7KxGPGiLmdZCA+j//VqG6
zXkV3cpdoFVrOM4kRkQiudrHTb50Qe4NBuKCJxFNGRNZNm7thsC0LB9KFxGV
2EoF1D7qhmsz15V7T1Uj8dyttW97u0FeXpDQHFqNbD+InZTR7AFud2JOxXQ1
UtOxKQrK6AG37U9CC/Rq0NWvCzvC+XvX7qcGpTV91jrq1gvi8b2cyWy1yMIp
NElioBcI/7uvWiR/RdsrVLMP6iQ0PN7k16KSIcZ3J9P7QKVkztJHsA6xchkd
ZdvaD/ycyYJPXeqQKJ393qH7/UDVN2+yr69Dtt2jlKrmfigK5X5tc7Qe2aa6
ebyWG4Cwzj9aZq/qkbOScN7BsAG4s9eF9dxQPbq4WtXuOTewdt8NyBaOtroa
DkImfUvMyZgGpDvefXdT+uDa/TcgjwiK34ENQ3DJD+Pda9KICFo37VKuDK29
h0aEB+lj35wh+HAzJo1zcxMKEGPe9W3TMLikG9xkuNWELJSmKrdeGQbtWZZ9
cyVNaHB+6c/HzGHYc+onaVSkGRn8cBvSYxyBWffb4V2uzYhV/9yRzedG1t5P
MzL+1P079/0IyFtUHS+TbUFtSYki5gMja++pBQk1E192Hx6FwRGpz5nUFtTL
Exqg4DC69r5aUZHRxZCL2aMQdD9iV2RiKyrpiLggOTcKdJvOrgQxtqE22V/9
adJj0GSw/P25RRvK5OB0J94bg6SwNPtHuW2oJMYwxCN5DNxIVw7f5Wv//+On
ZwzO7+MdsnJoR8RnR9h9+Mjw91dRsSmxHdVV3HtXfpa89j47EEZ8Ymn7gAx3
1A+eUvLuQM7G4rfvJpDX3msHsp3gek+sJgN/feDXQ1gnymN32PZyngw+tihQ
OKIT9ZK/hXjtpID51wkN3rlO5K3mJFeKUWDH0jkGZjESKtGQeaFgQQHGqGQL
gjEJMaobPKU8ogBFgfn3gicJcfHxhP97S4GWXvMd0xkkJNpB8i/7QoGg/713
EkoWPeQ4mU+BR/pcg0ObulCw63mbE7WUtfffhajmM6ffdVHgXGhhbMfNLsQh
2PSYbYyyFg9diM+iflP0NAWmWBzu1BZ3oV71kZpjixTo/FxRXjHdhWzCNmQ3
LlOgVGu/WMmeblSE5FIDcDqT6vq8QK8btb0ctT+7QIHI1y29uU+7UaJbeATH
FGUtfrrR6ArPyaZhCmD0L9PTW7uR7W7NB186KGvx1INGmY97+lZRYJvaaduP
Mj2IYPNn5/1flLX46kEX43+O2CZSYOTV+L7w1z3Ixn9/5r0ACnwwUXv7Jr8H
GSszxPg4UsBvKWbSn9KDPCy+D2QbUcA5alHXR7AXiWDVVqvSFLA8Y5jiodGL
WHMxFqstFNDqS9nw1KUXzR0+108eJQNTOtNDl4Re1BQTFpRcSF6Lz14UsO9G
ks87MrTOfJe6zdCHqH6U1Rgb8lq89iGDmxjruDQZUuRtqZbmfWh0z0lzN3oy
XGMtNDd71Ydkp+6WXC4bA90kgV9GP/uQqHAgNSJwDE5pO/GfG+pDdtXVhccM
x2DfeNV9Td5+FCGndfvQtjHgDj5Qr6Lcj/K08zVj6kZhSfqZpIJ9Pyqv/REb
HDC6Fu/9iJTNFbbl7ChExR9blarqR7n1f/n30Y2C9//ivx8VyXmldH0bAYeR
/h9iBweQrgM90rEZWcsHOF1yjucx3wjwmr7z2vV8ANXd2F/54O8wEJapPdu/
DSBSfXi/0b1hGIs6q8DTM4CWfgv82y8wDA1n4iI5Nw+ipQfU6IXCIcjrW15k
RYMo5LPsSvP1IXD+X/4YRHUeGY+aNw6BpUFKyXLYIDKQNrlMnza4lk8GkfiX
VMU7uoMgG3b52cTMIGLcotVyjDIAIv/LL0PoatiOUBvfAdhI4jk9cG4IFRXr
9vCJDsDfpJtfulyHkLzXVYMLBf2Qpv2HvS1lCCVePfdR+UI/hI3vtGloG0Li
apoZYxN94BHs/IfIPoywezdrbr3ogzsyNcJlssPIuWZvAHFnH4gyHAj6Yz2M
4nKk8mQyetfy0zCiaupMZ6v0wrJam2ZOwTAq0XLZfqO5Zy1fDaO6/swnVjd7
oNbPnyV15wjK+/bO7M9SN7w07Xf6pDmCog++IcW+6gaHZVT34cEIauL25+XZ
2Q3m0aFHIxNHkLfuXMqJlC44qzjpF9IwgsSv0O04cLoLjvdrjgYxjqLM0mxG
ukoS7HzxUf2V5CgKdj/u0WlGWst3o0g3Lc6tqLUTCmbPb3P3G0WJwjacCksd
8Pl/+W8UYUqW1x8LdsDbU+zVTsM4PesykITa1/LhGAr5RJbmudIGssk572+q
jCFdTV7L6eetIKzDs2jlMIa4Hkd/fpTSAhsnbhlbxI7h+h7lWmpohvng4m+m
xDEk9Kg/M4+uGbpldm8xXBnD4/el/djhprX8SUZ2NdXLHZcawetjdae6KRk5
i/892BDYAHb/y6dkJNTkVSRQUg+mox5hp7PIyNiwd2Ccrn4tv5KRt4nO2WBU
BxKSsobHuClIInBxRMetFgaW/YoOYTi95Fl4v7gGaqIHd4vepiCqjrnnWe4a
+K145qlwBAUJJUT+3GJZDQn94W0CpRTEd6r4675sIgS9mD7BO0dB3slaAxmb
ifBR7GMd6xYqcrWX99/VW7mWn6mI0Lp4jCW9AvwrVo8yKFARJhJ/O8anfC1f
U1HAojLY3i2DB3Ym/su3qYgq/1xj3KoUzjcwFi94UpGF/jfeNJt/UJaQPj0b
QUW6lr82bXpQApjLJZHpDHx9IjP0bVgxZJ3doD9Risv3zQvyKf0LBwW+u1G6
cP4c93gvs/+F6LGraaNzVCQUa3jexvTPWr4fx+u55KbRnCKYEPm1bWDfOCJK
v5TdLl60lv/HkcXdssLtKYXQVrzNoctgHHFJ0osJKBSu1YNxFBC7PXNvXwEc
Xr3d0uo+juye0ymeCiuAWOIOtubQcSTxmmdZxaIA+GJLZBrS8PWNKemSMgXg
Z+9oXVuMry91/U3fWQD0ysJviB24fNXVF6Hb/g9NEOMwp9HDWy5L6AyPozTN
KNcwvgJg6Y8qq5geR9jSi5Fg/Dw5s8Nak24C5UmmJbiKFkDDM0H6Mo4JFJBD
eagmXQDwvjVGnW8CRYuOS7WqFkC8Lf+pkj0TiIsslydrVgC+J02aVI5MIN36
z10aTgVgzx5i/0duAtn1hu5YCiqAC80NnEoqOL/lTwnKGQWgOBmcUqA3gajv
enNYGwtArKBWXcEM5y9iFaewUgDcgdx9YDOBiJzDg82ihSBxRc/1tMMEwrw0
snPOFwKfZMCOX08nkBDV9jbxeSGsEqqyTr7E9XFvDGXNLYR+/lfnc97i/InP
QxUnC6FyqGxcNnYCkRpkkl0PFUHWd/ZX2V8mkMTYcmvUjSKIeK4uKv0D1/+y
3IDX5yLwOO9dmFmEryPZJ+JjRWBrp3LlGBG3R/n9/ZuSf8AAea6kt+L86bU9
VB/8ATnOolCJAXw9nCc5qOgPmJDopVInJhDB14iMNv8FLFWBeGgFt6dEckzC
4i+I/lu9k8w2idJG69ks0v8CV8jpDQe3TqI8mxZyBmMxzFg//vhJCKet90Uw
mxZDh1Sugqj4JIp+KLtNO70Y/jIutn2Uwc9P2e2wYy+BL7UnnPcqTiKh8ntd
JlYl8GZsljdOexLpGuo8m84vgce50hnCppOIK+X+80NC/yDMz1E7xgrnJzW1
b/zpP3A3yxzadRc/36/rt6PrH1wXn/SIfISfH+K4maJYCnoq6SKC3pMIO/Sa
/nlCKchupUL4a3yd9/1wCEcZCPUevsAfNYmoZM+J2ntlwJxxaybk8yQen4Gk
rS1lQHZLDuTNmkQS5fOz+mfKoSH8xtG3+bj8xRvT95LK4feNT+U8Ffj+jPlh
u60VEH9i8NrrJpy/qqbxcdcKKNywn4G7F+df8GUsY6QCPrdYRQZQcH1176hU
GFVC4Ke4E5sWJxFx6o2eU1ElPCi0bH7FPIUC7qj7RB2tAsugGAcO7inketRP
+lhUFahdJm16KTiFnDcTx/2ZiSAhsSuJ7cAUiv5zRTf7FBH4Vs1UvI9PIVLv
gvaKAxEI2wX6mbEphN2BLLNkIgwOmLp5auDnvXlOVfUQoSorVIDRaArlheTb
n91RDaPeTdnullPI+yp7ZfG5aqg14tWnuz2FEpk/p5/1qYbcu/UTT11wfmON
ckX51fAB4/Fb8cD3L9+yOTRfDT6b9A88DphCsle1nB5L1MC9jsCixfApRDQR
mc6+VgOmX4jmDxKmEOuG657EyBrAHm1anPs6hUoIvZ0F9TVw4G1F2P3fU8iC
50f2K45a4LLikJ75N4WEdkm/EFWshcMyGtUO9VNoUGoh38+lFrYx+9hOkqZQ
k8qERkZqLSzVlbDcG8X9tXFR4ENfLfSRvRKos1OI+rhNSXtHHZT/+nPmDsM0
mvv2gpypWwcZvowdY5zTSOj23o/VnnUQdkHRxZZ/Gun+1G6OyqkDdzF3npG9
08huT54SL6UObihhmdePTqNEnmOfTu+pB70tT3UG5adRmtScNqdRPZzo/jVs
rTaNQlwnTz3xqQejzCXPPv1pJOvBtj/oVz2cfnZy91XzaaR2a4eKArUe9p17
kNt9YxqRPtaZ+wk3AKet7MXLTrh+yE/IwaABpuXuz3a6TSOswbOP6tkAbWxZ
QZdeTaNot+VHhOwGKGqaOtQeMo1ET5RNvB1ogKSEY/8uxE2jweHIhGLeRgjO
H7dpSZ1GEvN+RE/VRngQIMFo8hO3J3FVvcqpESzN70Q1/sXtjZ/4Hh3fCK5H
U+TO1+D7FRfb5msbwZowVl/XjuvbJTvXStcE2vxJjvpD08ib0+Wr7JEmkB4a
4qqZwvl53ZYVudgEO7+LJusSZpBubLpssHcTMD2/plq1YQZJdA55eGU2wZjh
x24t3hlk8yqCNNPZBHUifY/LhWdQ4sXm0T72Zsg9/UFQ4/AM4pOaRAZSzRC3
sfv7vxMzCDtHPHLGvBnyO4UM1JRnEAHzVszxbobEFHPKX90ZlNb+LjU2vRkC
Hkf6KF/E+U1HpTO3NIPzu4tiRddw+rDk1SG6FrCwDv9zxn4GBfDsfXT2QAuo
SrVY5D/B1xl2xe3RbYHDjNuXkM8MUjuX/87ZqQW21Rq9+/0GlyedPKIW0QIr
o1tlTsXg+jhFfA7Ob4H+nwY1P5Nxe6cjP13ob4Fyn9e35L7j9oqNHIllb4Xh
izWsPwpnUFN0kofJ4VaoObg5TqZqBnl/sw8K1muFHws6KKtlBhH5hUS0HFoh
hoez83j/DHKe3T3i+rYVXvRoPsgYx/WV/xZ19Hsr2H19uVVyGfef4j2qQXMr
GLmVpqWxzuL9weZYwkIrIF02zSM8s0j08OYfYvxtsP9G8ciXXbNIdjnBsPZE
G3CeYH4ufnAWjz89yVnjNphhURZOkp5FpB9xolH322BLy7NfB87g5yv1VIvf
tMFCYoFxohZOJ9wn2mW0QXeB69w+k1mkFmKTHkBsg9JAeB1/dRbNmUTpnR5r
g3SLlcMidrMoT+LzeTu2dgg9cqo09iGun4qkzO697eC68tBq9/NZlBbo/8EU
awebihxCdNAsstE+dX77hXbQHXCO3hk5iwi/r1lfcmwHmazsk+8/zSLv6m/7
j/i3g4H3TMOObzg/K777zxLbQd5I6l5YHk4vndt5Ob8d9uxz2Li9HJe/aO75
t7kdODDJL+8aZ9HgD9K17PF2mOS8q7atZxZxhdIznmDrgJb21J5gMs5/qNNN
UagDCpLJT7YszCKhfwqKHdId8OnhIf4gpjlEOs6vyaTVAYFvRn5wbZ5DGLmz
L9uyA1yuihn6C8whrlc+yZP3O8Di2HXqRtE55G33ILPItwOeMCW+9D02h0RJ
WXIHYjrAqq5/3wY8uueqMnJ3fesAzQ97C16cnUPf++kNk0o6QOpXz2XW83NI
Ql7vVllrBwj4Ci97XcbPk2voX5I7gOHC5RCmW3PI2U94oI7QCSMHoo95OM+h
NMMwvp/cnVAz11FJ74HrK9ffLCvSCTnc72+7+ePnU7M6VKQ6IbarlY0Qjuvf
cFR/VbkTfNL44598xPXPFVJUPN8JCe4m2HL6HAppEaqQse4EP72Q1oe/8PXo
RxWZjp3gdPP8w4WSOWT3osSw2qMTLsm92eZSN4f4ht/tffW6E5TZ6tJnO+eQ
q+uN19MxnXCoiVvLaWQODaZ8tqakdgJPgt7g1AzuH5KStPevTlhyDHhmTz+P
iLo+k4WlndDrr71nYuM8svhufzmusRPKLr36bbd9Hhm7N2zc29sJgxLlJhSR
edQkrNqpTu0E4ir79C2JeZQnPH+Ae6kTsirVA0ZPziMHzvkCYCBB1CCLxE3V
eWQgecZOkY0EXtkqZUPn5pHvtHRZFCcJbnt5Wttcwukoe8eqLSQwNCyiG7g+
j5Yi6haq+EggL8Lw3spxHuXKb5+MFyTB3tP58r2u8yhgl7CArjAJNm4kNFn6
zqNRtmNDf/eRYLL1tH3Xu3nE2MUdKnCQBJtTHnNafMDtu7YSrXqEBPOPcj91
pMyjwdo3b1SPkYCksahkloPbIzh7TlCGBP+sfvS2/plHsiffG/yTI0Ha8bmn
ptXzKI3P01/7NAneMcjsaG6bR8nLnWxxCiR4UuOYZTQ4j3RDLOsalEhgHZOp
1zCJ+4uDia1dlQTaP++NG6zOo8Qk7nefzpJAyifdt5Z9AQWoTO2+pEUCARPq
/nPbFtDoYZ/lIR0SyB08UkjcvYAkjhx/o3WOBMILty7pHFpAF1UnBr0NSMDO
I75SIbuAfPsS3MPPk2C8+0aoptIC4vo4c9HTmATN6Z+Ol+ksIA6Zzb2nTEmQ
5zpYpX5hAU2d14pvvkCCRJ39N0us8fO2N49r4/Oo/05rZtV7C+g7Iaov7BIJ
7suKfPzzeAH1Wkz1ZpiT4BLLFQWlFwuIUDu2NcmCBI+aY9oKgheQgJ/kBvfL
JLiaSLqvEL2A7O5HFB61JMHZ+7u25CUtIOKeka0/cfpYYPvX09kLKDc456rA
FRLwWwho/ypYQJne6seNcZr+yIWhk5W4vibMN27+X7S825PtNHpwOdQjp3kB
6T7crUPbX13etOtE3wKiutwIo/HL6X8L2VT8PPPccA4uL/pbvan00v/Rx9uD
ZyaTZRFNWfIuuuH6xp3XDzy2ZRF5BOavfMLt8d0bJP515yIKZv9dRLPXEemW
S4gtorbDZufDcX9c5PS/liq1iJaOiSKav5TaK+gPKywiwubuUpo/xZM5IpM1
F5Fu7dcOmr+5H2qcOGi8iErYDC1p97Gg7lP36cri+n11XVFzEL2zuH6fJZLP
NyU8WFy/737Gv5/3ei2iiCb9dtp7qKxlVIkLXETRy339Zvh7+Rar2CX8fhFx
/ZB7RHtPkbl0bjGJi4jH7gon7b15vMQEhDIX0aiPHIX2Hm1Nn2ZHAq6vwTYx
2nvVP/D7nGAZzv/y61Lae5abWxoLb1hEro2ndWjvfQ/3z1f83YsowM3QmBYP
7F3zoqFji8j2nJIVLV4mUmWLeOcX1+OJy/2++VvGJcTVWt64A4+3Wd2sBR6u
JTRXWMxZjMdjx67pN693LKHvZ0+J0+K1+ESGFPf+JeQQfX+OFs8prBPEAMkl
pHTCaZoW78GNErabTi8hkSCNAFo+ePTxDoufOr5u8oZIyxdXHVNiOQyX1vOJ
pr/tmZcWS6jk6pEeWr45fimpnc12aT0fCRwadva+v4TUhhmGaflKdlWUh+XZ
Ekps4jhMy2dClddSPf2W1vMd6+BeHcawpfV8SMm6Ouwev7SeLxs8P3jSpS8h
VqGjerR8+tugW8g1dwlRVfdH0vLtxz27c1eKlxCJcZDii+fjVxPmRo9rcVrX
04KWrx05ds4udiyt5/OLrReDHgwvref7B1/CD81P4/pwG12h1YPLj1pK7tMt
IyGrJBtavVDT2H51hmMZUcs/sani9UTCqpHBkW8ZcQm93XQCrzd8x7dFTe5Z
RsarV+Zy8HpEYDCUu3dkGQ0ado7T6tVA9et6qtwykrVc0qLVs8roGrs7Kst4
/8XpTKt3WTkBXGS9ZTRXskmMVg/fv6hKsjVbXq+XnsacqiM2yyjg87aPtHoa
K6bVfd1heb3evpx/+Xjw6fJ6Pb5XUsp37SVOM7/SodVr027v731vl9fruUJ6
sf7V2GUUErCiRav3B1yZKd1flpHEW80CWj/ApaPsc/nH8nq/MCfosZdUhMu3
1kqk9RMkmTN/LhFxe/JcjtD6jb/MbhbtrcvI7lYzK60fSamHxQsDuLz3F2xp
/Up5wsrblgmc/xNhG1o/k+l0StJkBec38/kCrd+JCFisbmRbWe+H3M3lbp3f
uoJY+4Sv0PqlG4ddWOuFVtb7Kb3l7A/64iuIFCOhQOu3ZMtnTtfIrKz3Y0Lh
Ui26iiuoiZj0kdavsX6bdKnSXkEScXV3aP0c9ZnkVm1TnL9Z2UVav8dx/m5a
uRXO3+3yMVo/OCmSpqFxd2W9X2ybJPf/e7SCvPU7HGn9ZNHGL15q3ivr/WZS
28ju4tcrKETh4TZaPxqUJPZLOWplvV998OC6cdHnFSTkOBdM62ct1RMnz2Th
/CWsSLR+9+wV69f5+SvItWiIgdYPS0rGH8YqVhAXOes5rV/eTtf773fTCuJ7
9t2E1k9L1wpbnepdWe+3BWMvE3Ip+P4tQXW0fpzxbnS43OLKer8+6nPp5A/m
1fV+vs7kfYMM9+p6v58r2nY3S3AVeQeF/KDNAx9m+TdKHVhdnxde/jVJzDi+
imw09/rT5gl7Eq+aJLaKzzscE7R5wzT1fE+axioSijfIoc0jZ568eXLECKfT
OQ/T5hVz3brtKZarKG37KznaPKOya8s38du4vKXUs7R558iJaoMkl9X1eYiX
lYt6wHN1fV5aadB+mRiwuj5P9ce/2rc/ArdHvSn7NT5vVTiU58cnrK7PY5mK
G8xEMvD9P/smaPNahNm/pdjfq4hr9eCeNnye8xBnDdlduor4qqoDafNezIrK
sej61fV50LvCs3Jn1yrC8pIzKvF50S6i6Pr70dX1edI4y51NYG51fd6MLrA4
V0FHwP6bR3nECNG+LATMlet+EG1efR4YNaaxkYD9N88uzp0+uWELAftv3iUz
7XxZykfAAnQjEW0etrz1q+nFTgL237zcUHdxn7oIAePb8kyeNk/3nVqyZxUj
YM6bbunT5m2T+PD84iP4+aK7V2nzeDnHyU3PpQhYieeP17R5PW87v7nKSZx2
mblKm+ePu/1IZlIgYBJnS8i0eT9x0HihSAXXrzMpgIYHCOjOqXpo4vI58ji/
6daBf/a7N4rnCNh/eMKzIqc+emMCZhHhIEnDG2YPbjtWYEbA7B4Fkb6m1sLN
199c3a7g+nRb0/u71MKDJYNK7Doubzu1eL9iLZCvTO0g3CFgxFbHAhre0WVX
exMcCJhsSfQwDQ8xbLr348kDApaWKWlFw0tKEDfLaVd8/xqeIp+QbrDsictT
X06i4S1pnHqxuS8JWOLtqXM0PEbEiUp5GEg7H6xMw2v4nlWhk+/w9TU8x3f4
9quFCAJmM/msh4b3hOlztv6IxfUjHdPU3FENnD+/iLok4vcp2SFAw4vchbWc
ZFNw/6zhSU5HxP/OZhCw//CmobdlW7J/4OdXPirT8CizlRuXnQD3T7Q6SwAz
EYhW7KlSf/D3kPnw39GoKlCq+LQ0VYrrv1IQRcO7TrR4a2YScX2fbbpGw8OS
FUTD7BsI2H94mdCn4gHJNlxeyWRK5kgFHOG+JjXRRcD+w9tiXZifpQ/g8i2s
D97dWgHbuuKJdmMELM92vJOG120gewhJTOLy99Y6G5wphyeGIrcpc/j9rOF9
E7mFP1NW8PtdwwOtRK6w3Wakw+y899TT8MLml/RGh9jpMC4Nr0M0PLEipOvj
6CY6LFo+WoyGN2IEt6mkrXTYf3hk5jWhMzd34OtreGUhEfzFduPn1/BMaVnz
9qF9dFiAzEVjGt55UPn0oU/i+Pk1PDQquf2BjSQd9h9eys3zuGS/LB3myv71
IA1P9XoosG3gFL5OMaEymRbDQvfPKx8V6TBSs0UzDY+9dfZCupU6zv+hzi4a
XmtpJEe3Vwenrw91SVv8hfrfzdq9BnTYf3hv736XiA+mdBgmUef+uugPGPvz
DVta0GHEwOJQGl5cNpMtI2yN+2MNTwaGd8+7btJhumm/bWh4s+RN6frouzh/
RdVcGh79saZe2OI+fj70hkD0jSLgl3O02/UY98eUWCMNz/aL4fnd4Y7vfzzV
TMO73VMmN0Z602FULr1UGh4+s/X1BTM/fP9B/SIaXn79seQngWDc3rNWl2l4
unN/9UxrKK7/rPzTFtFCGNW6qxQehdPT7NVnVgrA4htXkGk8Ln/fJSINrzco
oHRtT8LlreH5JQf8jzSn4bShEDMN7z8ZePhxSBZu/1WRWdr3gNS5ilKjXDrM
QpVH4YRZAeyxuMXHW4Dzf+Qx3aJaALy3NG0ainHaU2eA9r3Bp27k25sKOuy/
7xErJ18yGNbi/Na+V2yMF9Pjacb1X/ue4cpRGlnbgeu39v3j/6Wd3NXkzw3j
7yUw5v1X/DxB/3kjcRqX9/ejw3GZAvDe8/eeDh095npHJVndogCehipxVXLQ
Y1RkFXMmrACMbz5L0uSjxyxklPaJ9RWAdhedetkeeoykiNiEFQqhIR3rVT9C
j+WdpLPenVII5u5Pn5bI4fspJpLC4kVwfm5ZQFWFHqO1i9M5RXC4VP77Hz16
zO6evKGD6R/ICnuor2RGj2FfVs7cZv8LX7gWqAU2OP/z5TdDS/+CdJesr4ID
vr8fCSWEFYO4UfaBvKf0GMG1WHH3gxL4tn+m6PRLeizg+1GRIpt/8Gr+uMWv
t/h+Z4oyi3UpeNzJWD4ZS48JJUYhr7tlwIFNhOR8wc//0PP86VMOb7iOHj/x
A9d/guCyJ70CfL1Sq7OL6DEJzjD6072VcNWYbCtNpMeI7n1nijYTwbTSlv1b
Kz2mK6AmIZtNhJ7IpPhjA7j/7m6V2GdZDbZ3hrGvE/TYYNXBi5e4a8Cyz6ZD
YoUes2m92+ZbXAMnsxNcUtkYML53hXrWbrVQ9Lyf5/BWBiztt/REEqqDnOWr
X5OFGDCSz91cdvp6OFP5QeugOL7us49ZpqQeZJWERz7JMGBEp5K48cAGyOe5
7CWqyIBR2W9VLl5qhLD+qN0J2gxYtB+Eb8DrdcDFnbDXlAGTHRgyINE1w/ZD
ZqZxVjh/foMJgcZmiF0Onxa+y4ARlvkokSktEGLP/zrmEc5v4uYkn3cr3FU2
OSzkzYAF7PE1PHGlDa79bCyLfM2AOROl1WpQO1BfbrsmGMWASSgtbosX7ADn
i4b0EZ8ZsJCoLQduLHXAnZraKP4snJ+++BC5tRNU47hPhuYzYN7uWaLT+DxK
dNBr4K1gwDhC5B15K0nwd7jK/m0TAxZ3eeAidroLdH5ybtray4AZW2q+00vp
ApWjr5JfUxiw8nMxduI7u6GSrlyVe5EBCz7oLpT7qhs+1rL3BDAzYhz/JhQ7
l7rhvfoL103cjJjzxicbXG/2wD7+kh1+goxY75y0jGdzD6QMM2dzHGDEBO40
/65V6YU4C0+Dl8cZMVHqIQmDjF54IllEYcMYMQdf7sCxnX3gkHjmlbcGI6b5
QeTpyxd9sOzsJspixIhlLs9TN0z2gZd6XqGnJSMWFznlcPVCPzyC05cZbzNi
NokmPx4U9INB4OMldxecvi3XLCs6AO2Xc9/ReeL6rshvfeE7ALWNclKuAfj6
O8ZuA8oAXEx0Ia6EM2Ih5MjqAN1BOLdz7tbjBEbM4FbhDZG0QWglS7MtfcX3
p4fQLW0cgsw8x7gHvxkx1uty80vXh+Cz9JTC/D9GLOBaGsfOoiGQZDnWfr+e
EbM7Nf9ZQ2AYchvvOs+QGLHcnU3HHt0bhq9a1K2Oo4zYEsepiKi/w+Cz60j6
5Cwj1vTgmGgs3wi4vfmifY+BCSMe8MpwsBkBduvRISonE8ZTEmjPkjUCQdIH
Pe/wM2Ehkd+lNOlG4UXyJ2HyXibM29iHSe7sKFg+Gfxle5QJq/NY0f8ZMArD
2vtNRuSZMLvke6dL6kaBVBQ/c12NCZPv4gg32DYGNm96Awf1mTAlM4V9FwzH
wGLDlSPXzJkwiddp3kWBYzDYGlPad4MJ0921z+tF2RjkfyFZXXViwkpsu1U/
0ZMhe485Q48bTn+EDdtlyIBNvY+8/ArnZzLIV2pDhpKithOkEHz9aVvz13dk
+C13ofFSHBMmu0+0uq6QDCEcYffaU5kw44xOEd4xMvi583Fd/MmEicSJa7za
QgFefaOklr+4PywIUftlKBC1562KSQ0T5iD4YgfJiAJvQ3l6G9uZMBt7U/jq
SIHbN/Wfnh9iwtpKP2aHBVBg9mQQf/0ULo9sWRecSIGxdK7v+gRmrHymsSvy
FwXP3zr6NRuYsbn7+oKZVRSwnaug6vLiNBd/d10HBaZLOHyrhJkx7/i6a6vD
FKgM09ivfZgZM+7U9Ds2RYEirtKi8hPMmHhzza67CxTQ7GK10FBmxjIfGW7N
XqZAfbrq4j9dZsx3NbJ8GafL9/8NUbvIjLnahwSZLFIgbp7xePE1Zsxu+JTD
n2kKhN95Vq1sz4zZxr13OzxGARGswLboCTNm0MvX/bOLAslcdKyKPsxYgNz2
aLNaCsR6PY3Pf4Pbo1srzVtAgYfGvzEshhmzcbjRSv5CAcYDy62/k5kxBwE3
u9G3FFiIfOhy6jszJjA1ULv5MQXc7+Tw5BYyY00nXhtdsaCAS5/sV7kqZizY
Jcx9BKMAfdZ9rR8tzNij8D6dhJ0UaHmeNSjTz4yRJFPlk+bJQFw+7pU1zozx
vDWSpFaT8fxtv1tqmRmTTcu/FpBAhu7Ir7kZrCwYX5tlns8DMjTxHDWV5GHB
OMRUDYbPkiG9/8502i4WLK38jVACHxkSL5KDjhxkwSSGHuq094yBxKFDh1Ok
WTB5C7eL0clj8GP55j/xMywYMbssauTeGKTaD1snabFgDvHjWmXSY+CtfIBe
zIQFC7H7uFlzbhS4ttm8T7zKgnEltb1zzB4FZt9+uf12uLwDAc0mDqPgf3Fv
Q/xDFkxoy/s9C4dHwavmg73IcxZssPPwouPACHB+6Ob8EMSCkSI7O2rej0C/
w+7PuyNxebzkx/vOjUDbcJRq9CcWLJlZz9eacQSsf3Z07/zGgmkqeCXkZA4D
+aXgk/d5LJjv0Jsp0SvD0EcXsUOgnAXzOJTnXbxpGH7XtmSFNbJgo4fu7ovM
wfOLuonB9h4WjFUp1AiuDIE8fwjlHRn3l2EwnNgwhOfvBp9tCyxYBEt0/870
Qci1MBR9w8SKFVUl+vkbDkKwZHDhls2smPMt8/rXcwMgyFB7KUiAFStv9GI+
ETYAPC56S1yiOC0fzRYtNwAR6gHv/I+xYoQ3pMLW5n54DZxSnIgVk3dsPzN1
vx8EArSIvmdZsRBl2ZAtW/th6rLvzQ3n8f0czkbK6X0w3MjO5nOZFbPgnA6L
1eyDe4nqcay3WDEhg1NTsgO9sOTsjZ47s2IiZo5bT7j1wgSZuZ3JgxWjDm9R
i+XvhdI8ZWcPf1Zs9CTRIDSjB/Kli7YyhOPyNkTKndLsgbMsDOluH1kx1rJU
vYjebqhpVNAkfGXFPLQ2RzY96oZ/WnlDT36xYuKLwuabt3ZD7K5Vj+USVsw4
5jqT2ZcuEKOeEnpUx4o50Fns6VfuAiHr3F8LnaxYU3xBamEHCT5JLxq7jOD8
NDTqNziT8H7eZWZ2hhWbuzam37WZBKKPvwc60bNhITrPl4jGnUCnMys+vZEN
m2MWfPTAvwNmixxL7bezYRZ5o/yMJe3g+ibTakKEDcOOXnuVTN8ObNaThLsS
bBiVd/+j36gNVlrvRlJOsmFqvlQT2t9jN31JO3FblQ37Hl+nQvt77co9RxpH
z7FhBCYfmSyWFjg/devezUtsWF6+qe+objN0FiVvHL7OhvHlDzA0v2+CBrmD
STaObJh3qt+1PHIjpHLcUBlwZcOctXe2/VZsBJn2xC4rX5z+WUOVet8Ah/T3
P+19x4YN6igZ7Fish6w91vxXPuC04e+eEbN6SA7tze5Kwe1jfUos+oPP3zf2
6Fvk4PZlsMs2StYBp7wlueMPG2YX/zbYOL4WGL+SXppV47SUioqlYC34uu/a
39ZG809M5s7wGtimf6nAdBCX3+rI+HlnDXD8azNvnmTD0iq+fDmYWA19YTsW
jVbZMN2H77dlylRDK1dYSAM7O/b9KE+3UQURrnY1HTPcxo73R1caWK4TYTSd
t6p2NztGSFChY9pAhO79b23PHWLH7Cxi1R9aV8HP+TqWall2jJTht1GvsBKU
Srd80FFix4jcxy/Rfm8ghwVhlTo4v4YGI7vYCijgqm7VvIDvF/idnSpSATle
Oi5l1uxYXt+1ZvWMcjhj5Mdz9h47JlG+WrdRuxz4D1SkljzG+TmJedJ+D8EV
paGl+gJfj8zqof1eIuyOz+CfYJwfB68A7fcUwti/Z0rR7Lh9LDbUo2XAl6W6
uzCJHePK2b09k7UMxp975Spks2NY9q2bWiOlMLjMaJpXgK/rkDxov+ewq1Sc
Pl3JjlmIjvYy1pXC/wdcElTm
          "]]}, "Charting`Private`Tag#6"], 
       Annotation[{
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
5x/PAg3GzGwobiQixFjrfn52oA0IrwWfXcXukbXk5QNznm0Q21V24kIYCXwN
inzEc9vARcaL+3Q/CbJXpD73zbSt7TcZQr2l9Y3U2yGblZZ0ENsHJ0FDYV23
9rX9JwORa3NGVkY7XAxHW2QsWwFX1sjmN9y+dh5aQVvioHquXAe8u5GUwb+R
AvTp19917DvAK9P8BpszBWyDC2Y2J3bAyVmuXXOVFOg5qf1pN60Ddh7Kpw9J
U8H79+Rtj02dMOt38w3Dlwqy5KRH00ada+eHCmqjz1Z+Pe4EbdsGtRpNGpjq
ToQG5HWunSca1EZW2MSNdULfoPrn7DEadt4ayA9lutbOVxukRWbcjbHsgui7
cTviU9vA9uEe7fbQLmDZcHwlmr0dxHbHb1Yu6gKK+XLuE9t2EBjrTXo71gVf
YjPcvAvaIXjKROmFAB0e0a8o3RLpgCnRzSuOsnQ4u2tLv717BwTWeXcWAR3K
fxMqrBo7oJz95Na0s/S189kJQTEHK2Wc6eBiuOeQXlAnZBFnAhUf09fOayfY
yd9qK4+hgygpKksRdcH1THz11Fc6BDtBlFRcF6R73G3NxdPBJmvCaMtcFyQf
FDq2uZUO25ZOs3HK04FPUvITzyAd2BPSbHEWdMDnqa57s0KHUV3OwoUAOiSf
W8fRsJEBtB6bbdPf6aCpmvsjXpoB0f8573QYE9JcENJggLeZQF//BgYYe3gE
6Bsy1s4/A/DOlbFDVgw4/bo0ufMGAxQW5RstnRhr94EBnkMnhdx9GDDF5e7S
UsEA0xvbM1A4A7o+19XWTTNgbrPblYJ4BlSf2C1fufMPXFYPh5F0BmSP+T7B
n/oDvEG9YaRCBsQ/o/UUPPwDBjuCHHzqGWv35w/Ie+rZtXcwALGGZGa2/YFA
aX61hSHG2n3qhgnhkQ/vuxmw2UDH6YNGN8S/eHP0Pubv/+5XN4gabXelxjBg
MGx815tn3XBZtZiDepsB7ywNXr4o6QapfLFiJ2MGhC8lTUaMdoN25qFrr2Sw
dSUsmgaL90Alz6sH57B8Xj58Jt3fqAdGRo8IfCXT4cTf9HUPvXogSFOOPyad
DhyZHPe9PvaA2A7FepFA+tr97AE1m0G3fRfo0DaTq36T7S/8+TYg26lKX7uv
f8FYW0xtFy8d0rWdxi7bYPbZP2H8xV3gyF1qcyHsLwh1Dj/jvNEFpl/Efp/L
/wvEpBq/XcJdcOjkHdHT/X/B4vt7r7DCTtg13nDXeEsvVPo+rVF1xO7HczmS
/tFe4NscY7NlQycs7X+souvWC/RNQfI6OR1r970XbAd/nPhm3QEJ71VX1Rt6
IWbTiPsN1g4I+s/97wXlgml+j4/t4D7Y+0t+zz+gr6qOdhj9Fw/+gZhc4cnU
0TbYYvUqcMeTfzCUPn2oKboNcMtj3Vt//IOr3H1aduptMJxwXFeo+x+EZn3M
utxKA/LhlHj+jX1gvTs/r8uTBsV/lxe5oQ966I4vu7fSwPM/+NEHoQoy6x3y
qHDZPL1yObYP4lrtGl5aUdfwpA8q19nnOi1QQDP20uOJmT6QKO3i/PeaAtL/
wZd+yL4hICF1gALr6UI6/073w9CZD5GClFYo/3LjK8O3H6yVmjZQ77RCxsky
3vb0fmD3yOS8L4y9L+Pbr5Lb+6FSpZ2dO5sM/s89yxp5B+C5M+VtyGkyuGg0
S9VoDoDskQwOkXESyLLJRZc5DEC2CK9gXgRpDZ8GYInj2hVPJRIsG7Qb5+EH
IEbrTJdHHXENrwbAf7+/WbYTEVrCI7i+bR8EZcLDKQU+IoRY9d75ZDwIaGUy
Y3daC7gvA/HdvUHItTvj/8a4BWwSX++LTx0Egk1ac/BwMxw/MhkeQx4EWfbb
T3dGNINar/FQNPsQ+D4iZ93Y1wzbn34wDFMZAu8HuonOxKY1vBsC03OZreDZ
BPjZs5v9wjHbmqrEKt4En/+Df0NQ260cU4RvhJeHeJvuDAyBwYeKrpBrjWt4
OAyUjWxq3hsbQTMt7+0N/WEottvPq+vRAFImQov27pjNRtXZVV0P6yecLWyT
h8E34oF0nmQ9zD+v+GHVOAyaPdsYO7zr4I+G5KYzK8OQG1mq8ZBau4afI+B6
7M05Va1aCPzQ1GVoNQISCv6nJOJrwPU/eDoCjd/cptw5asBqyD9WJwfrX/7X
JNC1eg1fRyAjLK/euasKlFU0z6gKjoIAIev1kdNV8G85nKCIRoH7ffChDVWV
0JzYJyl7cxQaOWviZfQqofDI4YdScaMg4W8SGlFaAR9737SLVY+CwZ2K3+bH
KiD66fSBLXOYPwdqdn1DOXyQ/0Dk3jQGto1HjNdfKF/D5zEwKLGbGh4pg4i6
1X1sumOAm80gDQeUreH1GCgnpYWyS5XBPVfLiOWbWH+u6nHVUgKcJbNXLASM
QaR3NTnhGgFqPmZOz8ZhtnJSwU1hAiCvi9LT3zF/1V2/35WXQs7xdWYT1Zi9
h/W5s08p7BHLfTTKGAO63JRC/YFSSBy2yxiaG4O+uNyH1EX8Gt6PA+Xj5Kbn
pXiYkP69+d+ucTAYt9ssE4Vfw/9xyMj+YfbVDg/tFZvdGebjMLZBDk0ewq+9
B+Mg4J79WUYcD0qrN2ltfuMgS6oROMKKh+TGbTzU1+OAFFGe9XAJiCRXapAz
xsHTVdHQvLMEwt08HFoqxsGUuL75PKkEWI9KvWjsxPxXme6/1Pz/7Tn9K+8u
Y/bApkvKJgPj0Ce2bqdESwlw9SbU1E2Pg8UpCbiAjR/J7nQwZpmAvpct5hzU
EiA/Fmet4ZsA2Z1BLprYfEVv25IMRSbAonyBwPO3BN47iR6q3DkBle7phqpY
fKEHLSn6eyfAV+y5cstMCbjxxriVaU0APWx50zwLHs5Tyfx6+phdT6EG8ePh
yOTzdPwpbLxO4MtwMTzI41sMdS9MgEgc2xKLAh4EowT/Fl2dgDGi+fI/bTwo
Xznlq+OOjU+K23XQBA8iKpHbfj+cgFyJ+uTFy3hYxTXkHAyZgCA8e4mMJx56
RcPO5r2cgNQLzrrl4Xio768Z10yegIzPzcS8D3jIyeUN+/l1Aq7qhK3uKcZD
3BND2f2/MP8iR3uXaHjwPxtUmk2YgGIXp3U8s3hwctW/otqIxZd6eMJfqBTM
IWAlsw3Lxzbum4aqpaDFT3it/G8CGjdLBjqalYIlnVX92wQ23k/tSpN7KaBv
uo2KK1g+LR27nr4qBdmqVZc0nkkIams+9SW/FARidNbtEZ4E13pxjTZ6Kcw4
+Hz4JDEJpmN342y5CNCpXqArqzAJlOtuozv3EjCetNj+QWMSKntqNklaEOBr
ywFPmSOTYPvT3+yUHwFeDM9uSTk5Cbhf21m+fyWAT8H+71JWk2CxfrkJaASI
Dfc4mWQ/CZqUNL0BrjLwu5Ddv+PWJKQGJz2u2V8G1xQm/eO9J0HEE2kXOZTB
Kf1MafGgSRj7t6hf8aoMNIXHit48m4S52fOq9KoykOhROi+agMXTTciaWioD
zu/OMzGfsflJnv279pXDyKO0qC05k6DsPzJ92aEcyG+u73tZgvkPdTr8I64c
Cq9/qhWqw+Z/8t2ov6Uc3h/oc3xGmYQ+1+eWAnwVULpuN5tgzyQYcJ4cUzha
AZ9p9vGRo5OARJQu7XxYAVGfUg5sWMTGq1vtZc2rgHull6lhnFPQ+Dujumi6
Ai5HJ7nzCU4B7gmniLFKJRhcom8IEZ8CkbcKPzpdKkFZeccXHrkpiLEsf7D8
tRJEVi/oB6lNge2B1usjQ5WA2yrWy4mmwLeo2jFWoQr6/lk9CjDC+m9bNMA5
V0FDzmsx9nNTQE97YiqZXgVDQZSffpexdkqh5/BoFbSc22LGcnMKcj9/TjBV
qYaCW6SJh16Yv9V/G055VMM7JBS+4j8Fc+TE6H+51RC8wUzOJ3IKuDVUJnYt
V8PtzijC4psp6NtUE9mqi+H110abex8xO09rI/+TGkDeGxbnsqbAlHtqqrW2
BuRe1sXeLZwCZdYw/SXBWhCw59s/U4XNl25Ucd+yFpQ0jJrcSVg+ZGwCbiTW
wmbOYKdJOpYP5WWpln+1sESs5Lo9hNlZ7FfC99bB35HAj2OzUyAgdXj87d06
qP1ddtiFbRr6+C3TForq4Hsoe+cw/zTQW6MT4rnrIfb8ES8nUazdb11p1Kl6
8JP3ExqUmQbNFbZnubH1cF0PZV/bNw0GUYfvcWK689SmhyZ92tNAsYyk+Sk2
wIE/vwccDKahstekeNvdBjiXvRTw12wafAPuveosbgCdxwcl7Wwwf7gTxy9z
NMKu0/cK/lyfBpzQA3ZLTKfyO2laX7ozDQLsxjxnTRphWuvubNejaYj5sThx
xr0R2nlyoi+GTYO/Wnrq2deNQKBMKXbETIOCVeYHk8JG+PJRtep8yjS4p5Gz
jnc3wvOS8au0b9Mg3TDto8ndBPcildkt86dBG8/PvVWxCS7buCS0lk+DWMtN
k8FTTeC7L13rbPM09HgQ2dLuNIEDbphE7MDG07t+Wb1pgpOiXzzM+qfB1uz0
8FRRE+zv7xdonpqGRrV7Mdd7mmB7rmyaKW4GDLYOV5ZyNwPHE8djDetmwFfa
hJNDsRmGz3z4c2LLDGjfDb4pgelmovRfn1qpGei5OLQq5NEMBTrvxI2UZiC0
waylJ6YZUtb/ya06MIPpyyTpJwXNUNIlYW5wdAYazzX7rXQ1Q2q6zWi56Qzo
sX9SN2RrgUif+OCj1th8VrRuu10t4PnKWp7gOAOu3RYb9A1bwNbhTdlhtxng
k5nxmbnRAsfUabYlD2ZgrH7wtUt4Cyixb12C4BmwK9bU/prRAptbzr0qfDED
ylsaI741t8DKkLDGoSTMX0mXqftUC/Tmmzfnp2HxbrDoXBAmQm3wM2etXCye
hHULhzSIMGDdzP2rdAY8Wf1+6FoQoXnPxhSNhhl4/jji7rInEX4tmEAObQba
H5n53X5NhCQh/i613hmII48HJfwiwtNu43vfx2dAhLFdxY9KBNesEGGV5Rkg
/GmvkZonwrlH1RkZ3LPg7nX6s7MICcCUx3iv0CyI7OmdvapBgt3XKwa/7piF
ONwjsvBZEvAf4HyisGcWFC6zMHzcSTDDdVTqy/5Z0BalHQ6KJsEm2uPfcodn
IVIf5iGDBAupeIvUE7OQIdPzOL6OBH/wvnO7LGchRQknnzpAguqoomfv7WbB
YvhaojUXGTJtV5SkXWchzS0oIm8nGV7vPVSdfH8WNMcvaTYAGXxX7ttLPpkF
64JrevfOk+FqXR4uMRqL//34iZo7ZDD955m4PR6b/52AakkUGTRyfh58+2kW
nGirXdZpZDAPmiFv+4H137iREFtOBu1z6rdji2ehR9Em4wGdDDt3ua/fWjsL
BvbBB7gXyMCHVL6+ap0FSvIxf8VNrTDJf8tgc/cseLqo+47vaQVax7fu5yOz
0D619O6kXivg00YebFqYBVvOf9761q3w6b6iaDTHHBBVRgkjbq0Q9WLwl8DG
OajMfSK3P6QVvOzkz0SIzYE5n4vV1uRWsFW9NrZedg7D10/H3+a2wgOO1JBQ
1TkYO1D1q6S+FeyJvbvWwRx4W6jLPeppBeN3Mvinx7H+x1Zs6fOtoP67+xL3
2TmQffn2Thc/BcRCpZYDL82Bmi7HzXs7KcB2/lIMh/McePYLc2RoUGBQLlHV
33MOKLHllgFGFGie66xn9cf8lzYqsNhQIE/w7c1HEXOAPHc/ELhNgWRGGw/u
zRzYCYs75PtTIDhD9P2DD3PwXK/gJd8rCnz0s0TLmdh6ufOVB1MpEH4qpu3+
7zkQ6Hvp6JJHgTs3zt5fqMTizV04G1lDgYtaLzZ7Eecgw3qy5UQ7BY7yEDNn
u+bAqfJpcfIQBRQpgifuDM5B5GaZscQlCgh9PNU3NTMHtp84LqnxUWHJI/Kx
G+s8SNiSLR23UaEn4uTOifXzENcwKKwhT4Wai2GFrlvnwVRbeP17TSr0Kdda
jkrPA/H8Ic5v+lRoXOWddlaeh9D7Ym/OmVMhp94wcujgPFCu/niVcIkKCX1c
yjeOzQPfcvEmv5tUCPypX9N/eh4s3m5IZ79PhZuBAQ5XL85DkN248u4nVDhz
hsDy7xoWDz9r8WA0FbSl2d7ae8xDTI8w3jCeCjI6Jdo9vvMw17nV+NgnKqxf
j6NcDsX6823yHP5Ohck2HTfGq3mgP71du6uQChvTffht382DbfGjh7hKKsx7
F3zqTJ8Htb90mXtNVKAbLepdyJuHpd1nlF7SqFBl/6unrWweCKyeN092UyFD
be6hVdM81LbekU4dpMIrNo1t1PZ56NHpNH07SYUHzR455/owf+8IZmqLVHBI
yj5FnpyH1PWHRBxZaXAy//a4+eo8xl8O1Onx0EA9ODO0hXcBLMoYw7830EDM
cmz36c0LYK1cfK5VmAZae/aWNkouYPlOyonaRgOpBeeLJooLQIx5/mVYgga8
QgordZoLsHTAy2RYhgbjf66/NtZbADtSfV2wPA2omZ/UakwWQOzylsRKJUzf
+/Y1GJ5fANQU/iBVhQapJrtvVDosgH858wLRIGK7A+ex2wtgvoFtp+kBGtzV
lP5Q5rMAubJEkw3aNLjIdUVX7+kC2Oacj3XXoYE3Nakd/3wB2sduWXsjGtil
0u/qJmLj9e3z5Q7T4PjdHZuKv2Dzh9Gb3Y7QQDWqI0vn5wLIGh2vs9Wjgait
2Mnf+AUImmXLH8Zs1r3n+w/WY+sjeNwQP/r/bfavlSzbMbtv+bV/HnUB1JLq
Ypn9m2opOw78XYDQmFc1Npid1/uy6OcYFm+RQfIdbL7EHySr/UsLULleqpwZ
T5C/0Ew21yJo617Ov4/Fm3LWLEp10yJkhGbtvIetJ1QmWiFrO2bvuZvBXK8H
mNYqyy/CVc5v9kZYPqz5Ixy/qS9CigbcZuZLr6OOVUl3EbiHOg2Y+VRI44tP
M14E3HjkD2a+Be8bHdhjsQj++mdymfuxYBhM/HRl8X/7xbhi4C7rsgiavYxP
Q9h+Vqo82fDx3iJY7y+PfI7tdy97+WeZwEUIFdk0wjwP9S3s+ilRmP05amch
dl5+JB9hSL1dBLv++EZ97DzFF7A8SkrF5r/U2OqAnTf/ECQmkY21h6Sd3Ied
Ryerhz/ji7B4v5bQ4rDzaiZXeFq8ZhFQgupe5nnWmlsafkNehOextPcm2Hnf
KZgfJvpnEZTXc9gx7wMvY1729fAiSIyodT/A7svEN03ClvlFkO50/8y8TwJ+
d21esi+BZwHtjRx232ZNcxaEBJYgV/c7H/M+du6YfvFs2xKkBHXvYd7XigPf
1QV3L4G3W0Qr8z6nc080RqosgcVk5jTzvj9vVXbaoLMEClGp72QwPPD+4MIV
brgEdMo0GweGF3Ye6cl8Z5YwPvaL/BjDE+MIp8MhtktA6VuteovhjdrFLx08
Tkv/wyMxxQHPoLtL/8MrzVVZIa7HS9C4HHI2BcMziXrHbwHhSyC9rvkGE++4
+2RM2GOXADdq4sLEw9EcuwG/99h4V/wNJl6SA94FsGQugXK5WlQShqeF5n8k
fAswu9d7kIm3H3ZKFqxULIE5j63QSQyPwyZszvm0LIGxjSQ5AsNrD77ts4ud
S6BXp/+WiefWbdbR9waWwFovKZCJ9/e+vlGcn8by0xhtxHwPLnnTKu+yLGM6
w1mZ+V4YGG21m+FbhkblH+/5sfdE2b6VzUMEax/Q7Vy5SAERtc0JkzuXgfj2
Wh7zPcKxndG6vXcZLDwjRJnv1b+mZ6QxrWXocbyzwxN7z+oTm11d9Jfh6nRB
Lh1773LyIgVGTi1Ddu5obzf2Hr592vDF6cIyDO2YUGW+lwEW/McGry6D5/S8
bjH2nibLn/hzzX35f+9tyHyIT9/DZXD1mdZjvse3K6tFHEOWoVhzkxJg77XV
n6Dcvy+xeB8fLxrH3nPdzAozu+RleD74Mov53sv5co7++boMY4Ob/E5gfEDA
5GjwpV+Yf3r+dSZfmBP3l6ETlkEowNySySfoGofLLjYur32fIUM55yPbjrZl
iGv6U++D8ZF0UtHi+X/Y+hODqUy+Uvtx5SVtYhkIis8SmHwm+84hFcuVZSgI
55THY3wnLnKxqZVnBUK3bnvN5EN+NlrOZ4VXQLmps88b40vXlby4SRIrQJB7
r8jkU6eWf74zU1iB9vNtMvkY39KsndFp1liBtNIz4RcxPibxRp1memQFECNr
zyeMr3H/mPRqOIm1v2cffofxubHHKsInrVag8suBSzoY3+M7eyuj1n4FiCb3
Wp9gfHBSOsPI6NYKeOdqsDzA+GL75EhvlfcKpC5oCTP5JGH910CDoBUQkz3y
isk3v7QPSlY8W4EpjSglV4yPRn+R/300YeV/fPXevWsWhM8rQF+8ufQI47OX
DVMnD+esgO1Uz3cm3z1+xeFZSckKOGkZH3XH+LCKynslVLcC1kl+yUy+vJWl
p6qQsgJ8ua1bjmB8en+LlP2hnhVQk4WTTL4tnnwJVzC6AkHRR2/NY3yc/Vbi
G63Flf/x9aHgiwd/ca5CYmdoLJPPEy3fkjUEV//H9wtk22/liK/C1Wccekw9
8G5WdL263Cp4D2UFMfVCSLll6ne11f/DP0xPuNG3GKigVSjQ9ha/hOkNq29n
uzOMVqES773dANMjhx+8eLD33CpIKxW64ujNYGNK3Jp+eRVMf1/cy9Qz+js2
/VC4uQo9yfvK/mB6Z++BJvMvXquQ5qVdzdRDW7gFxuQCsP43k4x3YHpphXwy
JDUSi0+5LYgT01O978N27Y5bBfY8TalyTG/VudeWvP+4CkGU5ZxrmB7LPrLu
gvT3VUhROVU+hum1uAtVS8mFq6Bs1SNvgek5fwXuGMlqLF6WzebfML2XtKKv
mkhahdDYPVZMPRhUF1C/nYGtX1LpuCimF13jCNfeDq0CX9sjnBamJy1y/HjE
5rD2T6qnmXozEW97uo4Fh7wz/pUz9aiQPC4xlAuHhh4tfjiD6dUnUQnDRutx
SM+mrJmpZxfndA6u24RDsp4e5ky9O8KxPaRaBIdSSsPeM/XwZefflKfbcei/
eplMtN5lKI1DuQPuq+2Ynv57aMmNWx6Hxk5F9otietvy/ZuSir04VPynVImp
x2v5Dm54oo5DFMODh7gxvV68VdRG/yDWP0VekKnn1R79SuPQxaGYtB2kCEzv
p/ZZLBD0ccgz+GhSAnc9iJnOHfM3xqHGV6E4Zr0g4uerF0dO45DEa/638Xfr
4DHhzl9WC8x/w2wYs94wu2ezKv4CDgVNPbpK/lcLN5798H10BYd8u1VuXk+s
hXtL5vXoGta+ZzLGy7IWRq5MbcO5YPYZCU5mvYPh2nKjyB2H6MWPxMi1NXCG
cvvXg3s4ZMA9+VngSQ1UgiCXji9mXxKJIOvWgPbHTPPlAByKnOZok1muhgz+
U8kFITh0NQm3wqzHSN8ZG70fheXvA3+EqUc1iDxugIOvsPyt1XNCB26GLcRh
+dhzWpNZ74k142/7lYxDlbmO9kLpVcCf/1XWKxWLTxJDDOcq8JM6cUczHcvH
i5wzcQpVcGevQvnsdxz6b72p/2XNpp+/cAhxqhYx61EXVq5fulOE+StHFe0u
ldBoz/tNvQyHTOldMcx6ll7dp6Wpamy9aoJtBdMVcIAWZJzdiOV3wY3KklcB
abqysW5kzN9avUziU8U/lXYccr2184Hs0QrYK+ioPsHA4vGWaN/IVwHJXpyP
M/9h+diseIlZj9vMeN/oOoxDGSV8rdlx5bBuxF9CeRJrN5d7YutQDg/OSN8c
ncOhRHYdC7l95TBRUJqfvoLlo+kC78xSGdhLX+G5yc6CbPH58cx6ITWE9Zwi
LwuSODGTXvaqDOpiGB+GNrCgDPnJQ8UOZYBwj6a+CGPtJvmKzHpktqPE4Rvb
WBDdf2sAs15Z2lgUIS/JgmJGeT4y65n7NW06+nexoMiRwhdZXwmw56iO4icF
FoT0V64y66EJaR33rqpg/Zc8fSQsCCAo5FO5W5MF/beeGnhfbPO/Qywo0fCU
+CUuAiz8yb/y4QgLSlUVSaDSS8H5+PlMe0Os3dhSm1mvvXxOi0XGhAUVh3O5
M+u5pELqyR5zzF7Vb2x2L4We3V5x76xYkMXpOGRnVgoWESIDl22x+JaFjjDr
xTUzPzWkHLD1lKmLBwiVQhHbqyeMGyxo7pQXnXsWDyo39pMSb2Hz79fcuEzD
w4dmkpTtXRYUpMLiI1+MB1EtD9cdPizo6ql5M2Y9OzxJqLDTjwWJvHd/QAjH
g1/65Pr4IBbUGF9DlPbEw4zws/MXwrH5QvhrFy7j4ZqPyiex59h8L+7DIRM8
ePY2zbS9xsajF7uY9fahE7f03iRg+fk1s4tVAQ+2PwSird5j892kXwsTw4M5
fpSx9QuWT4/rUyH8eKiUi9hLzcDW2yC3Z4EFDwejlHxicrB8hYluY34P+DZX
V32uANv/zyc7VYZLYKets8gWPBYPC0OU928JbHE2vkquwPa/zVdFq7MEgomD
P17UYevXyBZkp5bAysEQtjMtWHvK9xVrUgmsfy9/SoiKxctx8Rfze4YvX3V8
SycWz53fd5jfP/5rG4j3TNti9h0/A+3TAyzIlOjpbIONx5k9aW2cZkFjauLy
57H5gnaW3zZhYUWu0fen7LH4Hr7WE6jnY0VjLoL3TVjxYHHj8RdjEVYs/wlx
+8XxcJLBYlizkxUh+l8PTh08kDNRj+FeVqTpODBfaocHG7+HDyu1WJGtdfTD
Q1F4ODu3LHZMnxVxB1sQMkrxoFStnVt2ihWZXnqROL+Ih5zY+2Z6FzC7b3r3
+IFS+CqwMIa/yopizL+ZPfMphf0MzVBdd1bUSGIfqS0vBYVzP+WKH7IiCs5I
5Y0wAX7sniHohLAiXO6OjQ3XCBA2r2b7+yUr6pPvuOBYSgB/l+/LB5Mxf3+y
dmpKlQEfmojJ+4rFl39v/+7AMnghsE/twC8svpbeEbnRMggN/Nb0k8CKfLNu
uB2/UA52FiNO+xux+UaiZ/gby8Gq3on3RxsriizlOBpzrAK647+8V/3HiuiC
MuWtpRXg5DKAsiZYkYXyB1cXvUq4/Pdqp/IKKxIQiN5lVVUJB39+9PrGw4b6
Sr0sI05XAeFJr5CSMBsqdplfKeiqgrxlu6w0CTY015+vQnOthsP1707sUWBD
nnqNJZUcNaCpJzX4SYMNoQB7u7vxNVAidClQ9gg2PqgBF6JVC7G9CZIfT7Kh
oMj99lRqLURaby+SsWJDuevfSXh618FWxQtWKfZsSHk7mVVEqh6Sl99MS91i
Q7I513gCqushxk30WZI35s+4mf2dRwPcOmqpJBHEhkT+5r1P29gIjvmtNfHP
2FClhfmlomuNMBay2VE8gQ2ZPxP9NYFvBE/rM6xxn9lQRqLfrv3iTeDS3JIg
msOGXH+dWHDzbIJjKYIHX5ewoVAH6qkUYhM0up8ib6ljQ5qvKzWS9jVD+UCD
20sKG+Jj/5liGdEMJvn8G4R72FA21XahZBjjO/vC0p6NsiG1V6wuROMWqGep
PSa4iK3HM5VyMa0FPrTwdkdysiP359e17fiI8Nbwqe8GQXZ0NeeB9pATEXaJ
Vm4LF2dHFrWSfBl1REgf4PzJJ8eOCM+j92YpkSDFNsA8RI0d9d0MODEWQYIH
KoRRHsSOlDOP6J8aJ4F76uGwICN2RDlU+hd/mgzLno9kuc6xI/P2M290s8kQ
aFhcGnAZm+/7gNsP4VbwLtK5xH6THZnKxKRsvNsK5lE+S35emC0kr2xEaYWO
SwWvWALY0VR+hvr5AxRoadVS941kR2NGpRslYjF9lerVuPKGHQ1drxJOWaDA
6e1zzj4f2ZG25/SRBisqtI3s51nKYkfZ3HGt8XlUyC72SLlXyI5c1zcUbROl
wef9U7rzVezIOmb8/FYvGqhwqXbcJbGjNKFvrrGtNChoveU5Q8fWUyyzNU69
DbJOjAl7DLEj3KuwUa5nbRC8Y2/m5Czmz5X3Y/toGzx68fXkbTYOpFmhLixk
3A68DkP9Y/wc6PlCKf3Lx3aI3r8nwEWUA43RRmOTWDvgadonqREZrP+tEOse
6w64/KDvt9M+DtT3KKPBLacDBk7uthzU5kCpv2xfG2/oBDrh/cw1Aw5k/jXA
8qpjJ1x90RPVZ8aBYgIrA0sKO8F23ZW9jjYcaA6nTL8g3AV9bUnVf69zoCn6
dfcDN7qg5Cvd3u4OB4qTEPPSLe6Cnztt2LofcaDKuxg54aUDmnobfymMA91J
4Ns5q0qHSkL7AXoMB4q+dkHz+AU6FGqdb72YwoHsfngc2xdIhxi+2Nsd3ziQ
2FVXyYx0OoT7iQhY52PxK3znLiPTYYvZuS+0cg4UeumsrssKHRJ2vtS3bOZA
gsUjY+kyDHj5WqintQOL/xcrq78xA27eMHt4tp8DZbP1kUdvM2D2YLQoaYoD
6SmbHh+NYcBwpkCuGY4T6ayWZEQVMjD8NjFrXseJ/ohsSsvvZoDTXN2Y6RZO
tJ0WZjM1xIDpSr7QBilOpPLj/KPWDgbUxxrtPqnEiaTcjYfv1jOAIFBNqD3A
iQQ5dhIaMH/GDG5bo6OcyGliNPxfOgNImccWq0w50Ulnnb7ceAbU7i6PMbDm
RM+rHfO1whmQMs+uVuHIiaJtk2WdfRjwxuVx01E3zH+Jh665EwOkEd6J8IAT
yS82bP5nxYA0ARbuI8GcyO+d68NdhgxIDnz4vuQFJ3IlU/jWazDgvkUhQkmc
qD25lvO1NAPY5ZbbCtOw9f0KJZVtZMBC/H2vQ7mcKDGUd/Ullk8/lzyhglJO
5H6TjY9jkA5efzWztBo4Ub2DpcSGVjqw5tw98YvGifg5w0x+4ulAe5LTp9HL
iSRi3lWMfqVD47JaYM44J2p2z+goiaFj+O0mqb7MiRSo1emyj+nwJz6r4Ds3
FzJ3W+yQcqYDRWiflYoQF4qx/oH7eJYOmb0u0xk7uJBdgllzPtAh1Xokeu8e
LqTn7t9tJ0sHZUVFpfT9XMi9mG4bKUCHX8s3qhQOcyGnIynyL8e64JvbgMOX
E1zoKlvE5O6iLgg6Kscqb8mF0s6LbSWGdoHA5qtvU+2w8XtyNsRadgFnaK/W
blculPJEhv+mTBdEWMuQ39/nQpTXNxwcxzohsPmdm/QTLiRtWVXkk9cJ/O/+
8L+LxuJxqDla+LgTet0lP0vGc6GMgJBkWeNOaB9IOJb4iQsVx00Y3drUCQ75
nX+2/+BCtTSfeXlaB4yEiD94W8yFGpuUGkQSO+AvS9w2sVou1DcR8lPLvgMK
W2g5sa1ciE89UAAv1wHZhpbmW7u5kIA2t1HgcDtoi8aMvhrB/IU1On3OaMfw
mxy8eYELGUvTAjXd2qHA9ozsCw5uxK6rM3ZcvR2eqzwv3bSRG4lV+Qn3z7SB
OFvLxWgxbjQVqO6ukdsGQl6nlgRkuZGmahVjxrMN4gwjX0WociNpYS3nFwfa
4FkRvzo/cCM7y2fb2BZoIBZ5ojH0OOZ/Sv3zuTwaTF0KvbHuLDcaGnjQzfx7
2IFWXp7gS9wIKXScmdGiwe1UwxRuZ25kPa/Q8HiRCkueQfDEkxvFJfOKWRdQ
YWKEs4PDnxtps/f/DvWhQnXxUU//CG6kEE+6oAZUKNlPEGZ7w41yj7SvurNQ
4TgXW+ajD9zI+81uJy8CBZpbdY1xWdxo6Ro/WSKIAlUnivsf/OZGsm8NlEnG
FEjeseq/XMmNRNJmcoMEKSA/dkjCm8iNDM5XPNCgtoKEQ8HvhS5uNHYjVdch
qRU+7V+08BrkRkKMnsC5660Yn/eamZ3hRu1SHWHr97eCrE9u1B1WHuT/JHi4
jLUVWExmFabX86ClcPuBI01kmCV4VLtt5UFT1A/i75LI4Psi235CmgeNiTva
criTgcdhEndLmQddTaCXuRiQYaXtVvzoQaz/o115wjvIQPmaceDmMR5k4JQY
zjJHgvqde1uHTvOgxoSoK/otJDg75Xz7xkUeFCOwT5EtkwRdhLT1A9ew8UI/
1mlGkYCstefLVQ8eRH/3rkTQnQTf+K7r//PlQQXrySm+liTQ6Ehl2IfyoGK1
TPt4XRIomu1+2POKBylPR3o7KpAgZ6eD6JV3PCh0/Q6eP1tJkPa65ycjnQdp
nusV+MtDArXrO81s83hQ++3pK8+WiMCvfXmks4wHWc+VzBPHicCeRQ+50MSD
JAovIK9+IoT67djd3s6DjL+t4kK7ibDZ7CLeqo8H9TWZm/R2EYGvqt2GOomt
d13l0dOdRPgbu23x3CoPIuwrVSzA7DaB2BgyLy9ScOrQHKUTwY5BUT2zmRcJ
eT91LOohwlDmloYWSV5kvDQjunuACH92v3Q6rciLgoxFdxwaI0L+PJGrSZMX
5Zr/M/SdJYJe9aZ3Jnq8yPbWvQ0PVomghaJRvQkvovgrhy9xkQAv0NRmfJ4X
4Q7s+PBSgAR5gSZeNQ6Yf4reE20sH4fPhQsdv435D40dT5ckgahc3bdKH160
VLxtkvn/EAIJRieOPeVFAibaQVv3kSDWJbiv7Dkv6vvK0ZujQQIpVPVYL5EX
uS/WIeb/W4jkHJMs/cKLtIdbtQjYfow/CSzQ/YnFS41WYztKgr5ldqtiPC+y
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
          "]]}, "Charting`Private`Tag#7"], 
       Annotation[{
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
LK/jR//+f83/A4T6v08=
          "]]}, "Charting`Private`Tag#8"], 
       Annotation[{
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 360]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJxNVntYTFsfTnVyqaOQSgolHZJLuTST9JbILYVSREk3xCmXyKWkKKEi0qES
KtEFIaND7h0ily4KxUjfrOlyZmpm7z0TojnrfH98z7efZz/7eZ+112/9fr/3
Xe9aZoERy0PU1dTUUun773fClKol2hslCP3vI8bjHm+D+FQJbkxhhi9bJkZR
Zun26AoJflSHpY22EyNj9qDanZ0SFLwQdueZiBHXEjR5q5EU3kaCR6J+YvBK
7pzd5CpF+5MjCW1iAnMP/d6QSCmyJdZZt6oJfmV+XxmQK4Vm1dDXK0oJvqU/
u+VbI8VTVfP0N+kErXZmw1b0SXG/NYlvs5sgU2NXvId1F0Qy3egkP4LEgtrP
C327EHnYoUTkTLBl4cTZc5O6oNl49/AmSwJfycFMR0EX9CYOnlSvTTDvmLCH
J+rCR63sOfZ9Iky15a2YNrQbgzeE1A3RImj7mVo5yakbOkzxmDxdgrrz7Wbj
w7tRNvr1hqUjCO67zIk1z+5G+Vjf7x3mBJfEWR9NXnRjlHM/Vz9rghOHFXzD
r91QkxgE5M0gKLAqeDtgmAxr2uasEjgSjPyxXEPLSoaCPQK7lPkEx16pbDSc
ZXArPSoau5RA81xJgNpKGdLXP+LtXEmwZ8uqYz/DZXB0Dry7N4DAu1Hz2fcE
Gcr7BznYbCCovnRd0ZMtw/lJenUpEQROu/0tFDdlsPAPHpu8k0CwSNuTeSGD
oKW31jKGYKJJeVz3FxmMGzNsfQ4QnJcGl0q+ytDo8KTY8DBBtKdee4euHBL9
Yq11qQSMxT2DNks5ot9sPDHlJMF65cZ5otly8DJmW+35g+DjM4PIL15yJCpP
E8csguVnnuQKN8nRZGcUuiuHYLIqvKk5Xg6tG+YnzS4Q5NaMHPjhjByXDdXq
7fIIjHKr7BpL5ciI8TgpyCdI3b4jtP6ZHJbfzZpzLhKozzM/VSOk699dK+r4
PzygrH11F8Wdw9ZN9eiUI3z+6OPvKO4vPlf9SiGH8cN3bdkUd5UJQ936MeiK
yLFwoLjxgKl6tQ6DZI2WxFt0vQdnmy8sNGJwNafh+0CKL242nl01lkFZbfrX
f/NLnrXqvesUBkXeNy4il2D7oNPb/7JnoGX7PmAsrWf1h8bBc10ZeH8M57We
I3Bh068+XsZAtunQtBhav9Xj+oXOfgxS+5V/4rIJhqYNJQ82MDAv6Fi5iPZr
atCy/Y6RDPaFW16NPkP7YXt85L1YBsF3002P0f6q1N4IZh1lYGI5zTnuFIHY
OMX7TgYDg28Gy1dQPl53VMt5uQwCJvpMHpRG+S4flHL7CgM9eWBePuUv+9DC
8TP/ZMAFj24Zk0xw0DvpSVklHdccJD1A+d68xTVoWg2Dgw5aXq8SCbyQ0He9
mYHODfU3KqoP+8GVZ6a2MRiw7YRwVBzBqhb1GdcYWg9b3DN2H9XbNeeaSX0M
/PX9+4z3Eox/roooGcjiPPbtV0UR6J121J44nEVR9RV+QySBMjSmoHAMi9z/
bGs4t5VAOKPCebw1C7dxO93WhRM81ez9WGDHwj1GuGb4JoIr9fxd41xYxMcM
9Hi2nuCUtMcw352F05/XencEE8RUzLxp7sui8bn9aYt11B9Sd7hfCGGxNLR/
QiP1h3i/so7RW1l8DZu/NdWXYKM1ezAnmsb31q/y8CFY5nrdwjSJReKSq9tN
vQh4w2UPsk6yyF76d1Ef3Y9jRJNXG59jUXO/8xq3hEDr5u/K00UsWnhBUb8s
pvqKK0kzFLCY+/Bp5swFVF9ZYTYZj2j8YkHD0XnUL8IKX+q/YqF224nouFB9
8dvXn3zPIkdlOemBE8ET7d80hopY8BxsCgupPxQ1heQc72Zx46v2vHoHgrTC
fL5uL4uyHJs+l1nUD54EfkjR4nB+1nmZuj1B4IkLkTpDOYzi140w4hMsWNei
e9SUQ6ZQ93Ayj+pr6ujigRM4iDTcrIIpNlL5uSZN57AodoH5ZYrVRpiItZxo
vIuDXvjR+e1tvnEJizk0VtTbJtP4bwRnTDR9OAjWFnLTaT6SpPe34wM59F0V
qLxovvU+hp79wun/p57FcbSeiq0NTOxuDsydP/x15xLkOemn9h3kYKF0WZxL
/e6IrueEmOMc7gQM1y+m/dsmTKvszaL5XcyqHEP77XulZu2eSxzivUijivLh
FK3b+/UGh9KgaQwofxMyXmVG3efA61IVflhL9RWiM1P5nIPXqogplSHUb+wW
10Y2cIjsfnjwO9WPgdaRzWwLh+Dq8Nk7thH8eFvVf5uEQ0bUtg9W9DwhXYmX
ZD10fs1vtQb7CV7e+2tOhIYCiWZhh20PEdxM1hRKBysgcY/K2UX3U+Zql92b
jRXY31zbX0T3Y7xVvP7f4xQ40eKjDD9LEDbXqWyjjQIPj2epD6d+s2xYrEe7
gwLRN7uy6koI+K33OkMXUHytLTm/jMCn7EcC8VRAVnKyI7GCwPHALLPgtQqY
VwmFUZUElsv3VLSGKcAdeyfe/pJg8GbemnU7Fej7lvIl6i2Bwj6q53OcAuPr
fmbHf6R+PFBwwj9FAdtv1rI0EUHle27Sp9MK+LsneFyUEBRfmvZ8db4Cd7T3
Rt3mCNIfyTc0XVPAJPHyuBc/qL6OT9VcdZfmM/+TXrOmGIFrI869e6pAqqh2
SIeOGPttrtp71ymwz9h3CKsvRqiatOHtJwWamlyte+j5725cvMOzg9Z3x4ev
tBBjZkeHXh2nQGfkvYdd1mKMKh9fslRNicuLX+c2TRfjl0Pr57/RVkLfLan3
oYMY0hUFrUsMlSjjJqvOzhXjrQWJeWlOcan6uy1uYlQ45pkunqzEd+0mO76X
GPm/tpY/5yvp/WHiJuVqMR59HuO1YJ4SgX4BsZeCxEjwdldtWKj8333mHy2c
nzU=
          "]], 
         Line[CompressedData["
1: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
KcD//c/8Ayu6GxY=
          "]]}, "Charting`Private`Tag#9"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168981385747547`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753501048542039`, 
       FormBox["\"M\"", TraditionalForm]}, {2.2338020711336526`, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507060204809065`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168981385747547`, 1.6753501048542039`, 
    2.2338020711336526`, 3.3507060204809065`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507060204809065`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915321275543338*^9, 3.915321317595668*^9, 
  3.9154104109057465`*^9, 3.915414917239417*^9, 3.9156225204778423`*^9, 
  3.9156228939697256`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"15e5058c-838a-4479-ac4d-91c0fa8cceef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"spin", " ", "down"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"KK2", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"ds2", "[", "5", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"KK2", "=", 
    RowBox[{"KK2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KK2", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2"}], "]"}], "]"}], "->", "\"\<-K\>\""}], 
      "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"tpband2", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"ds2", "[", "7", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds2", "[", "6", "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9153213029884377`*^9, 3.9153213246299133`*^9}, {
  3.9156228978919263`*^9, 3.915622903547827*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"3e042aff-cc0f-4c71-9e61-a4751ab75ae7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1168981385747547`", ",", "\<\"K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6753501048542039`", ",", "\<\"M\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2338020711336526`", ",", "\<\"-K\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3507060204809065`", ",", "\<\"\[CapitalGamma]\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.915321328442725*^9, 3.9154104122466774`*^9, 
  3.9154149209066105`*^9, 3.915622522369774*^9, 3.9156229049522257`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"028c204a-afe0-4d8d-b042-697127892bc0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"K-Path(1/\[Angstrom])\"\>", "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{"\<\"Energy(eV)\"\>", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{"s", "\[Rule]", 
    RowBox[{"{", "3", "}"}]}], ",", 
   RowBox[{"py", "\[Rule]", 
    RowBox[{"{", "4", "}"}]}], ",", 
   RowBox[{"pz", "\[Rule]", 
    RowBox[{"{", "5", "}"}]}], ",", 
   RowBox[{"px", "\[Rule]", 
    RowBox[{"{", "6", "}"}]}], ",", 
   RowBox[{"dxy", "\[Rule]", 
    RowBox[{"{", "7", "}"}]}], ",", 
   RowBox[{"dyz", "\[Rule]", 
    RowBox[{"{", "8", "}"}]}], ",", 
   RowBox[{"dz2", "\[Rule]", 
    RowBox[{"{", "9", "}"}]}], ",", 
   RowBox[{"dxz", "\[Rule]", 
    RowBox[{"{", "10", "}"}]}], ",", 
   RowBox[{
    RowBox[{"x2", "-", "y2"}], "\[Rule]", 
    RowBox[{"{", "11", "}"}]}], ",", 
   RowBox[{"fy3x2", "\[Rule]", 
    RowBox[{"{", "12", "}"}]}], ",", 
   RowBox[{"fxyz", "\[Rule]", 
    RowBox[{"{", "13", "}"}]}], ",", 
   RowBox[{"fyz2", "\[Rule]", 
    RowBox[{"{", "14", "}"}]}], ",", 
   RowBox[{"fz3", "\[Rule]", 
    RowBox[{"{", "15", "}"}]}], ",", 
   RowBox[{"fxz2", "\[Rule]", 
    RowBox[{"{", "16", "}"}]}], ",", 
   RowBox[{"fzx2", "\[Rule]", 
    RowBox[{"{", "17", "}"}]}], ",", 
   RowBox[{"fx3", "\[Rule]", 
    RowBox[{"{", "18", "}"}]}], ",", 
   RowBox[{"tot", "\[Rule]", 
    RowBox[{"{", "19", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.915321328442725*^9, 3.9154104122466774`*^9, 
  3.9154149209066105`*^9, 3.915622522369774*^9, 3.915622904960205*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"13eb65b8-d485-41c3-b871-e8404dad5cdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tpbanddown", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tpband2", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "tpband1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"figdown", "=", 
  RowBox[{"BandPlot", "[", 
   RowBox[{"tpbanddown", ",", "KK2", ",", "Blue", ",", "0.005", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{
  3.9153212865722322`*^9, {3.9154149238866415`*^9, 3.9154149268616867`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"14e5917a-2164-4fa7-923b-d1e2d80c7db9"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, {}, {}, {}, {}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[0.005], 
         LineBox[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
          "]], LineBox[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
          "]], LineBox[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
          "]], LineBox[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
          "]], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#6"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction[
       "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
          Annotation[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 180]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
             "]], 
            Line[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
             "]], 
            Line[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
             "]], 
            Line[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
             "]], 
            Line[CompressedData["
1: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

             "]]}, "Charting`Private`Tag#6"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 180]], 
             AbsoluteThickness[2], 
             Thickness[0.005], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
       Annotation[{
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[2], 
          Thickness[0.005], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
          "]], 
         Line[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
          "]], 
         Line[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
          "]], 
         Line[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
          "]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#6"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 180]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[0, 0, 1]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168981385747547`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753501048542039`, 
       FormBox["\"M\"", TraditionalForm]}, {2.2338020711336526`, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507060204809065`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168981385747547`, 1.6753501048542039`, 
    2.2338020711336526`, 3.3507060204809065`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507060204809065`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.915321331644165*^9, 3.9154104142425575`*^9, 
  3.9154149274291687`*^9, 3.915622524168823*^9, 3.9156229072370014`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"289a25de-0313-4220-820b-5f61c4d95940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"figup", ",", "figdown"}], "]"}]], "Code",
 CellChangeTimes->{3.915321343550392*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8d554cca-6832-41b7-ae43-c1ac28fe90c5"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{}, {}, {}, {}, {}, {}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
Pl3JjlmIjvYy1pXC/wdcElTm
           "]]},
         Annotation[#, "Charting`Private`Tag#6"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
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
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
           "]]},
         Annotation[#, "Charting`Private`Tag#7"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1:eJxNmns8VF8b9mfGOKTIT0KSSpIk5+RQ7pWklESERCiVQqmkqIQkSXJKheSU
iESJilQSJeckITF7k1POx2HGu/bzPr/nffujPtdnZvZes/a9rvt73dPKQ6f2
HmHQaLR4/Bf1r4NUnUpB9w84+p8/XZDimpQj/E8TxDLXK9XZdYF3rqUrj3sT
xF+RkYgy6gLTSX75qc9N8Crowd5RlS5YtbmwvV/uJxioFnaOSHbBZMDJuA6/
n+B5MPBRBL0LXKSkfRpbf0Lrl2HLup5O2ORYo/lVuxm6Z+ufPKvrBNG0gMF3
0c2QrVCxU/t1J3T3bXiSN9QMKOTHDsvETihS63HOMGkBS8bVFRLXOyHyfPzy
hPQWOFlzxdzHvRPoC3dyI5mt4OPz42igRSc0WXJeXXdsBa5/VbSaTidkxuac
vVTUCo0FKSf8ZTrBv/2w8mnJX2D5/OXKszydYCUv0XPE8xfYfTTNmP5DQtnb
0nLb2l8Q0DwTo1ZJQizPhYA9Sm2w87X0OoEcEk4Zr9tsGNwGHn7PQ/2jSNh2
u21Sm2yDEsHLdbFeJEh9j3i+Hv2GBAVZ+X37SQhxgwjZ+N/gkUqfyNEjweH5
yC6Jqd8gVcVMzlxGwtLZvTx8iu1AFktYb50jgPkwy5Fm0w6G3PtbLrUTMLiF
r5h9rR2cvcTfWnwgoJl0WDr+oh2en9547HMSAZE5+SGDHe0wWx4Y3uxPwCUL
ke6ehR1QNpklEOJEwLGJ49vIzR0gdyHNsBYRsPf+x+Q21w5wcbAJeLmcgE2b
ltF+3u+A2fMFEVpcFozxe576Vt4BraUzG81aWfD7SVVl1XgHjEQ0ivC8YUHF
7jWKn1exQMwz3trkLgvyhvyul5izIIxZsEXFkwUJUc1k0RUWpP8u/5JpxgIr
BzXLgqcsKLKZXFSsxALEuJmb28KCZENFkaMCLFB6RApnzSNAxmBrfPNMB4jv
0HdL20hALIc384ogC2h9d78kHsGa7yi9V5IFfbeG5eOiCMipj+peuoYFKft3
xNzB+2JzmM6W2oDXMZs0enuQgEB9WNtlwIILD2fMQvA+n5i3VTkAr+eQwb7s
wF0khDJi3g3as2B3Z/b8K94kFBUf2qPhygLeXN6L3o9JEHkpOGB8gQVDFg5N
Z7+TkGjVW6R7jQUtE682nMR1Y3YmsZcZyYLS+6JRLmqdkIWMUp4lsCB7k9vQ
IYdOGEkRvaaRyYJjAh8d7G91wtTf+lX3C1hglin91rqwE7x4v0n8/siCzaZe
UnvxuXi/+Z8igVoWyA/XnDeR6AKTlvJVS/H+i0av/W60rQu0a+xqRbpZMKt1
VX3L2S4ouciZGxjF+89oTtJL6oL6DPfCgjkWPHykMbehpgsS9e21XecTELzj
lp0qpwvS9L55zpcgwLOv67Xiuj+QUxjSGCdLwMEwJLF6/x8o0q++LaVMgITt
3aDl1/9AlkWA+U0dAmicIWLJyz/gbBx+qc+QgL8Pd24RI/6Az96vF7eYEdBo
kJog/E83JNzx2Rh5gID3nZwZAeiG7i+myfVHCbjwH//ohhUhrwb5zxBwyDL7
Mye2GwI3GHC0LhP/9ZNucD7S6+wQTIB2rNPVkYlu0Dq4mOcKfs5y//GXHhBp
+HMmPoEAoXYx/T97e8BM4s/5FxkElGW6Pu3w64Es4YptZXm4Lkw/CbZm98Be
lkBowztcN8MyLo2tPSD+WHKwvQLXRfSFT7WCvcBdojbe952AUxvrZb9q90Kt
zbYv4/i8KfCsjfx0tBfavGcaZ/qI//pTL0SXu1jTJgng7Gg1eVPSC/KPR3bz
Msj/+lUvmF0KleMXIuFb2G3+ZzJ9IFdY8WGeJAk3bbu8Mkz6gFHw3XjeKhI8
OdCQ4tMHZxT+WTpfGftB4n21hPQ+EBD41CygQ8LOraNh9xr7gDnybZ+QIQma
XSb9kcx+mCKXX2PuIUHmRprxLfV+EL26KZKD/eX/+l0/BEz+HB5zJqFk0ko8
IKwfbHVSuzpPkfDkP/7XD7raemXffEiI2SxY59XbD/1hOreKrpH/9cO/4Hfe
NyohnATtrDcPXI3+QppNYopXHAmye8Rmjnj+BV3D0/TtaSQIjbjbOCb/BbJH
UWJeLgnT0eUvbWv/wj2Tlvb3hSSwNq5ctI/7F169O57jUPavfw6AaqXnue5a
EoLS6n4b2w4A3/N2rz0tJHj8x08HYGyZta9nJwm2/YGx+vkDUGHuIPVs4F9/
HQAftehFf3tJUFXX3qchOghZ0QVBZXUk/OGEla5Hg7ie+RIm80moT+xeqXBy
EAwORLOV40ko3mpwRTZ+EJQ2NRxI9yfhcVdcq3TFIJxpkhX2PUZC5I1xHYmp
QRB7nHqvajcJaYppDQKLhsDGf610qua//jwEF4JKKhZLk3C7ak6NZ8sQqEZI
s7WZ5H/9egi0GYI2y/8S4OOx/zbn5BBUvPwW/6uRAKtGZjn72hD24y3uQdin
vj7OHZ+MH4Ic9ERC/SkByPug3PiLIZhouO4/dJ+A/J3zLUYqhkBWUZbz/ToB
66Rf+Q92DIHWm2jmiBcBiX+dc/qnhqDorU6M1bF//X4YAssM1cT3EzAi91b8
j/wwuHRdX6Jh8q//D8PAPo3AMuz/reXinh2Ww7B3bKn/N61/+8EwtMWm3TmM
z7/y3MnmloBh6I+vk/ZZQ0By7dJ5P+8Pw+w536Jl2C8kkz9vbMwZhhWJuZ27
ZAgIO3vu6LfyYRCdNUqbJ00AY5vsndq2YVjw/GGq4dL/p0sXczMo3bvISXVP
7zCw3kw+8cSav+vh16rxYcjP9BPhwZ8fyGs7akIfgd4GRc1BrBuvLmN8XTAC
jHNialr4fu8etCQZS46AX0XZ2ybcvx65SW3+vGoEFF6kmjWsJCBUb3+TkcoI
NL93KF0tR8BZwXtnP+mOQOBsu261PAEHfjYKGxqNQOKJ2ZbPawnYOhqdXWI+
ApYTjxPE1xOgWPLNeIs9vl5bDCNXFZ//CNHOdy4jMJYf3HZPkwDVw+Z++p4j
4HyCHv5FG++HevjSt1dGYNbrWZfBZgLmaDX5ejdHoNZibIRuQECX1C2rNzEj
YFR9rJNnOwHVPV+HtZNHQJE+2G+In0/+K8FbBU9HIP6XrfxHcwLirxsraL0e
gfpgv/bL1tivrII/5pWOQP9ZkRp3ewLcPIwOa9SOwKHDcvGRhwmwhGvc3JYR
aCqrvdd1nABd4dL7qn9GIOj9c1M3DwL2tzM2PBsZgYRCzZyl53G9PdtSu547
AjT+zNfj2H8Vvsydypo3CgaSvKzhQAJE7unPX7d4FLy6Yn8uCSVg4ujltIwV
o1Df2rPXBPtx24aiLQpKo2BUbPc9JRb7L3OmNW3jKPgWHKeLJRPw9JvOhdVb
R4FtHFp7B/vznb+TEqmmo2DWd2NoTS4Bl4u0XsjajsJBd519Za+wP4edM006
Mgomvtp8bu8JCLDP61l+ehSKQw7fFv9MwHGl0cCES6OQf+e61LsaAsyNcuWW
BY+CS2DPlkM/cL9YPPQuLmoU7PZJuLHbCFhBKh+QejgKXW3yZgFdBPC9cJ+4
92QUEqxeBUzj8zngnxUhkT8KkhuCU83GcX3FnVCL+TAKijWqZ2/MElB8IqNS
rAprbnTNXR4SHul0H4tqGgX56aEcb0ESPs5fwyNKjoLyW0dy1T/YX5uPJIQP
joLUw/ShcAkSIjJSdRbOjEKFh6bya8wdPh8P/bzFNwaV6wP5o7D/H4pM8lwg
OgYyP53TJNaSsMOpfeHNZWMgsDC5GnA/UFVdnjlv7RiYaOx/QdMgQXLO3ihY
cwxSMy4XW20kgbZEuosPjQH7sm2iNubJ7j+2/td2jYEWcOuT9Umoyb8vzbQe
A1NVtdroLST0BzcVBBwaA69ZCQEG7iffrCUs6CfHIPhM5MWxbZh7Tn8fueI9
BqV59ZKu20lIQWJh3MAx6HUU3+y8A/PrQou1l8PHwJnr5TuB9Zm2iNKZuDE4
OpNhycHa9mmtg8/jMUCr8xtSsUaXFs5MPR+DscJ9l7rx9dbGVMWeLx6DRlH7
X/VGmKuOLNCa+IK/38YbWxzx/ZU37qrz/D4G+RoddY+2kiDOF+I22j4Ge0+s
UXuE1z/b8Jn/TP8YWHEOBzoDCZ0DQY+HJvH6+d9W9m4iofLtJ4NTPONgE97r
rK9LwotQZttf4XFwLJe2PoL3K/bAVm83qXEoi7WOccZ+HqAYINa3ehx2Kkx3
gxrmQkOUd1xtHLKFFhOz60kwX3RlT/emcXgvm+DxUJEEHdbb3qM7xiFcZnhY
cQ0J1nmz1zotxkFgp73nE/w89a/qrXR2wO+33y8uuIIE+b0+RawT+PrG/PWH
cL8QdtO2c/Iah8bzmzbkYB4Y1z0/+dt/HEyfF+0YEyOhdV5+5MFb4xBg9klR
DddTadPY+l/3xkHy3QOGC+aJzMcaXw6kjoPCiFxP7DwSoj8MuzQ/Gwdhn5bh
r7y4vsJVmfsLx8HvbUnADB3Xl8Ophz/K8PrOfTu4jkuAn1q2rlX9OOwQmRKy
ZxNwlPb3e8OvcbB7H+EUMYH5SyrznEXPOJi96zWpGCFAq6dHpH5sHFzcCrx4
MUfLvFLIMqNNANeauLUD8xDv9WPba+ZPgHPL6dbQP5gH96WxdktMQHJOVfFP
goAGuc7LlbITEKjuJqmMeapIP2XZLuUJsGTvunqjlYBUIdarLzoTkPr+SMnf
JgI+/F5huWPbBMRolFzYj3ksPdthsMwMa3vzspo6AsIvJ4Rss5uA8HKjuT3V
mCfv2imWHpsAsRP7nH9gnnM8GvfJ4OwEVOB4ebycgO0bmh0/+E7AoU9GWfyl
uJ8xl8xCyATIMN8EPMP+Iv7N+m7xnQnIaQhJOvSWAG7/4o2bkyagrD2ge8Ub
7NeFlvWFWROg+6a4qjefgMqQKHfdVxMQtNpm5t0L3L/s6gVef5yAMT2en0k5
BNSv+yd1Y80EeMzr2B2G+/lr9h7Ib56AWUFmedATApLEhH9rdk1Aqet1y5uP
CbhBmPi8GJ4Aw6dF8vGpBHg8v7lYnTMBF0TdCl7hPGftX5GTIzAJZkkt5R2Y
d8FsnomK2CTEeh6QlYgnYM2J8r6nyychXuHWBxvMC8I6fNeV1k2CEd+V9rQY
7Nf822QztbDOs+bSoglY1Hz17VqDSXieQZQdiyCAnV5ik757Enq1Ft1vDiOA
VeI3Jb9/EgSq3Bz2Y7+viHgX9ch5EiYKkl6SNwjIdeQqy3lMws71e1UvYR65
r7K5IvniJMgtlViz8hquL+7FIyuvY62pTasLIMCl6g0tMXISFlhdrQr1I8Ds
z4VEmYRJKFp4JtXSl4CN+QV6DzImwao+5JTCJdy/gical76chPSXPvf4fXAe
td5wJvb9JBRr5K4bxf1qlbyn0JLKSdC8ss6+9xwBC5D607s/JkH3vVNr/1kC
RoVP7xAnJsFO5W4C+zTOx7+eEdEDk+DYW1y9CPe/kqwB30XsSfAVzy7ceJKA
jIvrpSJ5p2Cs/mCYixsBEXf6Xov8MwWxeasDUk4Q4O2suO+29BRo/Rz/0O2C
60vj+JCQwhRUcPgatDFv+fKm3wzVmAJ2xFZ0B+fSIw1d8vNhCpSIW8encT82
SVldcmPnFCiYqJ1wPUTAhreEk4DVFAgXR33sdCRAOlSWE+Q0BTbsGFtXBwJ4
Djjd43WfgvwTnrbTuL/3rU3UCLyAdblcUIQdrq+ptmpG4BQY2uZLauJ89Ub0
wUn/21PgYSdw4jfmveSOlnm0uCmIORh3644NASE5Uo9806ZAXO2JmCXmh8cB
+xEndwqYX3f9WmKFec38XsvFt1OACp3v9VoS4OVqdZH9eQrSLfz5Sy1wHtS9
I+7dMAVhvT92pu0lYNu8htzJ33j9wwMmEZhP1jeJ7vbqm4Jqq5nyQJz/xB6b
d49NTIHXp7I4vz0E5sTwq2cZ01CS+Kwq0JQA8rbpqhGhaeD6502G78b8e/BW
sceSaTCK1ep7hPmnW7Vy/6DcNCQf/eX9YRcBtXOC4+6q0/BeRMG8cyfmo2rj
8H69aWg/79cpgvXDbn5V1+3TkGcglL/VmICgAqOvPXunwbJzUsh3BwEng64d
dTk4DTvj5Le+x7y1b18p/c9xfP2EC08FsN4kx/PgyLlpSBdIzrMxImC1/odN
pN80FK+NKni2DedLIVrTodBpCB74tVAI69EW/bMdd6fhzEqWwmmcf//Jvizs
mDINAzfshFq3EjB9qSijLXsatAVtI3dj3b5rxtD+zTQYpK/wLsP89+XIa7Ll
0zTE2x1mGGKdozl1xbZuGvf1DN+yLQTc5dm49GfrNJQGeR0zw9q3/ly+dfc0
HGrQUSEwrx9NyjNvHJ2G2IZnU15YmxaeGbacmwb5dMOgRVhvCMkN/SbIxvzg
siofcH3tH1qzV5wNLG3PFHusddepfKxdyQbRCWGN+VjLst0P7lnPBq6FY0Gx
PgGCYkrcKm02zu+qT85jPcw6cd/EkA3ZMm0iWlj/zM3Q/LqHDUqDLn3TmG/f
+3XXGB9gQ/0JFfiIdfqeNa6fj7LhXsP0tQisb8sc5dt+hg0MV3OvI1if15ZL
+3SZDZrxS2L1sT7If3iL4Q02aMv+EV+G9aWfSa0l0Wy4xA+naVg7p7ef35LI
hjBDuNaziYCd55cvep/JBr9aruoPrDUifj3XL2CDmavNgQqspRylTd+WsMHW
5ffHEqwZKgd69KrZ0Nu+vf7D/6fVL/dUUrqbcz/wzU82mGbvTKDeX1fZtFyn
E++HmKwedb03XTHvCobYIFbmnUXdL/Hld1utWTZ41S7WpdYTHCg2kcc/A6Up
7a7UelOtLCI0Fs1AgsrCWWmsQ1dHKj2XmYEp7z+ZgPU5MKtUVZwBpRi3IGo/
7IRvH3u2YQbkhTZfpPbL8FcVQ3nLDDimnNGk9lMpa0FClskMfv6SK9lYi17c
pbPOZgYm3lyZTz0PtnFIQ8bhGRCx/5tHPa+Owzs8FU7NQFHeUjvqeX5Wv77w
sc8MOC9YobsAP+8uZtmT1UEzuD+cP3UQ6+pvTKPUCLyezfLRVL28TN7aIfsA
X/9KZSNVTwlFdP+k9Jn/1VvgTSS9Im8GBLeIF7Zj7WZ7pSDh3QzQjl/dRNWr
xdrivcu+zkCW5s5FVD3rTs3+jWucgZBHpzdT9b5KtPCWFGsGAq6H/P2EtWDH
tML9vzNwRmlyqRk+LyPPtEslpmfg+eM92tR5Egk47xDDnIXPnruWX8DnbdIs
ny0mMgt75yk3L8DnsW35+J2opbNQ2x54iTqv5TovNoiumYW8Eq1m6jxnC4zU
hqvPQraN0DfqvEf/UHVbqD8Lhm0DRe+wvpR2ij/MeBZ8RRbJUH7hfC47ecG+
WVAu/eK/HfuJyW03g5uOsyCYEjdO+Y3mwcxf89xmoVdvqxPlR9Lrey8En8ea
ccWT8ivtOQUx/qv48/JCiZSfrag+9uxa2Cy0iygLRWC/E+hevYcZi/U/Wq8o
PxzMd+4NeDQLrfUDfpRfNl5LuUbPnQXmpkwO5afFlqwVfkWz4MkVV6f8Nm3V
yiJu+Swg8585lB/fGnGwvvxtFrRCS2c/Yr8+t0BmcqZtFp4HrEyh/NyuxS7S
p3cWdHNmRKWw3/s8jVs/PY7vv4vdZoH7gdOl5s/n6Rxgu348Q/WLHbuWOE8s
4AA3epcD1U9Uj/zgOSfJAf0HvpEauN9Iaoo/HF3FARdl+X6qH9F49umeUcHv
5xPfR/WrP3VR34d0OXAiN3g51c+qE+s9ThlxQOCDllwX7nf5b8JFBsw5oBl0
0d4d98MHN2oy3ew5YCWc4U31y2s2wtv7XDiQfeF2UxTup8mKu1nHPTkwpiBL
Uv325vTNy91XOBCsosSi+vGZzxWSx25ygHllKPgx7te2rOBXnTEcKFWMzzqB
+/mW3HIL52QOpG/58pXq92v9+AZZTznge2Dba4oHRPZsC3F6zYGJladeU7ww
tSxwdXspB04++kf0L+aJ9o0Gnw7WcsBj5aIlfZg3yvj8HX+1cOC5zmQ/xSPZ
39/NHPjDATG/Zh4BzCuVj7kxzSMcqI5JXULxTJ7XZvX9XLy+rEUPKd6JD5+p
+zGPC8VFgRq3MA8FOOi6Wy3mQuI5Z4l6zEsnlL0Fvq/g/o+nzDkFKRZKXPAV
ZRyleEu7ckK/fiMXVhBFnygeWxG3odlsKxcqex1CKF4TeDnqXWPK/R/PDV1V
X2xqywU3IYNKivcWWJ3OqTzChTCz6SmKB0flcnbtOs0Fnz5l8ceYF1tHB7q+
XOLCznqrJIonS4WeBu0I5sIOmdUMijczW/tWlkdxQeoSnzcL82hkpuLbbQ+5
YJvUWUnxqo/PcZvSJ1x48oacT/HsIeP0UYN8LmhpGDpQvLvz8NGoDx+48F5h
cpjiYXX1R8qoigtpA+FXKV5eQie/FDdxYUA/TScZ87TWN9kjm0ku4O6WSPH2
smQnWtEgF577Np2neJx5OjFOd4YLlkvKflG83h9yUO813xwUhS0vp3i+Yf+D
xo2ic//j/SKF1tP5y+ZAqT3Gi8oDKZNSQhvWzsGYtEcHlRdulu1Pf6E5B/r7
dh1ownnibLvEDnU0B1pjnNOmOG/YPrMicnbNgWq4Kbsa5xED3zu+KtZzMGSk
utwW5xUHs4Yl2YfmoEStP4vKM0bLF71UOonfb7K1PQTnHRWdOstM7zkw3V3E
Wo/zkISAyNDaa3MgdiHkC5WXuI2mN9PD5/B5taqk8lTXo1vya+LnYMR+7R5j
nLeqPCs/PHo89788lrd1vr3ciznoGgvp+ILzWrz9l9nk4jlQv+NlTuW5QCWB
eysr8P2qVKKpvJfENdJI/D4HgRNyt6k8GFx1rVqmA7++b/WbWZwXPeJLjz/o
n/tfnrTJD5gnPTUHzg1qxVTeTCxx3FtFp6HENwfhOM6jYoq0xFB+GjrRGvdb
FefV6xEP/+4SoiE+8aWmVJ6dmdLXm7+IhrzWmDRSeXeAV+ZmhSQNJTzcPELl
4UPub5tuyNBQeo/K13k4Lzc22Mkby9FQq5Pm42Scpzs3z54VUKShQPKfWCWc
t/c/ivtQrkJDla3qMVQer1ygt/D6BhpqGz/mzcF5/f0SKQcjPRpqdtzURuV5
Tf/XWbxbaCiPOFJH5f30bht2qRENbdqvU0XNA6TNprYHmtCQXyHvOWpecLvg
7p2te2motOdLEjVPuFrq1cmwoaHw3x77qXnD5DpxjRJ7GjJxr4ig5hGuUS/9
/A/TUNiOvubUrTh/z1pWo+M09IRf5aTTNvx9D48tpZ2ioR2xNzRqjUjo8Pjm
+s4Ta9HQeGoesq/pzGtfHxpqkFIze7SDhM8gyq/vR0Nnxg9HzWK96XGuJeca
Dcmy2ogerHOEzZOLbtKQZ/xsJDWPkfMaGrwYQUP/qV98PcmrNaB3l4ZMw6+l
UfOc0N6Tt9jxNOQB7f50QxJiLYRbXifTkFIJ60kEXr9w4VMF73QaEhQzPZim
T0KA7G4v7WwaivFQL6TmSV4qSmWTL2ioRIqZQc2bemK+Lip4TUNM68iHdA0S
7LknnLze0RDXUiiDmlfVHhF8tuETDYk4OG6QWkuCYVXG7FgFDWUXcaSpeZdO
c7BJXi0NDbRJvHq1jISsLQqxZxtp6JDezj5qXrYio/yPeisNGamFqMjhelIR
PbZhpIOGdv65IXBRkIRkb76ruX9wvT34qXiPhwTxjke1Hn9pSH3Bi3XBswTM
HwhcoTqKn1+beSA1z/PdJ3dycIqG7CZ5Wmf+Yr4o+liYzaWhCvfEI9Q88Ijc
4XknmXSUMHagnJoX/rzJsF4vSEehI5VfnX7g83avI61/IR2p3w2T/FBDAKL5
j2UupqMdZcad1Dwy79gKA9eldMQlddyoeeXH2ne3FVfSEXt5v1X5K+xf2g6/
euTpaOeAkrlCLgHrtumvz1DCr/93Hvow65ePizp+XfQ3KZqM+U7s8uc12nTU
/TTiNjVPDbooLf5nMx0JBHie2h2FeY9VeDhtKx3ds24fFsZ+777zQO4RYzrK
+/2hn5rXHrLWpa/eQ0eSMzIbxy4T8L34pylpia+/+qeXNO5X5Brv+BRbOipl
kZtccf+zuS3Ze8iRjuLJjx+pefHXiYKNskfx9w+DLGqe/I7n7vUOVzpSsFqW
Ss2b1V21vieepiMDs8191Dw6rf67rON5OqJl2o9Q82op3XMeyy/T0b/z7LAk
seK2ADo6NPc5n4l5KyB7VCghmI4SXZPsqHn4xOKoA/ZhdFQ//9TbrZhvj19W
z5COpqN8P9G7FdoEXOiqm2i5T0fOxScY1Ly9f/dpw7iHdNRw3ZGVo4rz+EuR
SNtHdKT6uWc9Na+3LBnsWJKJ98f94aYvazH/rr2t8jOHjsriVsdQ8369COXL
9/LpyCRYuob6PeDZVFWFdREdoWOjed9WYj51dJeUKKEjqbcJTdTvCRLuJi6N
5fjzkfx21O8NIQ19L+9U0RHjhve9AWns13o3efZ9oyORuUW1DKyFHimai/2k
o03CN09Qv2f4LahI+NZGRxcuzS3c9v9pNvvpb+r3D6+AHZv29tKR/jFpTV78
eZrF9R+141ib2/fsxPcLXlV2Zg+dgVbIXXeQliXgyn1DkeoFDJS/0W3JhTX4
+blezTSRZCCm8TPtQ8o4D3bQjb+uYiC249SCOi3Mk7mINFZhoEYnS9dSzOsO
AVeufNZloOcBxRdU8POxmuJIbzdiIBPSafVCzHvKFZtefTJnoOjIF717MW/l
x160MLRnIBdWkuSAFwFPRdhDJS74+vofTtRhHtHq0A7d4slAHj8PZPRhXlCy
Llj7/goDKW7zhfW4n79cM1Gqf5OBEk34xvw+YF6d1nR8G8NA6eU1GU2NuD+d
esHRS2YgyWizu5J/qXnOyL03TxnoM9/5BZpMEu6IqGnqvGage+cVTERwvwgN
elZXUIr346GRyAPs5842A25atQykIBMnVL6bBNtqN8GXLQxk5PFM+MIxEoiE
zEcafxiodNjierI/CW6netHzEQaa9Z18phCP+0+nS5sqF6/ng5fCcD4JegWP
vZ/N40GhXU1Z7+tIKL3eJaa8mAc5X25e1NtLwhuO8/OsFTzIwCrh19MBEgyq
U3avU+JBZxwk2ac7SdA2lO3L2MiDfHSEqkxaSPgg5hSksJUH2W3cyUPWYv/t
erjysSkPkqmSZx8oIyHcTubdalse1H3k9T+FhSQsWW9vm3qEB6XuvLiCNxf7
HSduXPY0D3qzLfnzljQS7p2Vikq6xIN6Nz68dCaOhNPb9iuvCOZBugeKVO6H
k3Cs8MfXhCgeVLtsB//rayQM3RQ/tuwhD3JLdB+t9iHhgt0+RvwTHnRySFGE
dYqEU/XfHkrl8yDyemD1oDMJ21NF9e5/4EFWh/Rcp/djP/c0b5So4kF8Dq9t
uaYklPXWnI1p4kGJazQkqd8P9hQKL1xM8iDpOY9lTB0SjNRuZUUN8iD9rRPG
/LgfVNMrt4vO8CDm5O1yJvb/tG+CRDgfE4nwp8nzYB54YHzDb6EoE3GPiAQw
ME/IS31eGraMiRrDvTJpDBKye/kKFqxlItz9utmYZ1Idr1ne1GQi6dY/BhOY
h3zVSwfnISZyjFi2agTzlGe6wa3gXUwkVZ0hS2Ie41zwV+C3ZqJs6bP0Vsxz
QcbvP147xETJhR9Sat7h/PdO34l5koki8cff52H/iLg8G+DNRAbtDcbZ2J9/
ORXdpV9jotaTEg0xmHe//dDd4BfORC587sbe2I/t0r1ruXFMVPbylMKBYAL2
yky5X37MRBXRNwXUsP+2DGjNm33ORM3uEzcZZ3C/eH8u1acYv3+px+fKowQ8
0RrbMv2FiWo3118OxflKnV/j1/nvTLRg16KVejj/Ff04fWGinYku+Dk1deL8
+3z30OJz/Uwk7tQwd1UH+9FyldzRSSZitG3KW4TPv/+dp6ZneHhRdrE17Q72
C8Gj/T1Dwrwo59XCTF4JzOta666dkuJFQVU0Cef5BNzIypAdWM2LFN6n38yd
Y8Eh3+63bmq8yCuZR7xnlAW9pmv2923iRb7KaS2C3SxoL300cXwHLzq6cEJm
cSsLXO6QEd0WvMjZnTbGU8sCx/mHVY458CIGvXjZz48s6G5Jqug8wYsMd3pX
Rxaw4MPT9iPOXrzoeeDT9+szWVCwyoGH8OdFxecDYp8msACNPUhwusWL2G3/
tHAjWPC5tFWn/R4vumdnu13zGguKdQ/8OJjKixyru2UML7Dg3oLYM7+e8SKD
zXrd61xZEBYgKWJXyItMCNWZHnsWSFhYZzaX8SL9pBrlS2YseLgqxmh/PS8S
4IiKdhqwIOa+GPnjFy8asknTF9vAgpOuFlesenjRpmrfgcVrWDCpFyn1fQyv
f3SlHEuSBX9zRV5Z0PiQZ+TgTm9BFvbvPRb18/nQyM+a+IaZDnCbqhoyk+BD
LtjOLwmwYPzzgtAaWT7UfDX68zclFlTH7lpjqsyH3pjV2nzA6ykVqSit1OFD
buEL4ww9WWDSIeC4axsfmpo1N3O6y4LvudtnvpjxIWeLGq7EGxZUrim7t8OO
DzHWL33kjPc/dZqpWX6MDxmF/U4y5rIg7tTVum1n8f0cvW58wf1LDpW4lfry
IVL0Yyc1P8wSoQtsDeFDDevs0+874XwddOXRhzt8KNTHNO6vPwEXbYoRSuJD
6WprrVtwnmOu5bQUZ/Ehvva60KPYv9kJF703v+JDyqV1I7fxeQs49Uas6CMf
suMUiFvNEeDdqf1ct4YPRc/XLXuD+Y6Rf37362b8/VaucyvFPNl8Pb97Yxcf
qhc0Yh6j/IWjGZQ/jO8XVa6c5UX599mVGzh8yMzk0+HIKBJYCc+LXgjwI4+V
dbOSOSQ0ianZqovxI0bMVgWDShJyu06N5yznR3ItotLzuzHf2w1EqqzjRw3u
nOdXeTpBdf165WwtfvRk3vYNETKd8Jrj+kXJgB95fny0ZItOJzw723s0czc/
cttMl4626ITgbWsZivv5kdaxsIkb7p0gIu7yIN2ZH0nbumWtud4JfKFdums8
+JGCResqp8ROuG23uvHRRX6kfxCJw+tOCKpPOSt3nR/lNPAdL67rBOEUlnBK
JD+SJcwVO3o6octz5ZOVCfwoQLRXNIXeBa29D7cnZvCjBcE6jXOSXXC0sI0l
85IftQ7f6KGpdsHAzWW+D97j7zelHpVo1AWd9Pil0pX8qPHwLfTLrgtsmLvP
LK/jR//+f83/A4T6v08=
           "]]},
         Annotation[#, "Charting`Private`Tag#8"]& ], 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
nzU=
           "]], LineBox[CompressedData["
1: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
KcD//c/8Ayu6GxY=
           "]]},
         Annotation[#, "Charting`Private`Tag#9"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
           Annotation[{
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
Pl3JjlmIjvYy1pXC/wdcElTm
              "]]}, "Charting`Private`Tag#6"], 
           Annotation[{
             Hue[0.08640786499873876, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
5x/PAg3GzGwobiQixFjrfn52oA0IrwWfXcXukbXk5QNznm0Q21V24kIYCXwN
inzEc9vARcaL+3Q/CbJXpD73zbSt7TcZQr2l9Y3U2yGblZZ0ENsHJ0FDYV23
9rX9JwORa3NGVkY7XAxHW2QsWwFX1sjmN9y+dh5aQVvioHquXAe8u5GUwb+R
AvTp19917DvAK9P8BpszBWyDC2Y2J3bAyVmuXXOVFOg5qf1pN60Ddh7Kpw9J
U8H79+Rtj02dMOt38w3Dlwqy5KRH00ada+eHCmqjz1Z+Pe4EbdsGtRpNGpjq
ToQG5HWunSca1EZW2MSNdULfoPrn7DEadt4ayA9lutbOVxukRWbcjbHsgui7
cTviU9vA9uEe7fbQLmDZcHwlmr0dxHbHb1Yu6gKK+XLuE9t2EBjrTXo71gVf
YjPcvAvaIXjKROmFAB0e0a8o3RLpgCnRzSuOsnQ4u2tLv717BwTWeXcWAR3K
fxMqrBo7oJz95Na0s/S189kJQTEHK2Wc6eBiuOeQXlAnZBFnAhUf09fOayfY
yd9qK4+hgygpKksRdcH1THz11Fc6BDtBlFRcF6R73G3NxdPBJmvCaMtcFyQf
FDq2uZUO25ZOs3HK04FPUvITzyAd2BPSbHEWdMDnqa57s0KHUV3OwoUAOiSf
W8fRsJEBtB6bbdPf6aCpmvsjXpoB0f8573QYE9JcENJggLeZQF//BgYYe3gE
6Bsy1s4/A/DOlbFDVgw4/bo0ufMGAxQW5RstnRhr94EBnkMnhdx9GDDF5e7S
UsEA0xvbM1A4A7o+19XWTTNgbrPblYJ4BlSf2C1fufMPXFYPh5F0BmSP+T7B
n/oDvEG9YaRCBsQ/o/UUPPwDBjuCHHzqGWv35w/Ie+rZtXcwALGGZGa2/YFA
aX61hSHG2n3qhgnhkQ/vuxmw2UDH6YNGN8S/eHP0Pubv/+5XN4gabXelxjBg
MGx815tn3XBZtZiDepsB7ywNXr4o6QapfLFiJ2MGhC8lTUaMdoN25qFrr2Sw
dSUsmgaL90Alz6sH57B8Xj58Jt3fqAdGRo8IfCXT4cTf9HUPvXogSFOOPyad
DhyZHPe9PvaA2A7FepFA+tr97AE1m0G3fRfo0DaTq36T7S/8+TYg26lKX7uv
f8FYW0xtFy8d0rWdxi7bYPbZP2H8xV3gyF1qcyHsLwh1Dj/jvNEFpl/Efp/L
/wvEpBq/XcJdcOjkHdHT/X/B4vt7r7DCTtg13nDXeEsvVPo+rVF1xO7HczmS
/tFe4NscY7NlQycs7X+souvWC/RNQfI6OR1r970XbAd/nPhm3QEJ71VX1Rt6
IWbTiPsN1g4I+s/97wXlgml+j4/t4D7Y+0t+zz+gr6qOdhj9Fw/+gZhc4cnU
0TbYYvUqcMeTfzCUPn2oKboNcMtj3Vt//IOr3H1aduptMJxwXFeo+x+EZn3M
utxKA/LhlHj+jX1gvTs/r8uTBsV/lxe5oQ966I4vu7fSwPM/+NEHoQoy6x3y
qHDZPL1yObYP4lrtGl5aUdfwpA8q19nnOi1QQDP20uOJmT6QKO3i/PeaAtL/
wZd+yL4hICF1gALr6UI6/073w9CZD5GClFYo/3LjK8O3H6yVmjZQ77RCxsky
3vb0fmD3yOS8L4y9L+Pbr5Lb+6FSpZ2dO5sM/s89yxp5B+C5M+VtyGkyuGg0
S9VoDoDskQwOkXESyLLJRZc5DEC2CK9gXgRpDZ8GYInj2hVPJRIsG7Qb5+EH
IEbrTJdHHXENrwbAf7+/WbYTEVrCI7i+bR8EZcLDKQU+IoRY9d75ZDwIaGUy
Y3daC7gvA/HdvUHItTvj/8a4BWwSX++LTx0Egk1ac/BwMxw/MhkeQx4EWfbb
T3dGNINar/FQNPsQ+D4iZ93Y1wzbn34wDFMZAu8HuonOxKY1vBsC03OZreDZ
BPjZs5v9wjHbmqrEKt4En/+Df0NQ260cU4RvhJeHeJvuDAyBwYeKrpBrjWt4
OAyUjWxq3hsbQTMt7+0N/WEottvPq+vRAFImQov27pjNRtXZVV0P6yecLWyT
h8E34oF0nmQ9zD+v+GHVOAyaPdsYO7zr4I+G5KYzK8OQG1mq8ZBau4afI+B6
7M05Va1aCPzQ1GVoNQISCv6nJOJrwPU/eDoCjd/cptw5asBqyD9WJwfrX/7X
JNC1eg1fRyAjLK/euasKlFU0z6gKjoIAIev1kdNV8G85nKCIRoH7ffChDVWV
0JzYJyl7cxQaOWviZfQqofDI4YdScaMg4W8SGlFaAR9737SLVY+CwZ2K3+bH
KiD66fSBLXOYPwdqdn1DOXyQ/0Dk3jQGto1HjNdfKF/D5zEwKLGbGh4pg4i6
1X1sumOAm80gDQeUreH1GCgnpYWyS5XBPVfLiOWbWH+u6nHVUgKcJbNXLASM
QaR3NTnhGgFqPmZOz8ZhtnJSwU1hAiCvi9LT3zF/1V2/35WXQs7xdWYT1Zi9
h/W5s08p7BHLfTTKGAO63JRC/YFSSBy2yxiaG4O+uNyH1EX8Gt6PA+Xj5Kbn
pXiYkP69+d+ucTAYt9ssE4Vfw/9xyMj+YfbVDg/tFZvdGebjMLZBDk0ewq+9
B+Mg4J79WUYcD0qrN2ltfuMgS6oROMKKh+TGbTzU1+OAFFGe9XAJiCRXapAz
xsHTVdHQvLMEwt08HFoqxsGUuL75PKkEWI9KvWjsxPxXme6/1Pz/7Tn9K+8u
Y/bApkvKJgPj0Ce2bqdESwlw9SbU1E2Pg8UpCbiAjR/J7nQwZpmAvpct5hzU
EiA/Fmet4ZsA2Z1BLprYfEVv25IMRSbAonyBwPO3BN47iR6q3DkBle7phqpY
fKEHLSn6eyfAV+y5cstMCbjxxriVaU0APWx50zwLHs5Tyfx6+phdT6EG8ePh
yOTzdPwpbLxO4MtwMTzI41sMdS9MgEgc2xKLAh4EowT/Fl2dgDGi+fI/bTwo
Xznlq+OOjU+K23XQBA8iKpHbfj+cgFyJ+uTFy3hYxTXkHAyZgCA8e4mMJx56
RcPO5r2cgNQLzrrl4Xio768Z10yegIzPzcS8D3jIyeUN+/l1Aq7qhK3uKcZD
3BND2f2/MP8iR3uXaHjwPxtUmk2YgGIXp3U8s3hwctW/otqIxZd6eMJfqBTM
IWAlsw3Lxzbum4aqpaDFT3it/G8CGjdLBjqalYIlnVX92wQ23k/tSpN7KaBv
uo2KK1g+LR27nr4qBdmqVZc0nkkIams+9SW/FARidNbtEZ4E13pxjTZ6Kcw4
+Hz4JDEJpmN342y5CNCpXqArqzAJlOtuozv3EjCetNj+QWMSKntqNklaEOBr
ywFPmSOTYPvT3+yUHwFeDM9uSTk5Cbhf21m+fyWAT8H+71JWk2CxfrkJaASI
Dfc4mWQ/CZqUNL0BrjLwu5Ddv+PWJKQGJz2u2V8G1xQm/eO9J0HEE2kXOZTB
Kf1MafGgSRj7t6hf8aoMNIXHit48m4S52fOq9KoykOhROi+agMXTTciaWioD
zu/OMzGfsflJnv279pXDyKO0qC05k6DsPzJ92aEcyG+u73tZgvkPdTr8I64c
Cq9/qhWqw+Z/8t2ov6Uc3h/oc3xGmYQ+1+eWAnwVULpuN5tgzyQYcJ4cUzha
AZ9p9vGRo5OARJQu7XxYAVGfUg5sWMTGq1vtZc2rgHull6lhnFPQ+Dujumi6
Ai5HJ7nzCU4B7gmniLFKJRhcom8IEZ8CkbcKPzpdKkFZeccXHrkpiLEsf7D8
tRJEVi/oB6lNge2B1usjQ5WA2yrWy4mmwLeo2jFWoQr6/lk9CjDC+m9bNMA5
V0FDzmsx9nNTQE97YiqZXgVDQZSffpexdkqh5/BoFbSc22LGcnMKcj9/TjBV
qYaCW6SJh16Yv9V/G055VMM7JBS+4j8Fc+TE6H+51RC8wUzOJ3IKuDVUJnYt
V8PtzijC4psp6NtUE9mqi+H110abex8xO09rI/+TGkDeGxbnsqbAlHtqqrW2
BuRe1sXeLZwCZdYw/SXBWhCw59s/U4XNl25Ucd+yFpQ0jJrcSVg+ZGwCbiTW
wmbOYKdJOpYP5WWpln+1sESs5Lo9hNlZ7FfC99bB35HAj2OzUyAgdXj87d06
qP1ddtiFbRr6+C3TForq4Hsoe+cw/zTQW6MT4rnrIfb8ES8nUazdb11p1Kl6
8JP3ExqUmQbNFbZnubH1cF0PZV/bNw0GUYfvcWK689SmhyZ92tNAsYyk+Sk2
wIE/vwccDKahstekeNvdBjiXvRTw12wafAPuveosbgCdxwcl7Wwwf7gTxy9z
NMKu0/cK/lyfBpzQA3ZLTKfyO2laX7ozDQLsxjxnTRphWuvubNejaYj5sThx
xr0R2nlyoi+GTYO/Wnrq2deNQKBMKXbETIOCVeYHk8JG+PJRtep8yjS4p5Gz
jnc3wvOS8au0b9Mg3TDto8ndBPcildkt86dBG8/PvVWxCS7buCS0lk+DWMtN
k8FTTeC7L13rbPM09HgQ2dLuNIEDbphE7MDG07t+Wb1pgpOiXzzM+qfB1uz0
8FRRE+zv7xdonpqGRrV7Mdd7mmB7rmyaKW4GDLYOV5ZyNwPHE8djDetmwFfa
hJNDsRmGz3z4c2LLDGjfDb4pgelmovRfn1qpGei5OLQq5NEMBTrvxI2UZiC0
waylJ6YZUtb/ya06MIPpyyTpJwXNUNIlYW5wdAYazzX7rXQ1Q2q6zWi56Qzo
sX9SN2RrgUif+OCj1th8VrRuu10t4PnKWp7gOAOu3RYb9A1bwNbhTdlhtxng
k5nxmbnRAsfUabYlD2ZgrH7wtUt4Cyixb12C4BmwK9bU/prRAptbzr0qfDED
ylsaI741t8DKkLDGoSTMX0mXqftUC/Tmmzfnp2HxbrDoXBAmQm3wM2etXCye
hHULhzSIMGDdzP2rdAY8Wf1+6FoQoXnPxhSNhhl4/jji7rInEX4tmEAObQba
H5n53X5NhCQh/i613hmII48HJfwiwtNu43vfx2dAhLFdxY9KBNesEGGV5Rkg
/GmvkZonwrlH1RkZ3LPg7nX6s7MICcCUx3iv0CyI7OmdvapBgt3XKwa/7piF
ONwjsvBZEvAf4HyisGcWFC6zMHzcSTDDdVTqy/5Z0BalHQ6KJsEm2uPfcodn
IVIf5iGDBAupeIvUE7OQIdPzOL6OBH/wvnO7LGchRQknnzpAguqoomfv7WbB
YvhaojUXGTJtV5SkXWchzS0oIm8nGV7vPVSdfH8WNMcvaTYAGXxX7ttLPpkF
64JrevfOk+FqXR4uMRqL//34iZo7ZDD955m4PR6b/52AakkUGTRyfh58+2kW
nGirXdZpZDAPmiFv+4H137iREFtOBu1z6rdji2ehR9Em4wGdDDt3ua/fWjsL
BvbBB7gXyMCHVL6+ap0FSvIxf8VNrTDJf8tgc/cseLqo+47vaQVax7fu5yOz
0D619O6kXivg00YebFqYBVvOf9761q3w6b6iaDTHHBBVRgkjbq0Q9WLwl8DG
OajMfSK3P6QVvOzkz0SIzYE5n4vV1uRWsFW9NrZedg7D10/H3+a2wgOO1JBQ
1TkYO1D1q6S+FeyJvbvWwRx4W6jLPeppBeN3Mvinx7H+x1Zs6fOtoP67+xL3
2TmQffn2Thc/BcRCpZYDL82Bmi7HzXs7KcB2/lIMh/McePYLc2RoUGBQLlHV
33MOKLHllgFGFGie66xn9cf8lzYqsNhQIE/w7c1HEXOAPHc/ELhNgWRGGw/u
zRzYCYs75PtTIDhD9P2DD3PwXK/gJd8rCnz0s0TLmdh6ufOVB1MpEH4qpu3+
7zkQ6Hvp6JJHgTs3zt5fqMTizV04G1lDgYtaLzZ7Eecgw3qy5UQ7BY7yEDNn
u+bAqfJpcfIQBRQpgifuDM5B5GaZscQlCgh9PNU3NTMHtp84LqnxUWHJI/Kx
G+s8SNiSLR23UaEn4uTOifXzENcwKKwhT4Wai2GFrlvnwVRbeP17TSr0Kdda
jkrPA/H8Ic5v+lRoXOWddlaeh9D7Ym/OmVMhp94wcujgPFCu/niVcIkKCX1c
yjeOzQPfcvEmv5tUCPypX9N/eh4s3m5IZ79PhZuBAQ5XL85DkN248u4nVDhz
hsDy7xoWDz9r8WA0FbSl2d7ae8xDTI8w3jCeCjI6Jdo9vvMw17nV+NgnKqxf
j6NcDsX6823yHP5Ohck2HTfGq3mgP71du6uQChvTffht382DbfGjh7hKKsx7
F3zqTJ8Htb90mXtNVKAbLepdyJuHpd1nlF7SqFBl/6unrWweCKyeN092UyFD
be6hVdM81LbekU4dpMIrNo1t1PZ56NHpNH07SYUHzR455/owf+8IZmqLVHBI
yj5FnpyH1PWHRBxZaXAy//a4+eo8xl8O1Onx0EA9ODO0hXcBLMoYw7830EDM
cmz36c0LYK1cfK5VmAZae/aWNkouYPlOyonaRgOpBeeLJooLQIx5/mVYgga8
QgordZoLsHTAy2RYhgbjf66/NtZbADtSfV2wPA2omZ/UakwWQOzylsRKJUzf
+/Y1GJ5fANQU/iBVhQapJrtvVDosgH858wLRIGK7A+ex2wtgvoFtp+kBGtzV
lP5Q5rMAubJEkw3aNLjIdUVX7+kC2Oacj3XXoYE3Nakd/3wB2sduWXsjGtil
0u/qJmLj9e3z5Q7T4PjdHZuKv2Dzh9Gb3Y7QQDWqI0vn5wLIGh2vs9Wjgait
2Mnf+AUImmXLH8Zs1r3n+w/WY+sjeNwQP/r/bfavlSzbMbtv+bV/HnUB1JLq
Ypn9m2opOw78XYDQmFc1Npid1/uy6OcYFm+RQfIdbL7EHySr/UsLULleqpwZ
T5C/0Ew21yJo617Ov4/Fm3LWLEp10yJkhGbtvIetJ1QmWiFrO2bvuZvBXK8H
mNYqyy/CVc5v9kZYPqz5Ixy/qS9CigbcZuZLr6OOVUl3EbiHOg2Y+VRI44tP
M14E3HjkD2a+Be8bHdhjsQj++mdymfuxYBhM/HRl8X/7xbhi4C7rsgiavYxP
Q9h+Vqo82fDx3iJY7y+PfI7tdy97+WeZwEUIFdk0wjwP9S3s+ilRmP05amch
dl5+JB9hSL1dBLv++EZ97DzFF7A8SkrF5r/U2OqAnTf/ECQmkY21h6Sd3Ied
Ryerhz/ji7B4v5bQ4rDzaiZXeFq8ZhFQgupe5nnWmlsafkNehOextPcm2Hnf
KZgfJvpnEZTXc9gx7wMvY1729fAiSIyodT/A7svEN03ClvlFkO50/8y8TwJ+
d21esi+BZwHtjRx232ZNcxaEBJYgV/c7H/M+du6YfvFs2xKkBHXvYd7XigPf
1QV3L4G3W0Qr8z6nc080RqosgcVk5jTzvj9vVXbaoLMEClGp72QwPPD+4MIV
brgEdMo0GweGF3Ye6cl8Z5YwPvaL/BjDE+MIp8MhtktA6VuteovhjdrFLx08
Tkv/wyMxxQHPoLtL/8MrzVVZIa7HS9C4HHI2BcMziXrHbwHhSyC9rvkGE++4
+2RM2GOXADdq4sLEw9EcuwG/99h4V/wNJl6SA94FsGQugXK5WlQShqeF5n8k
fAswu9d7kIm3H3ZKFqxULIE5j63QSQyPwyZszvm0LIGxjSQ5AsNrD77ts4ud
S6BXp/+WiefWbdbR9waWwFovKZCJ9/e+vlGcn8by0xhtxHwPLnnTKu+yLGM6
w1mZ+V4YGG21m+FbhkblH+/5sfdE2b6VzUMEax/Q7Vy5SAERtc0JkzuXgfj2
Wh7zPcKxndG6vXcZLDwjRJnv1b+mZ6QxrWXocbyzwxN7z+oTm11d9Jfh6nRB
Lh1773LyIgVGTi1Ddu5obzf2Hr592vDF6cIyDO2YUGW+lwEW/McGry6D5/S8
bjH2nibLn/hzzX35f+9tyHyIT9/DZXD1mdZjvse3K6tFHEOWoVhzkxJg77XV
n6Dcvy+xeB8fLxrH3nPdzAozu+RleD74Mov53sv5co7++boMY4Ob/E5gfEDA
5GjwpV+Yf3r+dSZfmBP3l6ETlkEowNySySfoGofLLjYur32fIUM55yPbjrZl
iGv6U++D8ZF0UtHi+X/Y+hODqUy+Uvtx5SVtYhkIis8SmHwm+84hFcuVZSgI
55THY3wnLnKxqZVnBUK3bnvN5EN+NlrOZ4VXQLmps88b40vXlby4SRIrQJB7
r8jkU6eWf74zU1iB9vNtMvkY39KsndFp1liBtNIz4RcxPibxRp1memQFECNr
zyeMr3H/mPRqOIm1v2cffofxubHHKsInrVag8suBSzoY3+M7eyuj1n4FiCb3
Wp9gfHBSOsPI6NYKeOdqsDzA+GL75EhvlfcKpC5oCTP5JGH910CDoBUQkz3y
isk3v7QPSlY8W4EpjSglV4yPRn+R/300YeV/fPXevWsWhM8rQF+8ufQI47OX
DVMnD+esgO1Uz3cm3z1+xeFZSckKOGkZH3XH+LCKynslVLcC1kl+yUy+vJWl
p6qQsgJ8ua1bjmB8en+LlP2hnhVQk4WTTL4tnnwJVzC6AkHRR2/NY3yc/Vbi
G63Flf/x9aHgiwd/ca5CYmdoLJPPEy3fkjUEV//H9wtk22/liK/C1Wccekw9
8G5WdL263Cp4D2UFMfVCSLll6ne11f/DP0xPuNG3GKigVSjQ9ha/hOkNq29n
uzOMVqES773dANMjhx+8eLD33CpIKxW64ujNYGNK3Jp+eRVMf1/cy9Qz+js2
/VC4uQo9yfvK/mB6Z++BJvMvXquQ5qVdzdRDW7gFxuQCsP43k4x3YHpphXwy
JDUSi0+5LYgT01O978N27Y5bBfY8TalyTG/VudeWvP+4CkGU5ZxrmB7LPrLu
gvT3VUhROVU+hum1uAtVS8mFq6Bs1SNvgek5fwXuGMlqLF6WzebfML2XtKKv
mkhahdDYPVZMPRhUF1C/nYGtX1LpuCimF13jCNfeDq0CX9sjnBamJy1y/HjE
5rD2T6qnmXozEW97uo4Fh7wz/pUz9aiQPC4xlAuHhh4tfjiD6dUnUQnDRutx
SM+mrJmpZxfndA6u24RDsp4e5ky9O8KxPaRaBIdSSsPeM/XwZefflKfbcei/
eplMtN5lKI1DuQPuq+2Ynv57aMmNWx6Hxk5F9otietvy/ZuSir04VPynVImp
x2v5Dm54oo5DFMODh7gxvV68VdRG/yDWP0VekKnn1R79SuPQxaGYtB2kCEzv
p/ZZLBD0ccgz+GhSAnc9iJnOHfM3xqHGV6E4Zr0g4uerF0dO45DEa/638Xfr
4DHhzl9WC8x/w2wYs94wu2ezKv4CDgVNPbpK/lcLN5798H10BYd8u1VuXk+s
hXtL5vXoGta+ZzLGy7IWRq5MbcO5YPYZCU5mvYPh2nKjyB2H6MWPxMi1NXCG
cvvXg3s4ZMA9+VngSQ1UgiCXji9mXxKJIOvWgPbHTPPlAByKnOZok1muhgz+
U8kFITh0NQm3wqzHSN8ZG70fheXvA3+EqUc1iDxugIOvsPyt1XNCB26GLcRh
+dhzWpNZ74k142/7lYxDlbmO9kLpVcCf/1XWKxWLTxJDDOcq8JM6cUczHcvH
i5wzcQpVcGevQvnsdxz6b72p/2XNpp+/cAhxqhYx61EXVq5fulOE+StHFe0u
ldBoz/tNvQyHTOldMcx6ll7dp6Wpamy9aoJtBdMVcIAWZJzdiOV3wY3KklcB
abqysW5kzN9avUziU8U/lXYccr2184Hs0QrYK+ioPsHA4vGWaN/IVwHJXpyP
M/9h+diseIlZj9vMeN/oOoxDGSV8rdlx5bBuxF9CeRJrN5d7YutQDg/OSN8c
ncOhRHYdC7l95TBRUJqfvoLlo+kC78xSGdhLX+G5yc6CbPH58cx6ITWE9Zwi
LwuSODGTXvaqDOpiGB+GNrCgDPnJQ8UOZYBwj6a+CGPtJvmKzHpktqPE4Rvb
WBDdf2sAs15Z2lgUIS/JgmJGeT4y65n7NW06+nexoMiRwhdZXwmw56iO4icF
FoT0V64y66EJaR33rqpg/Zc8fSQsCCAo5FO5W5MF/beeGnhfbPO/Qywo0fCU
+CUuAiz8yb/y4QgLSlUVSaDSS8H5+PlMe0Os3dhSm1mvvXxOi0XGhAUVh3O5
M+u5pELqyR5zzF7Vb2x2L4We3V5x76xYkMXpOGRnVgoWESIDl22x+JaFjjDr
xTUzPzWkHLD1lKmLBwiVQhHbqyeMGyxo7pQXnXsWDyo39pMSb2Hz79fcuEzD
w4dmkpTtXRYUpMLiI1+MB1EtD9cdPizo6ql5M2Y9OzxJqLDTjwWJvHd/QAjH
g1/65Pr4IBbUGF9DlPbEw4zws/MXwrH5QvhrFy7j4ZqPyiex59h8L+7DIRM8
ePY2zbS9xsajF7uY9fahE7f03iRg+fk1s4tVAQ+2PwSird5j892kXwsTw4M5
fpSx9QuWT4/rUyH8eKiUi9hLzcDW2yC3Z4EFDwejlHxicrB8hYluY34P+DZX
V32uANv/zyc7VYZLYKets8gWPBYPC0OU928JbHE2vkquwPa/zVdFq7MEgomD
P17UYevXyBZkp5bAysEQtjMtWHvK9xVrUgmsfy9/SoiKxctx8Rfze4YvX3V8
SycWz53fd5jfP/5rG4j3TNti9h0/A+3TAyzIlOjpbIONx5k9aW2cZkFjauLy
57H5gnaW3zZhYUWu0fen7LH4Hr7WE6jnY0VjLoL3TVjxYHHj8RdjEVYs/wlx
+8XxcJLBYlizkxUh+l8PTh08kDNRj+FeVqTpODBfaocHG7+HDyu1WJGtdfTD
Q1F4ODu3LHZMnxVxB1sQMkrxoFStnVt2ihWZXnqROL+Ih5zY+2Z6FzC7b3r3
+IFS+CqwMIa/yopizL+ZPfMphf0MzVBdd1bUSGIfqS0vBYVzP+WKH7IiCs5I
5Y0wAX7sniHohLAiXO6OjQ3XCBA2r2b7+yUr6pPvuOBYSgB/l+/LB5Mxf3+y
dmpKlQEfmojJ+4rFl39v/+7AMnghsE/twC8svpbeEbnRMggN/Nb0k8CKfLNu
uB2/UA52FiNO+xux+UaiZ/gby8Gq3on3RxsriizlOBpzrAK647+8V/3HiuiC
MuWtpRXg5DKAsiZYkYXyB1cXvUq4/Pdqp/IKKxIQiN5lVVUJB39+9PrGw4b6
Sr0sI05XAeFJr5CSMBsqdplfKeiqgrxlu6w0CTY015+vQnOthsP1707sUWBD
nnqNJZUcNaCpJzX4SYMNoQB7u7vxNVAidClQ9gg2PqgBF6JVC7G9CZIfT7Kh
oMj99lRqLURaby+SsWJDuevfSXh618FWxQtWKfZsSHk7mVVEqh6Sl99MS91i
Q7I513gCqushxk30WZI35s+4mf2dRwPcOmqpJBHEhkT+5r1P29gIjvmtNfHP
2FClhfmlomuNMBay2VE8gQ2ZPxP9NYFvBE/rM6xxn9lQRqLfrv3iTeDS3JIg
msOGXH+dWHDzbIJjKYIHX5ewoVAH6qkUYhM0up8ib6ljQ5qvKzWS9jVD+UCD
20sKG+Jj/5liGdEMJvn8G4R72FA21XahZBjjO/vC0p6NsiG1V6wuROMWqGep
PSa4iK3HM5VyMa0FPrTwdkdysiP359e17fiI8Nbwqe8GQXZ0NeeB9pATEXaJ
Vm4LF2dHFrWSfBl1REgf4PzJJ8eOCM+j92YpkSDFNsA8RI0d9d0MODEWQYIH
KoRRHsSOlDOP6J8aJ4F76uGwICN2RDlU+hd/mgzLno9kuc6xI/P2M290s8kQ
aFhcGnAZm+/7gNsP4VbwLtK5xH6THZnKxKRsvNsK5lE+S35emC0kr2xEaYWO
SwWvWALY0VR+hvr5AxRoadVS941kR2NGpRslYjF9lerVuPKGHQ1drxJOWaDA
6e1zzj4f2ZG25/SRBisqtI3s51nKYkfZ3HGt8XlUyC72SLlXyI5c1zcUbROl
wef9U7rzVezIOmb8/FYvGqhwqXbcJbGjNKFvrrGtNChoveU5Q8fWUyyzNU69
DbJOjAl7DLEj3KuwUa5nbRC8Y2/m5Czmz5X3Y/toGzx68fXkbTYOpFmhLixk
3A68DkP9Y/wc6PlCKf3Lx3aI3r8nwEWUA43RRmOTWDvgadonqREZrP+tEOse
6w64/KDvt9M+DtT3KKPBLacDBk7uthzU5kCpv2xfG2/oBDrh/cw1Aw5k/jXA
8qpjJ1x90RPVZ8aBYgIrA0sKO8F23ZW9jjYcaA6nTL8g3AV9bUnVf69zoCn6
dfcDN7qg5Cvd3u4OB4qTEPPSLe6Cnztt2LofcaDKuxg54aUDmnobfymMA91J
4Ns5q0qHSkL7AXoMB4q+dkHz+AU6FGqdb72YwoHsfngc2xdIhxi+2Nsd3ziQ
2FVXyYx0OoT7iQhY52PxK3znLiPTYYvZuS+0cg4UeumsrssKHRJ2vtS3bOZA
gsUjY+kyDHj5WqintQOL/xcrq78xA27eMHt4tp8DZbP1kUdvM2D2YLQoaYoD
6SmbHh+NYcBwpkCuGY4T6ayWZEQVMjD8NjFrXseJ/ohsSsvvZoDTXN2Y6RZO
tJ0WZjM1xIDpSr7QBilOpPLj/KPWDgbUxxrtPqnEiaTcjYfv1jOAIFBNqD3A
iQQ5dhIaMH/GDG5bo6OcyGliNPxfOgNImccWq0w50Ulnnb7ceAbU7i6PMbDm
RM+rHfO1whmQMs+uVuHIiaJtk2WdfRjwxuVx01E3zH+Jh665EwOkEd6J8IAT
yS82bP5nxYA0ARbuI8GcyO+d68NdhgxIDnz4vuQFJ3IlU/jWazDgvkUhQkmc
qD25lvO1NAPY5ZbbCtOw9f0KJZVtZMBC/H2vQ7mcKDGUd/Ullk8/lzyhglJO
5H6TjY9jkA5efzWztBo4Ub2DpcSGVjqw5tw98YvGifg5w0x+4ulAe5LTp9HL
iSRi3lWMfqVD47JaYM44J2p2z+goiaFj+O0mqb7MiRSo1emyj+nwJz6r4Ds3
FzJ3W+yQcqYDRWiflYoQF4qx/oH7eJYOmb0u0xk7uJBdgllzPtAh1Xokeu8e
LqTn7t9tJ0sHZUVFpfT9XMi9mG4bKUCHX8s3qhQOcyGnIynyL8e64JvbgMOX
E1zoKlvE5O6iLgg6Kscqb8mF0s6LbSWGdoHA5qtvU+2w8XtyNsRadgFnaK/W
blculPJEhv+mTBdEWMuQ39/nQpTXNxwcxzohsPmdm/QTLiRtWVXkk9cJ/O/+
8L+LxuJxqDla+LgTet0lP0vGc6GMgJBkWeNOaB9IOJb4iQsVx00Y3drUCQ75
nX+2/+BCtTSfeXlaB4yEiD94W8yFGpuUGkQSO+AvS9w2sVou1DcR8lPLvgMK
W2g5sa1ciE89UAAv1wHZhpbmW7u5kIA2t1HgcDtoi8aMvhrB/IU1On3OaMfw
mxy8eYELGUvTAjXd2qHA9ozsCw5uxK6rM3ZcvR2eqzwv3bSRG4lV+Qn3z7SB
OFvLxWgxbjQVqO6ukdsGQl6nlgRkuZGmahVjxrMN4gwjX0WociNpYS3nFwfa
4FkRvzo/cCM7y2fb2BZoIBZ5ojH0OOZ/Sv3zuTwaTF0KvbHuLDcaGnjQzfx7
2IFWXp7gS9wIKXScmdGiwe1UwxRuZ25kPa/Q8HiRCkueQfDEkxvFJfOKWRdQ
YWKEs4PDnxtps/f/DvWhQnXxUU//CG6kEE+6oAZUKNlPEGZ7w41yj7SvurNQ
4TgXW+ajD9zI+81uJy8CBZpbdY1xWdxo6Ro/WSKIAlUnivsf/OZGsm8NlEnG
FEjeseq/XMmNRNJmcoMEKSA/dkjCm8iNDM5XPNCgtoKEQ8HvhS5uNHYjVdch
qRU+7V+08BrkRkKMnsC5660Yn/eamZ3hRu1SHWHr97eCrE9u1B1WHuT/JHi4
jLUVWExmFabX86ClcPuBI01kmCV4VLtt5UFT1A/i75LI4Psi235CmgeNiTva
criTgcdhEndLmQddTaCXuRiQYaXtVvzoQaz/o115wjvIQPmaceDmMR5k4JQY
zjJHgvqde1uHTvOgxoSoK/otJDg75Xz7xkUeFCOwT5EtkwRdhLT1A9ew8UI/
1mlGkYCstefLVQ8eRH/3rkTQnQTf+K7r//PlQQXrySm+liTQ6Ehl2IfyoGK1
TPt4XRIomu1+2POKBylPR3o7KpAgZ6eD6JV3PCh0/Q6eP1tJkPa65ycjnQdp
nusV+MtDArXrO81s83hQ++3pK8+WiMCvfXmks4wHWc+VzBPHicCeRQ+50MSD
JAovIK9+IoT67djd3s6DjL+t4kK7ibDZ7CLeqo8H9TWZm/R2EYGvqt2GOomt
d13l0dOdRPgbu23x3CoPIuwrVSzA7DaB2BgyLy9ScOrQHKUTwY5BUT2zmRcJ
eT91LOohwlDmloYWSV5kvDQjunuACH92v3Q6rciLgoxFdxwaI0L+PJGrSZMX
5Zr/M/SdJYJe9aZ3Jnq8yPbWvQ0PVomghaJRvQkvovgrhy9xkQAv0NRmfJ4X
4Q7s+PBSgAR5gSZeNQ6Yf4reE20sH4fPhQsdv435D40dT5ckgahc3bdKH160
VLxtkvn/EAIJRieOPeVFAibaQVv3kSDWJbiv7Dkv6vvK0ZujQQIpVPVYL5EX
uS/WIeb/W4jkHJMs/cKLtIdbtQjYfow/CSzQ/YnFS41WYztKgr5ldqtiPC+y
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
              "]]}, "Charting`Private`Tag#7"], 
           Annotation[{
             Hue[0.3224758424985268, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
LK/jR//+f83/A4T6v08=
              "]]}, "Charting`Private`Tag#8"], 
           Annotation[{
             Hue[0.5585438199983166, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Line[CompressedData["
1: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
nzU=
              "]], 
             Line[CompressedData["
1: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
KcD//c/8Ayu6GxY=
              "]]}, "Charting`Private`Tag#9"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]], 
             Directive[
              PointSize[
               Rational[1, 360]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
        Annotation[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
Pl3JjlmIjvYy1pXC/wdcElTm
           "]]}, "Charting`Private`Tag#6"], 
        Annotation[{
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJxFe3k81FH3/9iXJImSKEQhJEskOVdJRFFUSFFZWohCUZSEZKdNki2VSkKS
kGWMfWdmzIxtJpJ939ffZ56v5/n5x+u87r3nnnvuve/7fp8PkpddTtuz4nA4
CTYcjvn7vz8CD0+QU4+RQN+jKU1p+Q7MqV0zYv+fHQiuPpvNWI+SIGXfYd2/
h6KgPcHwep4uCWbC7wwpL7+EylPsl7QPYf2HPr/yLogDBYHMhx80SFCb4iLZ
cygJsu9X7duxjwQeLTyzT8VTQGLvqneO3H/HfwBZ7c/R3yRJEP9bAE9u/wS+
hz4H62z9r780EFFcKYwRIMGo6FFnqbhvkPs6d+Iv13/9ZwJdQVE7epUIEgXa
fD+/ZkG2+W/fJ7NEoG+dDAwWzwZbBlvR/jEiqO0rvnUh7AcIvfMfWuknwlOD
MGvl5RzABRgUV/QQodPG6hibcy7onUotVmAQQfXubhVy+y/Qc0u/ndVJhEli
R9on43wwD6jNMcHs/4uvAPy5sje2dREhls3Tz0ShEFzFT+6K6CauxVsErltq
Ze5g80lu5UlbCCgGbydoLR8nAquB3bWeQyVgm01PfbpEhLSW6s666RKIkX+s
TOEhwVmbfeY/v+JBrJYjqwLLB8vgq6pE+1LwNHcZuqBAgs93VnSCxQmQqyU5
9grbjzOs9tluJAK479sQ9ciStLbeMiCoHEtc506CroJd//SPloPmrC+/YhRp
bf3lkLI+98ViBtafONm09UcF1CZfDIMW0lo+KsG0/5bc3CwJCsN/sA9LV4F2
25dU6R1kuCoqdo/cXgVTtLGeqwZkEPzgN1r0vBoSK6x4VtzIULCv3+6TcQ3Y
SQv0v0wig8NvE1o0ey0QEzWU9JvIa/mrBfbyTSnlrK0wdnfjegf3OuAL2ZDP
vb91LZ/14J2+UWzieiscjeic1eyph56bklTnJKz/f/LbAN5filzCqK1wouXM
OId8I+htqdX3F6RAwXW2xoWARkDhVjs6jSkQlZETPMrA7OyB+ptBFHCcuXa0
51ATJG6wu2tLoIC2tjiO+roJYs5Q+FxZqCDo15hXN90EfMpPNPcBFR5tffAa
f6oZnp/b+CfIh7q2P80QmfpX17KACgrve/jTeFoAt7M04NUiFXD/2a8WmGuw
dZ/WogFR2cj/RUkL5HI0fH1/jwb6lXOXg8WJcFV35IhVHg1E+dPEH3oRYSqc
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
CBjhxx0jgWv9kWmdel5UIHM89Btm/z9B6bDk
           "]]}, "Charting`Private`Tag#7"], 
        Annotation[{
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
LK/jR//+f83/A4T6v08=
           "]]}, "Charting`Private`Tag#8"], 
        Annotation[{
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 360]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
nzU=
           "]], 
          Line[CompressedData["
1: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
KcD//c/8Ayu6GxY=
           "]]}, "Charting`Private`Tag#9"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
         "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{}, 
    InterpretationBox[{
      TagBox[{{}, {}, {}, {}, {}, {}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], Thickness[0.005], 
          LineBox[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
           "]], LineBox[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
           "]], LineBox[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
           "]], LineBox[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
           "]], LineBox[CompressedData["
1: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

           "]]},
         Annotation[#, "Charting`Private`Tag#6"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {}, {}, {}, 
           Annotation[{
             Hue[0.8503398874989481, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
              "]], 
             Line[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
              "]], 
             Line[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
              "]], 
             Line[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
              "]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#6"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 180]], 
               AbsoluteThickness[2], 
               Thickness[0.005], 
               RGBColor[0, 0, 1]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 180]], 
              AbsoluteThickness[2], 
              Thickness[0.005], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]},
     Annotation[{{{}, {}, {}, {}, {}, {}, {}, 
        Annotation[{
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 180]], 
           AbsoluteThickness[2], 
           Thickness[0.005], 
           RGBColor[0, 0, 1]], 
          Line[CompressedData["
1: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
c+22luVI4TFxxPg/FJx4mQ==
           "]], 
          Line[CompressedData["
1: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
svMnsOK363xnRt9r9tyvtmPw//T+fwC+3Ty1
           "]], 
          Line[CompressedData["
1:eJxNlAswVmkcxt12xWorpJKNSIRkC/uh8bglIkmiVF8Npc0llSRRIWyJUIiK
kkukYVk+JSG6aEmFxIRinNPHKtEq5yJ7zs5ss2fmzJln3nfO+/7//+f5LfYO
ctsjJSEhIeRe/quVNfU8u2kSvv8+JI74e4TTnE7PGi/Q47TQPE0lrGMSGnXO
Li1CEmvkOsq+vJmEgu7BogRPEsu7FNcf+WsSzn35YQGuJJRvbBT//XkSHzLK
qw85kmBDkk8FS1GQf5bYn2FDYjDJRWt8JoWbx7Y39VuQaBYm1h5YQKFr7rlw
FxMSYqOWraNLKDg8vnCrx5DE82n5iUAjCjUBBTNSdEmIWh2TRywo+Olf7vPT
JHFVLGvkv5bClsiYy/5qJOKq7JuH3Cgc+3m+c4oKif1xsb6/CikYPeuU7ptN
YvPmB5Lv9lGI8Dg95f4DidVLpLP2hFCovnQ16eN3JLQt768ejKQgqLS4VylB
YuZMiS7vBApLndwsixgCn15bBvdfpNAQFZpU95nAnJLjP+7KpTCg13hkeowA
FVFT1FdCQZN6N7HvPYG3TozdjmoKPSfloiSHCDzZc2fw9UMK9dq1Aw2DBH43
njzp9YJCQNb6qOK3BC5K/7Kwu4eCRlzbh4YeAifaQkSeYu684t4dMt0EfHMq
NnZ+orBa1Xfk8EsCLncPjblPU3Be4TV3YRsBk/iyhHZ5Gqrbl1UPthJQ2/pR
x02FhpddRvPrZgLm+isany+mUZ6qFC/xhIAmHSjcsJyGcDS6bNMjAvLKBl+f
Cmh0zJcY6WgkMDbgl+lsR8Puzm1R7H0C3WVFxs0baNjb5qf51xGojxQ/c9xG
Y1LP1vfoPQKFG3T8m3xptBmKK+vvEkha5Pv92kM06n0OhKtXEwgVLCl4eJzG
Oipvf8NtAkJZH2u7MzSWLpg/lVJFIKI7p6chlYaYyYmMFxHYXfg21PoaV88l
U4WKSgLrQtWV6otpdOoEmSpwelVKb7llFY3kookdaRUEVHepudxroNE173ij
M6elVmwbsmilUVgpiDD5nzYwfufEa/FUZkx1Nw0p24x2fv+Lli51M4KGi3yZ
FP+/ajK9ruojjegXAhX+vGuVL71MWa4/U6lz+PucjlH+XCHLwEEh8BF/3zyP
TSmrlBjsr7zzha8nQfu8Qfki5lu9IXBtMdJjkC7Y7M/3Y/uPSXtLTRh4D7/y
r+D6Zdf7VMrQmttv7R4YxvXT4JZC9i1nBrWydeD7rRjuZKa/hYHBmiR/fh60
Y3xHkQ+D7FWuIn5e/T4Oh3WDGMhcGR3j59m08rdZN44xEIc11vHzJmUe3dSO
Y+ASL13A+6G1XcY+L4XBUpXaN7xfKq/b9mtmMRhZlPRMlfNTdo1kVE4hA73c
TCvebzFnrdQ0KhjkmXsG834M8DpZlV3HfPPrpmW1bj81M6gwGw3n/Ww+yb6/
3Mmti9q97nN+11K8m6g6wMCwEzl8HuT7Kd3M9wxS6/Mk/Li8jJcKHsyjGJhG
Uel8nmZHh+5Ml2HhffCWI5+3L64iWnk2iwzFWY58HvvUJ9IuLGRx+KLDeT6v
j83+MFHUYTH4sPoqn+eSGePPk1eyEAnS2vi8p74yCphlycIqrqmpl+NBREGQ
7DlHFuvkrl3hebE7pOS6wmYW9k/Od/I8cU4KsDm7i0XPuOcQzxtjYXGvXAC3
P39oKpnjkdry4aOnQ1nEFF2L4nklmNZVlj3FokQvI2Y9xzON1r2lsedYGFLy
GTzvZoi1N8hcYiHTZmSTyfFwVLR7ODqfhcKfSgnBHC87Y3NjJctYeGyZGxfI
8bTWfUAjsobFidKs6TMcbwu0Ftd8fcwi2yr7BM/jxPGdnsfbufWhXBt9jtfN
wz4yXZz+j+f/APLWHR8=
           "]], 
          Line[CompressedData["
1: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
fXT+w0FFAv837/8H00u87Q==
           "]], 
          Line[CompressedData["
1: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

           "]]}, "Charting`Private`Tag#6"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0., 3.3507060204809065`}, {-1.2, 0.7}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 270}, "Axes" -> {False, False}, 
         "LabelStyle" -> {}, "AspectRatio" -> Rational[3, 4], "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[1, 180]], 
            AbsoluteThickness[2], 
            Thickness[0.005], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Background->GrayLevel[1],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"Energy(eV)\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"Wave vector\"", FontFamily -> "Times New Roman", 16, StripOnInput -> 
        False], HoldForm], TraditionalForm], None}},
  FrameStyle->Directive[
    RGBColor[0.5, 0, 0.5]],
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}, {1.1168981385747547`, 
       FormBox["\"K\"", TraditionalForm]}, {1.6753501048542039`, 
       FormBox["\"M\"", TraditionalForm]}, {2.2338020711336526`, 
       FormBox["\"-K\"", TraditionalForm]}, {3.3507060204809065`, 
       FormBox["\"\[CapitalGamma]\"", TraditionalForm]}}, None}},
  GridLines->{{0., 1.1168981385747547`, 1.6753501048542039`, 
    2.2338020711336526`, 3.3507060204809065`}, {0}},
  GridLinesStyle->Directive[
    RGBColor[1, 0.5, 0], 
    Dashing[{Small, Small}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.3507060204809065`}, {-1.2, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9153213445956297`*^9, 3.9154104165025144`*^9, 3.915414931616971*^9, {
   3.915622527221817*^9, 3.915622556165405*^9}, 3.9156229093723383`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"6f933bad-30ff-47cf-8782-df3c03eb61d4"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1525.2, 790.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "Rashba", "Supercurrent", "vaspkit", "dat", "Mele"}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (2023\:5e747\:670824\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e7783da2-abc1-49ed-935a-fc2dfaa7ab43"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 276, 5, 50, "Code",ExpressionUUID->"120bc86f-99f2-4371-9e3c-11c122df7879"],
Cell[CellGroupData[{
Cell[859, 29, 154, 3, 45, "Subsubsection",ExpressionUUID->"fa4c04cc-e4ba-41ca-aa38-cd6124b341bf"],
Cell[CellGroupData[{
Cell[1038, 36, 196, 3, 50, "Code",ExpressionUUID->"dcafb7bb-0af5-4f73-8745-48c28e439be6"],
Cell[1237, 41, 45877, 943, 775, "Output",ExpressionUUID->"372c6170-6622-4439-b1dd-4933f0cf8f5e"]
}, Open  ]],
Cell[47129, 987, 1373, 32, 121, "Code",ExpressionUUID->"88a832bf-feef-47d7-9737-a0ffe95f9284"],
Cell[CellGroupData[{
Cell[48527, 1023, 1149, 21, 68, "Code",ExpressionUUID->"198eb38e-4025-4439-80e7-59f7ef4f7cae"],
Cell[49679, 1046, 52341, 943, 277, "Output",ExpressionUUID->"d31ef232-3c9e-4e1a-b0cc-eac7216656ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102057, 1994, 457, 7, 50, "Code",ExpressionUUID->"51e7a0e0-7e72-4aae-97c0-6852beb3d7a3"],
Cell[102517, 2003, 19720, 439, 361, "Output",ExpressionUUID->"921749e9-ca14-4fe7-a1a1-a60d1a08cbbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122274, 2447, 690, 20, 86, "Code",ExpressionUUID->"d2859d8a-214a-49bb-8ef8-ef4611e7d2e1"],
Cell[122967, 2469, 689, 16, 32, "Output",ExpressionUUID->"15080554-5056-40f3-bb3a-6e92af4ea8cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123693, 2490, 1149, 31, 86, "Code",ExpressionUUID->"99578874-1c07-4af2-b643-ad476c1fd961"],
Cell[124845, 2523, 157372, 2726, 288, "Output",ExpressionUUID->"c8dd9b2a-c872-4a6d-8397-c9fd5f6a2946"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282254, 5254, 1092, 30, 86, "Code",ExpressionUUID->"b330f49b-ecc3-442c-9867-2a498e0ccb49"],
Cell[283349, 5286, 55164, 996, 288, "Output",ExpressionUUID->"1e2bdd56-6d39-45c5-8ec7-ea09187f33ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338550, 6287, 238, 4, 50, "Code",ExpressionUUID->"4067600c-18f1-4f30-8d36-3de24ad8bfc4"],
Cell[338791, 6293, 208739, 3616, 288, "Output",ExpressionUUID->"d110bb04-310f-45be-87d3-3eddde348396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547567, 9914, 1169, 27, 68, "Code",ExpressionUUID->"71a4509f-26b4-4933-9a99-075a3c035929"],
Cell[548739, 9943, 59070, 1047, 260, "Output",ExpressionUUID->"097f2ca8-f768-4e28-ba6b-1b046fd401bd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[607858, 10996, 156, 3, 37, "Subsubsection",ExpressionUUID->"561ed0b8-4df2-4664-8a46-96ceee9d52e6"],
Cell[CellGroupData[{
Cell[608039, 11003, 581, 9, 50, "Code",ExpressionUUID->"abeb0eaf-9f3a-468d-9ec9-6584974abf62"],
Cell[608623, 11014, 80598, 1667, 847, "Output",ExpressionUUID->"7a8b0c24-92bc-46c7-a963-57fd0a430fbd"]
}, Open  ]],
Cell[689236, 12684, 1397, 32, 121, "Code",ExpressionUUID->"f8467d5b-a775-47d9-8a7b-6dea6609707c"],
Cell[CellGroupData[{
Cell[690658, 12720, 1308, 27, 68, "Code",ExpressionUUID->"f554bc4a-2bd8-4b69-9acb-86d958df6f1f"],
Cell[691969, 12749, 118477, 2106, 710, "Output",ExpressionUUID->"fd0762f5-900f-461c-8cd3-57cf6833a7e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810483, 14860, 668, 18, 68, "Code",ExpressionUUID->"0b28abf9-c86a-479a-af7c-c3393ba6713a"],
Cell[811154, 14880, 117828, 2096, 710, "Output",ExpressionUUID->"ceaf5e67-54e5-4a0e-a07c-1b955e13602a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[929019, 16981, 200, 3, 50, "Code",ExpressionUUID->"4ce2c13a-df23-4387-880d-7b6d911f3f4d"],
Cell[929222, 16986, 21086, 470, 409, "Output",ExpressionUUID->"e0480335-d1cb-450c-9493-b43ed7180af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[950345, 17461, 1037, 27, 121, "Code",ExpressionUUID->"76552027-ba2f-4fef-80b1-3be08a940203"],
Cell[951385, 17490, 985, 21, 32, "Output",ExpressionUUID->"2e5ee25f-0fb3-4b3d-9c99-e2cbb1550a0f"],
Cell[952373, 17513, 1933, 50, 52, "Output",ExpressionUUID->"ab4e4a8a-4514-4115-88e8-7d228b7f2173"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954343, 17568, 913, 26, 68, "Code",ExpressionUUID->"68939c8a-587c-4056-8937-a9bbbdd57832"],
Cell[955259, 17596, 166500, 2881, 288, "Output",ExpressionUUID->"15e5058c-838a-4479-ac4d-91c0fa8cceef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121796, 20482, 874, 26, 121, "Code",ExpressionUUID->"3e042aff-cc0f-4c71-9e61-a4751ab75ae7"],
Cell[1122673, 20510, 716, 17, 32, "Output",ExpressionUUID->"028c204a-afe0-4d8d-b042-697127892bc0"],
Cell[1123392, 20529, 1658, 45, 52, "Output",ExpressionUUID->"13eb65b8-d485-41c3-b871-e8404dad5cdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125087, 20579, 896, 26, 68, "Code",ExpressionUUID->"14e5917a-2164-4fa7-923b-d1e2d80c7db9"],
Cell[1125986, 20607, 55926, 1011, 288, "Output",ExpressionUUID->"289a25de-0313-4220-820b-5f61c4d95940"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181949, 21623, 214, 5, 50, "Code",ExpressionUUID->"8d554cca-6832-41b7-ae43-c1ac28fe90c5"],
Cell[1182166, 21630, 218779, 3788, 288, "Output",ExpressionUUID->"6f933bad-30ff-47cf-8782-df3c03eb61d4"]
}, Open  ]]
}, Closed]]
}
]
*)

